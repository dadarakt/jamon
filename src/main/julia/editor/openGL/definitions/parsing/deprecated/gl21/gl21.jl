module OpenGLStd 

import GetC.@getCFun

typealias GLenum Cuint
typealias GLboolean Cuchar
typealias GLbitfield Cuint
typealias GLvoid Void
typealias GLbyte Cuchar
typealias GLshort Cshort
typealias GLint Cint
typealias GLubyte Cuchar
typealias GLushort Cushort
typealias GLuint Cuint
typealias GLsizei Csize_t
typealias GLfloat Cfloat
typealias GLclampf Cfloat
typealias GLdouble Cdouble
typealias GLclampd Cdouble
typealias GLchar Cchar
typealias GLint64 Clonglong
typealias GLuint64 Culonglong
typealias GLhalf Cushort
typealias GLhalfARB Cushort
typealias GLhalfNV Cushort
typealias GLsync Ptr{Void}
typealias Pointer Ptr{Void}
typealias GLsizeiptr Cint
typealias GLintptr Cptrdiff_t
const X2D = 0x0600
export X2D
const X2_BYTES = 0x1407
export X2_BYTES
const X3D = 0x0601
export X3D
const X3D_COLOR = 0x0602
export X3D_COLOR
const X3D_COLOR_TEXTURE = 0x0603
export X3D_COLOR_TEXTURE
const X3_BYTES = 0x1408
export X3_BYTES
const X4D_COLOR_TEXTURE = 0x0604
export X4D_COLOR_TEXTURE
const X4_BYTES = 0x1409
export X4_BYTES
const ACCUM = 0x0100
export ACCUM
const ACCUM_ALPHA_BITS = 0x0D5B
export ACCUM_ALPHA_BITS
const ACCUM_BLUE_BITS = 0x0D5A
export ACCUM_BLUE_BITS
const ACCUM_BUFFER_BIT = 0x00000200
export ACCUM_BUFFER_BIT
const ACCUM_CLEAR_VALUE = 0x0B80
export ACCUM_CLEAR_VALUE
const ACCUM_GREEN_BITS = 0x0D59
export ACCUM_GREEN_BITS
const ACCUM_RED_BITS = 0x0D58
export ACCUM_RED_BITS
const ADD = 0x0104
export ADD
const ALL_ATTRIB_BITS = 0xFFFFFFFF
export ALL_ATTRIB_BITS
const ALPHA = 0x1906
export ALPHA
const ALPHA12 = 0x803D
export ALPHA12
const ALPHA16 = 0x803E
export ALPHA16
const ALPHA4 = 0x803B
export ALPHA4
const ALPHA8 = 0x803C
export ALPHA8
const ALPHA_BIAS = 0x0D1D
export ALPHA_BIAS
const ALPHA_BITS = 0x0D55
export ALPHA_BITS
const ALPHA_SCALE = 0x0D1C
export ALPHA_SCALE
const ALPHA_TEST = 0x0BC0
export ALPHA_TEST
const ALPHA_TEST_FUNC = 0x0BC1
export ALPHA_TEST_FUNC
const ALPHA_TEST_REF = 0x0BC2
export ALPHA_TEST_REF
const ALWAYS = 0x0207
export ALWAYS
const AMBIENT = 0x1200
export AMBIENT
const AMBIENT_AND_DIFFUSE = 0x1602
export AMBIENT_AND_DIFFUSE
const AND = 0x1501
export AND
const AND_INVERTED = 0x1504
export AND_INVERTED
const AND_REVERSE = 0x1502
export AND_REVERSE
const ATTRIB_STACK_DEPTH = 0x0BB0
export ATTRIB_STACK_DEPTH
const AUTO_NORMAL = 0x0D80
export AUTO_NORMAL
const AUX0 = 0x0409
export AUX0
const AUX1 = 0x040A
export AUX1
const AUX2 = 0x040B
export AUX2
const AUX3 = 0x040C
export AUX3
const AUX_BUFFERS = 0x0C00
export AUX_BUFFERS
const BACK = 0x0405
export BACK
const BACK_LEFT = 0x0402
export BACK_LEFT
const BACK_RIGHT = 0x0403
export BACK_RIGHT
const BITMAP = 0x1A00
export BITMAP
const BITMAP_TOKEN = 0x0704
export BITMAP_TOKEN
const BLEND = 0x0BE2
export BLEND
const BLEND_DST = 0x0BE0
export BLEND_DST
const BLEND_SRC = 0x0BE1
export BLEND_SRC
const BLUE = 0x1905
export BLUE
const BLUE_BIAS = 0x0D1B
export BLUE_BIAS
const BLUE_BITS = 0x0D54
export BLUE_BITS
const BLUE_SCALE = 0x0D1A
export BLUE_SCALE
const BYTE = 0x1400
export BYTE
const C3F_V3F = 0x2A24
export C3F_V3F
const C4F_N3F_V3F = 0x2A26
export C4F_N3F_V3F
const C4UB_V2F = 0x2A22
export C4UB_V2F
const C4UB_V3F = 0x2A23
export C4UB_V3F
const CCW = 0x0901
export CCW
const CLAMP = 0x2900
export CLAMP
const CLEAR = 0x1500
export CLEAR
const CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF
export CLIENT_ALL_ATTRIB_BITS
const CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1
export CLIENT_ATTRIB_STACK_DEPTH
const CLIENT_PIXEL_STORE_BIT = 0x00000001
export CLIENT_PIXEL_STORE_BIT
const CLIENT_VERTEX_ARRAY_BIT = 0x00000002
export CLIENT_VERTEX_ARRAY_BIT
const CLIP_PLANE0 = 0x3000
export CLIP_PLANE0
const CLIP_PLANE1 = 0x3001
export CLIP_PLANE1
const CLIP_PLANE2 = 0x3002
export CLIP_PLANE2
const CLIP_PLANE3 = 0x3003
export CLIP_PLANE3
const CLIP_PLANE4 = 0x3004
export CLIP_PLANE4
const CLIP_PLANE5 = 0x3005
export CLIP_PLANE5
const COEFF = 0x0A00
export COEFF
const COLOR = 0x1800
export COLOR
const COLOR_ARRAY = 0x8076
export COLOR_ARRAY
const COLOR_ARRAY_POINTER = 0x8090
export COLOR_ARRAY_POINTER
const COLOR_ARRAY_SIZE = 0x8081
export COLOR_ARRAY_SIZE
const COLOR_ARRAY_STRIDE = 0x8083
export COLOR_ARRAY_STRIDE
const COLOR_ARRAY_TYPE = 0x8082
export COLOR_ARRAY_TYPE
const COLOR_BUFFER_BIT = 0x00004000
export COLOR_BUFFER_BIT
const COLOR_CLEAR_VALUE = 0x0C22
export COLOR_CLEAR_VALUE
const COLOR_INDEX = 0x1900
export COLOR_INDEX
const COLOR_INDEXES = 0x1603
export COLOR_INDEXES
const COLOR_LOGIC_OP = 0x0BF2
export COLOR_LOGIC_OP
const COLOR_MATERIAL = 0x0B57
export COLOR_MATERIAL
const COLOR_MATERIAL_FACE = 0x0B55
export COLOR_MATERIAL_FACE
const COLOR_MATERIAL_PARAMETER = 0x0B56
export COLOR_MATERIAL_PARAMETER
const COLOR_WRITEMASK = 0x0C23
export COLOR_WRITEMASK
const COMPILE = 0x1300
export COMPILE
const COMPILE_AND_EXECUTE = 0x1301
export COMPILE_AND_EXECUTE
const CONSTANT_ATTENUATION = 0x1207
export CONSTANT_ATTENUATION
const COPY = 0x1503
export COPY
const COPY_INVERTED = 0x150C
export COPY_INVERTED
const COPY_PIXEL_TOKEN = 0x0706
export COPY_PIXEL_TOKEN
const CULL_FACE = 0x0B44
export CULL_FACE
const CULL_FACE_MODE = 0x0B45
export CULL_FACE_MODE
const CURRENT_BIT = 0x00000001
export CURRENT_BIT
const CURRENT_COLOR = 0x0B00
export CURRENT_COLOR
const CURRENT_INDEX = 0x0B01
export CURRENT_INDEX
const CURRENT_NORMAL = 0x0B02
export CURRENT_NORMAL
const CURRENT_RASTER_COLOR = 0x0B04
export CURRENT_RASTER_COLOR
const CURRENT_RASTER_DISTANCE = 0x0B09
export CURRENT_RASTER_DISTANCE
const CURRENT_RASTER_INDEX = 0x0B05
export CURRENT_RASTER_INDEX
const CURRENT_RASTER_POSITION = 0x0B07
export CURRENT_RASTER_POSITION
const CURRENT_RASTER_POSITION_VALID = 0x0B08
export CURRENT_RASTER_POSITION_VALID
const CURRENT_RASTER_TEXTURE_COORDS = 0x0B06
export CURRENT_RASTER_TEXTURE_COORDS
const CURRENT_TEXTURE_COORDS = 0x0B03
export CURRENT_TEXTURE_COORDS
const CW = 0x0900
export CW
const DECAL = 0x2101
export DECAL
const DECR = 0x1E03
export DECR
const DEPTH = 0x1801
export DEPTH
const DEPTH_BIAS = 0x0D1F
export DEPTH_BIAS
const DEPTH_BITS = 0x0D56
export DEPTH_BITS
const DEPTH_BUFFER_BIT = 0x00000100
export DEPTH_BUFFER_BIT
const DEPTH_CLEAR_VALUE = 0x0B73
export DEPTH_CLEAR_VALUE
const DEPTH_COMPONENT = 0x1902
export DEPTH_COMPONENT
const DEPTH_FUNC = 0x0B74
export DEPTH_FUNC
const DEPTH_RANGE = 0x0B70
export DEPTH_RANGE
const DEPTH_SCALE = 0x0D1E
export DEPTH_SCALE
const DEPTH_TEST = 0x0B71
export DEPTH_TEST
const DEPTH_WRITEMASK = 0x0B72
export DEPTH_WRITEMASK
const DIFFUSE = 0x1201
export DIFFUSE
const DITHER = 0x0BD0
export DITHER
const DOMAIN = 0x0A02
export DOMAIN
const DONT_CARE = 0x1100
export DONT_CARE
const DOUBLE = 0x140A
export DOUBLE
const DOUBLEBUFFER = 0x0C32
export DOUBLEBUFFER
const DRAW_BUFFER = 0x0C01
export DRAW_BUFFER
const DRAW_PIXEL_TOKEN = 0x0705
export DRAW_PIXEL_TOKEN
const DST_ALPHA = 0x0304
export DST_ALPHA
const DST_COLOR = 0x0306
export DST_COLOR
const EDGE_FLAG = 0x0B43
export EDGE_FLAG
const EDGE_FLAG_ARRAY = 0x8079
export EDGE_FLAG_ARRAY
const EDGE_FLAG_ARRAY_POINTER = 0x8093
export EDGE_FLAG_ARRAY_POINTER
const EDGE_FLAG_ARRAY_STRIDE = 0x808C
export EDGE_FLAG_ARRAY_STRIDE
const EMISSION = 0x1600
export EMISSION
const ENABLE_BIT = 0x00002000
export ENABLE_BIT
const EQUAL = 0x0202
export EQUAL
const EQUIV = 0x1509
export EQUIV
const EVAL_BIT = 0x00010000
export EVAL_BIT
const EXP = 0x0800
export EXP
const EXP2 = 0x0801
export EXP2
const EXTENSIONS = 0x1F03
export EXTENSIONS
const EYE_LINEAR = 0x2400
export EYE_LINEAR
const EYE_PLANE = 0x2502
export EYE_PLANE
const FALSE = 0
export FALSE
const FASTEST = 0x1101
export FASTEST
const FEEDBACK = 0x1C01
export FEEDBACK
const FEEDBACK_BUFFER_POINTER = 0x0DF0
export FEEDBACK_BUFFER_POINTER
const FEEDBACK_BUFFER_SIZE = 0x0DF1
export FEEDBACK_BUFFER_SIZE
const FEEDBACK_BUFFER_TYPE = 0x0DF2
export FEEDBACK_BUFFER_TYPE
const FILL = 0x1B02
export FILL
const FLAT = 0x1D00
export FLAT
const FLOAT = 0x1406
export FLOAT
const FOG = 0x0B60
export FOG
const FOG_BIT = 0x00000080
export FOG_BIT
const FOG_COLOR = 0x0B66
export FOG_COLOR
const FOG_DENSITY = 0x0B62
export FOG_DENSITY
const FOG_END = 0x0B64
export FOG_END
const FOG_HINT = 0x0C54
export FOG_HINT
const FOG_INDEX = 0x0B61
export FOG_INDEX
const FOG_MODE = 0x0B65
export FOG_MODE
const FOG_START = 0x0B63
export FOG_START
const FRONT = 0x0404
export FRONT
const FRONT_AND_BACK = 0x0408
export FRONT_AND_BACK
const FRONT_FACE = 0x0B46
export FRONT_FACE
const FRONT_LEFT = 0x0400
export FRONT_LEFT
const FRONT_RIGHT = 0x0401
export FRONT_RIGHT
const GEQUAL = 0x0206
export GEQUAL
const GREATER = 0x0204
export GREATER
const GREEN = 0x1904
export GREEN
const GREEN_BIAS = 0x0D19
export GREEN_BIAS
const GREEN_BITS = 0x0D53
export GREEN_BITS
const GREEN_SCALE = 0x0D18
export GREEN_SCALE
const HINT_BIT = 0x00008000
export HINT_BIT
const INCR = 0x1E02
export INCR
const INDEX_ARRAY = 0x8077
export INDEX_ARRAY
const INDEX_ARRAY_POINTER = 0x8091
export INDEX_ARRAY_POINTER
const INDEX_ARRAY_STRIDE = 0x8086
export INDEX_ARRAY_STRIDE
const INDEX_ARRAY_TYPE = 0x8085
export INDEX_ARRAY_TYPE
const INDEX_BITS = 0x0D51
export INDEX_BITS
const INDEX_CLEAR_VALUE = 0x0C20
export INDEX_CLEAR_VALUE
const INDEX_LOGIC_OP = 0x0BF1
export INDEX_LOGIC_OP
const INDEX_MODE = 0x0C30
export INDEX_MODE
const INDEX_OFFSET = 0x0D13
export INDEX_OFFSET
const INDEX_SHIFT = 0x0D12
export INDEX_SHIFT
const INDEX_WRITEMASK = 0x0C21
export INDEX_WRITEMASK
const INT = 0x1404
export INT
const INTENSITY = 0x8049
export INTENSITY
const INTENSITY12 = 0x804C
export INTENSITY12
const INTENSITY16 = 0x804D
export INTENSITY16
const INTENSITY4 = 0x804A
export INTENSITY4
const INTENSITY8 = 0x804B
export INTENSITY8
const INVALID_ENUM = 0x0500
export INVALID_ENUM
const INVALID_OPERATION = 0x0502
export INVALID_OPERATION
const INVALID_VALUE = 0x0501
export INVALID_VALUE
const INVERT = 0x150A
export INVERT
const KEEP = 0x1E00
export KEEP
const LEFT = 0x0406
export LEFT
const LEQUAL = 0x0203
export LEQUAL
const LESS = 0x0201
export LESS
const LIGHT0 = 0x4000
export LIGHT0
const LIGHT1 = 0x4001
export LIGHT1
const LIGHT2 = 0x4002
export LIGHT2
const LIGHT3 = 0x4003
export LIGHT3
const LIGHT4 = 0x4004
export LIGHT4
const LIGHT5 = 0x4005
export LIGHT5
const LIGHT6 = 0x4006
export LIGHT6
const LIGHT7 = 0x4007
export LIGHT7
const LIGHTING = 0x0B50
export LIGHTING
const LIGHTING_BIT = 0x00000040
export LIGHTING_BIT
const LIGHT_MODEL_AMBIENT = 0x0B53
export LIGHT_MODEL_AMBIENT
const LIGHT_MODEL_LOCAL_VIEWER = 0x0B51
export LIGHT_MODEL_LOCAL_VIEWER
const LIGHT_MODEL_TWO_SIDE = 0x0B52
export LIGHT_MODEL_TWO_SIDE
const LINE = 0x1B01
export LINE
const LINEAR = 0x2601
export LINEAR
const LINEAR_ATTENUATION = 0x1208
export LINEAR_ATTENUATION
const LINEAR_MIPMAP_LINEAR = 0x2703
export LINEAR_MIPMAP_LINEAR
const LINEAR_MIPMAP_NEAREST = 0x2701
export LINEAR_MIPMAP_NEAREST
const LINES = 0x0001
export LINES
const LINE_BIT = 0x00000004
export LINE_BIT
const LINE_LOOP = 0x0002
export LINE_LOOP
const LINE_RESET_TOKEN = 0x0707
export LINE_RESET_TOKEN
const LINE_SMOOTH = 0x0B20
export LINE_SMOOTH
const LINE_SMOOTH_HINT = 0x0C52
export LINE_SMOOTH_HINT
const LINE_STIPPLE = 0x0B24
export LINE_STIPPLE
const LINE_STIPPLE_PATTERN = 0x0B25
export LINE_STIPPLE_PATTERN
const LINE_STIPPLE_REPEAT = 0x0B26
export LINE_STIPPLE_REPEAT
const LINE_STRIP = 0x0003
export LINE_STRIP
const LINE_TOKEN = 0x0702
export LINE_TOKEN
const LINE_WIDTH = 0x0B21
export LINE_WIDTH
const LINE_WIDTH_GRANULARITY = 0x0B23
export LINE_WIDTH_GRANULARITY
const LINE_WIDTH_RANGE = 0x0B22
export LINE_WIDTH_RANGE
const LIST_BASE = 0x0B32
export LIST_BASE
const LIST_BIT = 0x00020000
export LIST_BIT
const LIST_INDEX = 0x0B33
export LIST_INDEX
const LIST_MODE = 0x0B30
export LIST_MODE
const LOAD = 0x0101
export LOAD
const LOGIC_OP = 0x0BF1
export LOGIC_OP
const LOGIC_OP_MODE = 0x0BF0
export LOGIC_OP_MODE
const LUMINANCE = 0x1909
export LUMINANCE
const LUMINANCE12 = 0x8041
export LUMINANCE12
const LUMINANCE12_ALPHA12 = 0x8047
export LUMINANCE12_ALPHA12
const LUMINANCE12_ALPHA4 = 0x8046
export LUMINANCE12_ALPHA4
const LUMINANCE16 = 0x8042
export LUMINANCE16
const LUMINANCE16_ALPHA16 = 0x8048
export LUMINANCE16_ALPHA16
const LUMINANCE4 = 0x803F
export LUMINANCE4
const LUMINANCE4_ALPHA4 = 0x8043
export LUMINANCE4_ALPHA4
const LUMINANCE6_ALPHA2 = 0x8044
export LUMINANCE6_ALPHA2
const LUMINANCE8 = 0x8040
export LUMINANCE8
const LUMINANCE8_ALPHA8 = 0x8045
export LUMINANCE8_ALPHA8
const LUMINANCE_ALPHA = 0x190A
export LUMINANCE_ALPHA
const MAP1_COLOR_4 = 0x0D90
export MAP1_COLOR_4
const MAP1_GRID_DOMAIN = 0x0DD0
export MAP1_GRID_DOMAIN
const MAP1_GRID_SEGMENTS = 0x0DD1
export MAP1_GRID_SEGMENTS
const MAP1_INDEX = 0x0D91
export MAP1_INDEX
const MAP1_NORMAL = 0x0D92
export MAP1_NORMAL
const MAP1_TEXTURE_COORD_1 = 0x0D93
export MAP1_TEXTURE_COORD_1
const MAP1_TEXTURE_COORD_2 = 0x0D94
export MAP1_TEXTURE_COORD_2
const MAP1_TEXTURE_COORD_3 = 0x0D95
export MAP1_TEXTURE_COORD_3
const MAP1_TEXTURE_COORD_4 = 0x0D96
export MAP1_TEXTURE_COORD_4
const MAP1_VERTEX_3 = 0x0D97
export MAP1_VERTEX_3
const MAP1_VERTEX_4 = 0x0D98
export MAP1_VERTEX_4
const MAP2_COLOR_4 = 0x0DB0
export MAP2_COLOR_4
const MAP2_GRID_DOMAIN = 0x0DD2
export MAP2_GRID_DOMAIN
const MAP2_GRID_SEGMENTS = 0x0DD3
export MAP2_GRID_SEGMENTS
const MAP2_INDEX = 0x0DB1
export MAP2_INDEX
const MAP2_NORMAL = 0x0DB2
export MAP2_NORMAL
const MAP2_TEXTURE_COORD_1 = 0x0DB3
export MAP2_TEXTURE_COORD_1
const MAP2_TEXTURE_COORD_2 = 0x0DB4
export MAP2_TEXTURE_COORD_2
const MAP2_TEXTURE_COORD_3 = 0x0DB5
export MAP2_TEXTURE_COORD_3
const MAP2_TEXTURE_COORD_4 = 0x0DB6
export MAP2_TEXTURE_COORD_4
const MAP2_VERTEX_3 = 0x0DB7
export MAP2_VERTEX_3
const MAP2_VERTEX_4 = 0x0DB8
export MAP2_VERTEX_4
const MAP_COLOR = 0x0D10
export MAP_COLOR
const MAP_STENCIL = 0x0D11
export MAP_STENCIL
const MATRIX_MODE = 0x0BA0
export MATRIX_MODE
const MAX_ATTRIB_STACK_DEPTH = 0x0D35
export MAX_ATTRIB_STACK_DEPTH
const MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B
export MAX_CLIENT_ATTRIB_STACK_DEPTH
const MAX_CLIP_PLANES = 0x0D32
export MAX_CLIP_PLANES
const MAX_EVAL_ORDER = 0x0D30
export MAX_EVAL_ORDER
const MAX_LIGHTS = 0x0D31
export MAX_LIGHTS
const MAX_LIST_NESTING = 0x0B31
export MAX_LIST_NESTING
const MAX_MODELVIEW_STACK_DEPTH = 0x0D36
export MAX_MODELVIEW_STACK_DEPTH
const MAX_NAME_STACK_DEPTH = 0x0D37
export MAX_NAME_STACK_DEPTH
const MAX_PIXEL_MAP_TABLE = 0x0D34
export MAX_PIXEL_MAP_TABLE
const MAX_PROJECTION_STACK_DEPTH = 0x0D38
export MAX_PROJECTION_STACK_DEPTH
const MAX_TEXTURE_SIZE = 0x0D33
export MAX_TEXTURE_SIZE
const MAX_TEXTURE_STACK_DEPTH = 0x0D39
export MAX_TEXTURE_STACK_DEPTH
const MAX_VIEWPORT_DIMS = 0x0D3A
export MAX_VIEWPORT_DIMS
const MODELVIEW = 0x1700
export MODELVIEW
const MODELVIEW_MATRIX = 0x0BA6
export MODELVIEW_MATRIX
const MODELVIEW_STACK_DEPTH = 0x0BA3
export MODELVIEW_STACK_DEPTH
const MODULATE = 0x2100
export MODULATE
const MULT = 0x0103
export MULT
const N3F_V3F = 0x2A25
export N3F_V3F
const NAME_STACK_DEPTH = 0x0D70
export NAME_STACK_DEPTH
const NAND = 0x150E
export NAND
const NEAREST = 0x2600
export NEAREST
const NEAREST_MIPMAP_LINEAR = 0x2702
export NEAREST_MIPMAP_LINEAR
const NEAREST_MIPMAP_NEAREST = 0x2700
export NEAREST_MIPMAP_NEAREST
const NEVER = 0x0200
export NEVER
const NICEST = 0x1102
export NICEST
const NONE = 0
export NONE
const NOOP = 0x1505
export NOOP
const NOR = 0x1508
export NOR
const NORMALIZE = 0x0BA1
export NORMALIZE
const NORMAL_ARRAY = 0x8075
export NORMAL_ARRAY
const NORMAL_ARRAY_POINTER = 0x808F
export NORMAL_ARRAY_POINTER
const NORMAL_ARRAY_STRIDE = 0x807F
export NORMAL_ARRAY_STRIDE
const NORMAL_ARRAY_TYPE = 0x807E
export NORMAL_ARRAY_TYPE
const NOTEQUAL = 0x0205
export NOTEQUAL
const NO_ERROR = 0
export NO_ERROR
const OBJECT_LINEAR = 0x2401
export OBJECT_LINEAR
const OBJECT_PLANE = 0x2501
export OBJECT_PLANE
const ONE = 1
export ONE
const ONE_MINUS_DST_ALPHA = 0x0305
export ONE_MINUS_DST_ALPHA
const ONE_MINUS_DST_COLOR = 0x0307
export ONE_MINUS_DST_COLOR
const ONE_MINUS_SRC_ALPHA = 0x0303
export ONE_MINUS_SRC_ALPHA
const ONE_MINUS_SRC_COLOR = 0x0301
export ONE_MINUS_SRC_COLOR
const OR = 0x1507
export OR
const ORDER = 0x0A01
export ORDER
const OR_INVERTED = 0x150D
export OR_INVERTED
const OR_REVERSE = 0x150B
export OR_REVERSE
const OUT_OF_MEMORY = 0x0505
export OUT_OF_MEMORY
const PACK_ALIGNMENT = 0x0D05
export PACK_ALIGNMENT
const PACK_LSB_FIRST = 0x0D01
export PACK_LSB_FIRST
const PACK_ROW_LENGTH = 0x0D02
export PACK_ROW_LENGTH
const PACK_SKIP_PIXELS = 0x0D04
export PACK_SKIP_PIXELS
const PACK_SKIP_ROWS = 0x0D03
export PACK_SKIP_ROWS
const PACK_SWAP_BYTES = 0x0D00
export PACK_SWAP_BYTES
const PASS_THROUGH_TOKEN = 0x0700
export PASS_THROUGH_TOKEN
const PERSPECTIVE_CORRECTION_HINT = 0x0C50
export PERSPECTIVE_CORRECTION_HINT
const PIXEL_MAP_A_TO_A = 0x0C79
export PIXEL_MAP_A_TO_A
const PIXEL_MAP_A_TO_A_SIZE = 0x0CB9
export PIXEL_MAP_A_TO_A_SIZE
const PIXEL_MAP_B_TO_B = 0x0C78
export PIXEL_MAP_B_TO_B
const PIXEL_MAP_B_TO_B_SIZE = 0x0CB8
export PIXEL_MAP_B_TO_B_SIZE
const PIXEL_MAP_G_TO_G = 0x0C77
export PIXEL_MAP_G_TO_G
const PIXEL_MAP_G_TO_G_SIZE = 0x0CB7
export PIXEL_MAP_G_TO_G_SIZE
const PIXEL_MAP_I_TO_A = 0x0C75
export PIXEL_MAP_I_TO_A
const PIXEL_MAP_I_TO_A_SIZE = 0x0CB5
export PIXEL_MAP_I_TO_A_SIZE
const PIXEL_MAP_I_TO_B = 0x0C74
export PIXEL_MAP_I_TO_B
const PIXEL_MAP_I_TO_B_SIZE = 0x0CB4
export PIXEL_MAP_I_TO_B_SIZE
const PIXEL_MAP_I_TO_G = 0x0C73
export PIXEL_MAP_I_TO_G
const PIXEL_MAP_I_TO_G_SIZE = 0x0CB3
export PIXEL_MAP_I_TO_G_SIZE
const PIXEL_MAP_I_TO_I = 0x0C70
export PIXEL_MAP_I_TO_I
const PIXEL_MAP_I_TO_I_SIZE = 0x0CB0
export PIXEL_MAP_I_TO_I_SIZE
const PIXEL_MAP_I_TO_R = 0x0C72
export PIXEL_MAP_I_TO_R
const PIXEL_MAP_I_TO_R_SIZE = 0x0CB2
export PIXEL_MAP_I_TO_R_SIZE
const PIXEL_MAP_R_TO_R = 0x0C76
export PIXEL_MAP_R_TO_R
const PIXEL_MAP_R_TO_R_SIZE = 0x0CB6
export PIXEL_MAP_R_TO_R_SIZE
const PIXEL_MAP_S_TO_S = 0x0C71
export PIXEL_MAP_S_TO_S
const PIXEL_MAP_S_TO_S_SIZE = 0x0CB1
export PIXEL_MAP_S_TO_S_SIZE
const PIXEL_MODE_BIT = 0x00000020
export PIXEL_MODE_BIT
const POINT = 0x1B00
export POINT
const POINTS = 0x0000
export POINTS
const POINT_BIT = 0x00000002
export POINT_BIT
const POINT_SIZE = 0x0B11
export POINT_SIZE
const POINT_SIZE_GRANULARITY = 0x0B13
export POINT_SIZE_GRANULARITY
const POINT_SIZE_RANGE = 0x0B12
export POINT_SIZE_RANGE
const POINT_SMOOTH = 0x0B10
export POINT_SMOOTH
const POINT_SMOOTH_HINT = 0x0C51
export POINT_SMOOTH_HINT
const POINT_TOKEN = 0x0701
export POINT_TOKEN
const POLYGON = 0x0009
export POLYGON
const POLYGON_BIT = 0x00000008
export POLYGON_BIT
const POLYGON_MODE = 0x0B40
export POLYGON_MODE
const POLYGON_OFFSET_FACTOR = 0x8038
export POLYGON_OFFSET_FACTOR
const POLYGON_OFFSET_FILL = 0x8037
export POLYGON_OFFSET_FILL
const POLYGON_OFFSET_LINE = 0x2A02
export POLYGON_OFFSET_LINE
const POLYGON_OFFSET_POINT = 0x2A01
export POLYGON_OFFSET_POINT
const POLYGON_OFFSET_UNITS = 0x2A00
export POLYGON_OFFSET_UNITS
const POLYGON_SMOOTH = 0x0B41
export POLYGON_SMOOTH
const POLYGON_SMOOTH_HINT = 0x0C53
export POLYGON_SMOOTH_HINT
const POLYGON_STIPPLE = 0x0B42
export POLYGON_STIPPLE
const POLYGON_STIPPLE_BIT = 0x00000010
export POLYGON_STIPPLE_BIT
const POLYGON_TOKEN = 0x0703
export POLYGON_TOKEN
const POSITION = 0x1203
export POSITION
const PROJECTION = 0x1701
export PROJECTION
const PROJECTION_MATRIX = 0x0BA7
export PROJECTION_MATRIX
const PROJECTION_STACK_DEPTH = 0x0BA4
export PROJECTION_STACK_DEPTH
const PROXY_TEXTURE_1D = 0x8063
export PROXY_TEXTURE_1D
const PROXY_TEXTURE_2D = 0x8064
export PROXY_TEXTURE_2D
const Q = 0x2003
export Q
const QUADRATIC_ATTENUATION = 0x1209
export QUADRATIC_ATTENUATION
const QUADS = 0x0007
export QUADS
const QUAD_STRIP = 0x0008
export QUAD_STRIP
const R = 0x2002
export R
const R3_G3_B2 = 0x2A10
export R3_G3_B2
const READ_BUFFER = 0x0C02
export READ_BUFFER
const RED = 0x1903
export RED
const RED_BIAS = 0x0D15
export RED_BIAS
const RED_BITS = 0x0D52
export RED_BITS
const RED_SCALE = 0x0D14
export RED_SCALE
const RENDER = 0x1C00
export RENDER
const RENDERER = 0x1F01
export RENDERER
const RENDER_MODE = 0x0C40
export RENDER_MODE
const REPEAT = 0x2901
export REPEAT
const REPLACE = 0x1E01
export REPLACE
const RETURN = 0x0102
export RETURN
const RGB = 0x1907
export RGB
const RGB10 = 0x8052
export RGB10
const RGB10_A2 = 0x8059
export RGB10_A2
const RGB12 = 0x8053
export RGB12
const RGB16 = 0x8054
export RGB16
const RGB4 = 0x804F
export RGB4
const RGB5 = 0x8050
export RGB5
const RGB5_A1 = 0x8057
export RGB5_A1
const RGB8 = 0x8051
export RGB8
const RGBA = 0x1908
export RGBA
const RGBA12 = 0x805A
export RGBA12
const RGBA16 = 0x805B
export RGBA16
const RGBA2 = 0x8055
export RGBA2
const RGBA4 = 0x8056
export RGBA4
const RGBA8 = 0x8058
export RGBA8
const RGBA_MODE = 0x0C31
export RGBA_MODE
const RIGHT = 0x0407
export RIGHT
const S = 0x2000
export S
const SCISSOR_BIT = 0x00080000
export SCISSOR_BIT
const SCISSOR_BOX = 0x0C10
export SCISSOR_BOX
const SCISSOR_TEST = 0x0C11
export SCISSOR_TEST
const SELECT = 0x1C02
export SELECT
const SELECTION_BUFFER_POINTER = 0x0DF3
export SELECTION_BUFFER_POINTER
const SELECTION_BUFFER_SIZE = 0x0DF4
export SELECTION_BUFFER_SIZE
const SET = 0x150F
export SET
const SHADE_MODEL = 0x0B54
export SHADE_MODEL
const SHININESS = 0x1601
export SHININESS
const SHORT = 0x1402
export SHORT
const SMOOTH = 0x1D01
export SMOOTH
const SPECULAR = 0x1202
export SPECULAR
const SPHERE_MAP = 0x2402
export SPHERE_MAP
const SPOT_CUTOFF = 0x1206
export SPOT_CUTOFF
const SPOT_DIRECTION = 0x1204
export SPOT_DIRECTION
const SPOT_EXPONENT = 0x1205
export SPOT_EXPONENT
const SRC_ALPHA = 0x0302
export SRC_ALPHA
const SRC_ALPHA_SATURATE = 0x0308
export SRC_ALPHA_SATURATE
const SRC_COLOR = 0x0300
export SRC_COLOR
const STACK_OVERFLOW = 0x0503
export STACK_OVERFLOW
const STACK_UNDERFLOW = 0x0504
export STACK_UNDERFLOW
const STENCIL = 0x1802
export STENCIL
const STENCIL_BITS = 0x0D57
export STENCIL_BITS
const STENCIL_BUFFER_BIT = 0x00000400
export STENCIL_BUFFER_BIT
const STENCIL_CLEAR_VALUE = 0x0B91
export STENCIL_CLEAR_VALUE
const STENCIL_FAIL = 0x0B94
export STENCIL_FAIL
const STENCIL_FUNC = 0x0B92
export STENCIL_FUNC
const STENCIL_INDEX = 0x1901
export STENCIL_INDEX
const STENCIL_PASS_DEPTH_FAIL = 0x0B95
export STENCIL_PASS_DEPTH_FAIL
const STENCIL_PASS_DEPTH_PASS = 0x0B96
export STENCIL_PASS_DEPTH_PASS
const STENCIL_REF = 0x0B97
export STENCIL_REF
const STENCIL_TEST = 0x0B90
export STENCIL_TEST
const STENCIL_VALUE_MASK = 0x0B93
export STENCIL_VALUE_MASK
const STENCIL_WRITEMASK = 0x0B98
export STENCIL_WRITEMASK
const STEREO = 0x0C33
export STEREO
const SUBPIXEL_BITS = 0x0D50
export SUBPIXEL_BITS
const T = 0x2001
export T
const T2F_C3F_V3F = 0x2A2A
export T2F_C3F_V3F
const T2F_C4F_N3F_V3F = 0x2A2C
export T2F_C4F_N3F_V3F
const T2F_C4UB_V3F = 0x2A29
export T2F_C4UB_V3F
const T2F_N3F_V3F = 0x2A2B
export T2F_N3F_V3F
const T2F_V3F = 0x2A27
export T2F_V3F
const T4F_C4F_N3F_V4F = 0x2A2D
export T4F_C4F_N3F_V4F
const T4F_V4F = 0x2A28
export T4F_V4F
const TEXTURE = 0x1702
export TEXTURE
const TEXTURE_1D = 0x0DE0
export TEXTURE_1D
const TEXTURE_2D = 0x0DE1
export TEXTURE_2D
const TEXTURE_ALPHA_SIZE = 0x805F
export TEXTURE_ALPHA_SIZE
const TEXTURE_BINDING_1D = 0x8068
export TEXTURE_BINDING_1D
const TEXTURE_BINDING_2D = 0x8069
export TEXTURE_BINDING_2D
const TEXTURE_BIT = 0x00040000
export TEXTURE_BIT
const TEXTURE_BLUE_SIZE = 0x805E
export TEXTURE_BLUE_SIZE
const TEXTURE_BORDER = 0x1005
export TEXTURE_BORDER
const TEXTURE_BORDER_COLOR = 0x1004
export TEXTURE_BORDER_COLOR
const TEXTURE_COMPONENTS = 0x1003
export TEXTURE_COMPONENTS
const TEXTURE_COORD_ARRAY = 0x8078
export TEXTURE_COORD_ARRAY
const TEXTURE_COORD_ARRAY_POINTER = 0x8092
export TEXTURE_COORD_ARRAY_POINTER
const TEXTURE_COORD_ARRAY_SIZE = 0x8088
export TEXTURE_COORD_ARRAY_SIZE
const TEXTURE_COORD_ARRAY_STRIDE = 0x808A
export TEXTURE_COORD_ARRAY_STRIDE
const TEXTURE_COORD_ARRAY_TYPE = 0x8089
export TEXTURE_COORD_ARRAY_TYPE
const TEXTURE_ENV = 0x2300
export TEXTURE_ENV
const TEXTURE_ENV_COLOR = 0x2201
export TEXTURE_ENV_COLOR
const TEXTURE_ENV_MODE = 0x2200
export TEXTURE_ENV_MODE
const TEXTURE_GEN_MODE = 0x2500
export TEXTURE_GEN_MODE
const TEXTURE_GEN_Q = 0x0C63
export TEXTURE_GEN_Q
const TEXTURE_GEN_R = 0x0C62
export TEXTURE_GEN_R
const TEXTURE_GEN_S = 0x0C60
export TEXTURE_GEN_S
const TEXTURE_GEN_T = 0x0C61
export TEXTURE_GEN_T
const TEXTURE_GREEN_SIZE = 0x805D
export TEXTURE_GREEN_SIZE
const TEXTURE_HEIGHT = 0x1001
export TEXTURE_HEIGHT
const TEXTURE_INTENSITY_SIZE = 0x8061
export TEXTURE_INTENSITY_SIZE
const TEXTURE_INTERNAL_FORMAT = 0x1003
export TEXTURE_INTERNAL_FORMAT
const TEXTURE_LUMINANCE_SIZE = 0x8060
export TEXTURE_LUMINANCE_SIZE
const TEXTURE_MAG_FILTER = 0x2800
export TEXTURE_MAG_FILTER
const TEXTURE_MATRIX = 0x0BA8
export TEXTURE_MATRIX
const TEXTURE_MIN_FILTER = 0x2801
export TEXTURE_MIN_FILTER
const TEXTURE_PRIORITY = 0x8066
export TEXTURE_PRIORITY
const TEXTURE_RED_SIZE = 0x805C
export TEXTURE_RED_SIZE
const TEXTURE_RESIDENT = 0x8067
export TEXTURE_RESIDENT
const TEXTURE_STACK_DEPTH = 0x0BA5
export TEXTURE_STACK_DEPTH
const TEXTURE_WIDTH = 0x1000
export TEXTURE_WIDTH
const TEXTURE_WRAP_S = 0x2802
export TEXTURE_WRAP_S
const TEXTURE_WRAP_T = 0x2803
export TEXTURE_WRAP_T
const TRANSFORM_BIT = 0x00001000
export TRANSFORM_BIT
const TRIANGLES = 0x0004
export TRIANGLES
const TRIANGLE_FAN = 0x0006
export TRIANGLE_FAN
const TRIANGLE_STRIP = 0x0005
export TRIANGLE_STRIP
const TRUE = 1
export TRUE
const UNPACK_ALIGNMENT = 0x0CF5
export UNPACK_ALIGNMENT
const UNPACK_LSB_FIRST = 0x0CF1
export UNPACK_LSB_FIRST
const UNPACK_ROW_LENGTH = 0x0CF2
export UNPACK_ROW_LENGTH
const UNPACK_SKIP_PIXELS = 0x0CF4
export UNPACK_SKIP_PIXELS
const UNPACK_SKIP_ROWS = 0x0CF3
export UNPACK_SKIP_ROWS
const UNPACK_SWAP_BYTES = 0x0CF0
export UNPACK_SWAP_BYTES
const UNSIGNED_BYTE = 0x1401
export UNSIGNED_BYTE
const UNSIGNED_INT = 0x1405
export UNSIGNED_INT
const UNSIGNED_SHORT = 0x1403
export UNSIGNED_SHORT
const V2F = 0x2A20
export V2F
const V3F = 0x2A21
export V3F
const VENDOR = 0x1F00
export VENDOR
const VERSION = 0x1F02
export VERSION
const VERTEX_ARRAY = 0x8074
export VERTEX_ARRAY
const VERTEX_ARRAY_POINTER = 0x808E
export VERTEX_ARRAY_POINTER
const VERTEX_ARRAY_SIZE = 0x807A
export VERTEX_ARRAY_SIZE
const VERTEX_ARRAY_STRIDE = 0x807C
export VERTEX_ARRAY_STRIDE
const VERTEX_ARRAY_TYPE = 0x807B
export VERTEX_ARRAY_TYPE
const VIEWPORT = 0x0BA2
export VIEWPORT
const VIEWPORT_BIT = 0x00000800
export VIEWPORT_BIT
const XOR = 0x1506
export XOR
const ZERO = 0
export ZERO
const ZOOM_X = 0x0D16
export ZOOM_X
const ZOOM_Y = 0x0D17
export ZOOM_Y
const ALIASED_LINE_WIDTH_RANGE = 0x846E
export ALIASED_LINE_WIDTH_RANGE
const ALIASED_POINT_SIZE_RANGE = 0x846D
export ALIASED_POINT_SIZE_RANGE
const BGR = 0x80E0
export BGR
const BGRA = 0x80E1
export BGRA
const CLAMP_TO_EDGE = 0x812F
export CLAMP_TO_EDGE
const LIGHT_MODEL_COLOR_CONTROL = 0x81F8
export LIGHT_MODEL_COLOR_CONTROL
const MAX_3D_TEXTURE_SIZE = 0x8073
export MAX_3D_TEXTURE_SIZE
const MAX_ELEMENTS_INDICES = 0x80E9
export MAX_ELEMENTS_INDICES
const MAX_ELEMENTS_VERTICES = 0x80E8
export MAX_ELEMENTS_VERTICES
const PACK_IMAGE_HEIGHT = 0x806C
export PACK_IMAGE_HEIGHT
const PACK_SKIP_IMAGES = 0x806B
export PACK_SKIP_IMAGES
const PROXY_TEXTURE_3D = 0x8070
export PROXY_TEXTURE_3D
const RESCALE_NORMAL = 0x803A
export RESCALE_NORMAL
const SEPARATE_SPECULAR_COLOR = 0x81FA
export SEPARATE_SPECULAR_COLOR
const SINGLE_COLOR = 0x81F9
export SINGLE_COLOR
const SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23
export SMOOTH_LINE_WIDTH_GRANULARITY
const SMOOTH_LINE_WIDTH_RANGE = 0x0B22
export SMOOTH_LINE_WIDTH_RANGE
const SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13
export SMOOTH_POINT_SIZE_GRANULARITY
const SMOOTH_POINT_SIZE_RANGE = 0x0B12
export SMOOTH_POINT_SIZE_RANGE
const TEXTURE_3D = 0x806F
export TEXTURE_3D
const TEXTURE_BASE_LEVEL = 0x813C
export TEXTURE_BASE_LEVEL
const TEXTURE_BINDING_3D = 0x806A
export TEXTURE_BINDING_3D
const TEXTURE_DEPTH = 0x8071
export TEXTURE_DEPTH
const TEXTURE_MAX_LEVEL = 0x813D
export TEXTURE_MAX_LEVEL
const TEXTURE_MAX_LOD = 0x813B
export TEXTURE_MAX_LOD
const TEXTURE_MIN_LOD = 0x813A
export TEXTURE_MIN_LOD
const TEXTURE_WRAP_R = 0x8072
export TEXTURE_WRAP_R
const UNPACK_IMAGE_HEIGHT = 0x806E
export UNPACK_IMAGE_HEIGHT
const UNPACK_SKIP_IMAGES = 0x806D
export UNPACK_SKIP_IMAGES
const UNSIGNED_BYTE_2_3_3_REV = 0x8362
export UNSIGNED_BYTE_2_3_3_REV
const UNSIGNED_BYTE_3_3_2 = 0x8032
export UNSIGNED_BYTE_3_3_2
const UNSIGNED_INT_10_10_10_2 = 0x8036
export UNSIGNED_INT_10_10_10_2
const UNSIGNED_INT_2_10_10_10_REV = 0x8368
export UNSIGNED_INT_2_10_10_10_REV
const UNSIGNED_INT_8_8_8_8 = 0x8035
export UNSIGNED_INT_8_8_8_8
const UNSIGNED_INT_8_8_8_8_REV = 0x8367
export UNSIGNED_INT_8_8_8_8_REV
const UNSIGNED_SHORT_1_5_5_5_REV = 0x8366
export UNSIGNED_SHORT_1_5_5_5_REV
const UNSIGNED_SHORT_4_4_4_4 = 0x8033
export UNSIGNED_SHORT_4_4_4_4
const UNSIGNED_SHORT_4_4_4_4_REV = 0x8365
export UNSIGNED_SHORT_4_4_4_4_REV
const UNSIGNED_SHORT_5_5_5_1 = 0x8034
export UNSIGNED_SHORT_5_5_5_1
const UNSIGNED_SHORT_5_6_5 = 0x8363
export UNSIGNED_SHORT_5_6_5
const UNSIGNED_SHORT_5_6_5_REV = 0x8364
export UNSIGNED_SHORT_5_6_5_REV
const ACTIVE_TEXTURE = 0x84E0
export ACTIVE_TEXTURE
const ADD_SIGNED = 0x8574
export ADD_SIGNED
const CLAMP_TO_BORDER = 0x812D
export CLAMP_TO_BORDER
const CLIENT_ACTIVE_TEXTURE = 0x84E1
export CLIENT_ACTIVE_TEXTURE
const COMBINE = 0x8570
export COMBINE
const COMBINE_ALPHA = 0x8572
export COMBINE_ALPHA
const COMBINE_RGB = 0x8571
export COMBINE_RGB
const COMPRESSED_ALPHA = 0x84E9
export COMPRESSED_ALPHA
const COMPRESSED_INTENSITY = 0x84EC
export COMPRESSED_INTENSITY
const COMPRESSED_LUMINANCE = 0x84EA
export COMPRESSED_LUMINANCE
const COMPRESSED_LUMINANCE_ALPHA = 0x84EB
export COMPRESSED_LUMINANCE_ALPHA
const COMPRESSED_RGB = 0x84ED
export COMPRESSED_RGB
const COMPRESSED_RGBA = 0x84EE
export COMPRESSED_RGBA
const COMPRESSED_TEXTURE_FORMATS = 0x86A3
export COMPRESSED_TEXTURE_FORMATS
const CONSTANT = 0x8576
export CONSTANT
const DOT3_RGB = 0x86AE
export DOT3_RGB
const DOT3_RGBA = 0x86AF
export DOT3_RGBA
const INTERPOLATE = 0x8575
export INTERPOLATE
const MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C
export MAX_CUBE_MAP_TEXTURE_SIZE
const MAX_TEXTURE_UNITS = 0x84E2
export MAX_TEXTURE_UNITS
const MULTISAMPLE = 0x809D
export MULTISAMPLE
const MULTISAMPLE_BIT = 0x20000000
export MULTISAMPLE_BIT
const NORMAL_MAP = 0x8511
export NORMAL_MAP
const NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2
export NUM_COMPRESSED_TEXTURE_FORMATS
const OPERAND0_ALPHA = 0x8598
export OPERAND0_ALPHA
const OPERAND0_RGB = 0x8590
export OPERAND0_RGB
const OPERAND1_ALPHA = 0x8599
export OPERAND1_ALPHA
const OPERAND1_RGB = 0x8591
export OPERAND1_RGB
const OPERAND2_ALPHA = 0x859A
export OPERAND2_ALPHA
const OPERAND2_RGB = 0x8592
export OPERAND2_RGB
const PREVIOUS = 0x8578
export PREVIOUS
const PRIMARY_COLOR = 0x8577
export PRIMARY_COLOR
const PROXY_TEXTURE_CUBE_MAP = 0x851B
export PROXY_TEXTURE_CUBE_MAP
const REFLECTION_MAP = 0x8512
export REFLECTION_MAP
const RGB_SCALE = 0x8573
export RGB_SCALE
const SAMPLES = 0x80A9
export SAMPLES
const SAMPLE_ALPHA_TO_COVERAGE = 0x809E
export SAMPLE_ALPHA_TO_COVERAGE
const SAMPLE_ALPHA_TO_ONE = 0x809F
export SAMPLE_ALPHA_TO_ONE
const SAMPLE_BUFFERS = 0x80A8
export SAMPLE_BUFFERS
const SAMPLE_COVERAGE = 0x80A0
export SAMPLE_COVERAGE
const SAMPLE_COVERAGE_INVERT = 0x80AB
export SAMPLE_COVERAGE_INVERT
const SAMPLE_COVERAGE_VALUE = 0x80AA
export SAMPLE_COVERAGE_VALUE
const SOURCE0_ALPHA = 0x8588
export SOURCE0_ALPHA
const SOURCE0_RGB = 0x8580
export SOURCE0_RGB
const SOURCE1_ALPHA = 0x8589
export SOURCE1_ALPHA
const SOURCE1_RGB = 0x8581
export SOURCE1_RGB
const SOURCE2_ALPHA = 0x858A
export SOURCE2_ALPHA
const SOURCE2_RGB = 0x8582
export SOURCE2_RGB
const SUBTRACT = 0x84E7
export SUBTRACT
const TEXTURE0 = 0x84C0
export TEXTURE0
const TEXTURE1 = 0x84C1
export TEXTURE1
const TEXTURE10 = 0x84CA
export TEXTURE10
const TEXTURE11 = 0x84CB
export TEXTURE11
const TEXTURE12 = 0x84CC
export TEXTURE12
const TEXTURE13 = 0x84CD
export TEXTURE13
const TEXTURE14 = 0x84CE
export TEXTURE14
const TEXTURE15 = 0x84CF
export TEXTURE15
const TEXTURE16 = 0x84D0
export TEXTURE16
const TEXTURE17 = 0x84D1
export TEXTURE17
const TEXTURE18 = 0x84D2
export TEXTURE18
const TEXTURE19 = 0x84D3
export TEXTURE19
const TEXTURE2 = 0x84C2
export TEXTURE2
const TEXTURE20 = 0x84D4
export TEXTURE20
const TEXTURE21 = 0x84D5
export TEXTURE21
const TEXTURE22 = 0x84D6
export TEXTURE22
const TEXTURE23 = 0x84D7
export TEXTURE23
const TEXTURE24 = 0x84D8
export TEXTURE24
const TEXTURE25 = 0x84D9
export TEXTURE25
const TEXTURE26 = 0x84DA
export TEXTURE26
const TEXTURE27 = 0x84DB
export TEXTURE27
const TEXTURE28 = 0x84DC
export TEXTURE28
const TEXTURE29 = 0x84DD
export TEXTURE29
const TEXTURE3 = 0x84C3
export TEXTURE3
const TEXTURE30 = 0x84DE
export TEXTURE30
const TEXTURE31 = 0x84DF
export TEXTURE31
const TEXTURE4 = 0x84C4
export TEXTURE4
const TEXTURE5 = 0x84C5
export TEXTURE5
const TEXTURE6 = 0x84C6
export TEXTURE6
const TEXTURE7 = 0x84C7
export TEXTURE7
const TEXTURE8 = 0x84C8
export TEXTURE8
const TEXTURE9 = 0x84C9
export TEXTURE9
const TEXTURE_BINDING_CUBE_MAP = 0x8514
export TEXTURE_BINDING_CUBE_MAP
const TEXTURE_COMPRESSED = 0x86A1
export TEXTURE_COMPRESSED
const TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0
export TEXTURE_COMPRESSED_IMAGE_SIZE
const TEXTURE_COMPRESSION_HINT = 0x84EF
export TEXTURE_COMPRESSION_HINT
const TEXTURE_CUBE_MAP = 0x8513
export TEXTURE_CUBE_MAP
const TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516
export TEXTURE_CUBE_MAP_NEGATIVE_X
const TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518
export TEXTURE_CUBE_MAP_NEGATIVE_Y
const TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A
export TEXTURE_CUBE_MAP_NEGATIVE_Z
const TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515
export TEXTURE_CUBE_MAP_POSITIVE_X
const TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517
export TEXTURE_CUBE_MAP_POSITIVE_Y
const TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519
export TEXTURE_CUBE_MAP_POSITIVE_Z
const TRANSPOSE_COLOR_MATRIX = 0x84E6
export TRANSPOSE_COLOR_MATRIX
const TRANSPOSE_MODELVIEW_MATRIX = 0x84E3
export TRANSPOSE_MODELVIEW_MATRIX
const TRANSPOSE_PROJECTION_MATRIX = 0x84E4
export TRANSPOSE_PROJECTION_MATRIX
const TRANSPOSE_TEXTURE_MATRIX = 0x84E5
export TRANSPOSE_TEXTURE_MATRIX
const BLEND_DST_ALPHA = 0x80CA
export BLEND_DST_ALPHA
const BLEND_DST_RGB = 0x80C8
export BLEND_DST_RGB
const BLEND_SRC_ALPHA = 0x80CB
export BLEND_SRC_ALPHA
const BLEND_SRC_RGB = 0x80C9
export BLEND_SRC_RGB
const COLOR_SUM = 0x8458
export COLOR_SUM
const COMPARE_R_TO_TEXTURE = 0x884E
export COMPARE_R_TO_TEXTURE
const CURRENT_FOG_COORDINATE = 0x8453
export CURRENT_FOG_COORDINATE
const CURRENT_SECONDARY_COLOR = 0x8459
export CURRENT_SECONDARY_COLOR
const DECR_WRAP = 0x8508
export DECR_WRAP
const DEPTH_COMPONENT16 = 0x81A5
export DEPTH_COMPONENT16
const DEPTH_COMPONENT24 = 0x81A6
export DEPTH_COMPONENT24
const DEPTH_COMPONENT32 = 0x81A7
export DEPTH_COMPONENT32
const DEPTH_TEXTURE_MODE = 0x884B
export DEPTH_TEXTURE_MODE
const FOG_COORDINATE = 0x8451
export FOG_COORDINATE
const FOG_COORDINATE_ARRAY = 0x8457
export FOG_COORDINATE_ARRAY
const FOG_COORDINATE_ARRAY_POINTER = 0x8456
export FOG_COORDINATE_ARRAY_POINTER
const FOG_COORDINATE_ARRAY_STRIDE = 0x8455
export FOG_COORDINATE_ARRAY_STRIDE
const FOG_COORDINATE_ARRAY_TYPE = 0x8454
export FOG_COORDINATE_ARRAY_TYPE
const FOG_COORDINATE_SOURCE = 0x8450
export FOG_COORDINATE_SOURCE
const FRAGMENT_DEPTH = 0x8452
export FRAGMENT_DEPTH
const GENERATE_MIPMAP = 0x8191
export GENERATE_MIPMAP
const GENERATE_MIPMAP_HINT = 0x8192
export GENERATE_MIPMAP_HINT
const INCR_WRAP = 0x8507
export INCR_WRAP
const MAX_TEXTURE_LOD_BIAS = 0x84FD
export MAX_TEXTURE_LOD_BIAS
const MIRRORED_REPEAT = 0x8370
export MIRRORED_REPEAT
const POINT_DISTANCE_ATTENUATION = 0x8129
export POINT_DISTANCE_ATTENUATION
const POINT_FADE_THRESHOLD_SIZE = 0x8128
export POINT_FADE_THRESHOLD_SIZE
const POINT_SIZE_MAX = 0x8127
export POINT_SIZE_MAX
const POINT_SIZE_MIN = 0x8126
export POINT_SIZE_MIN
const SECONDARY_COLOR_ARRAY = 0x845E
export SECONDARY_COLOR_ARRAY
const SECONDARY_COLOR_ARRAY_POINTER = 0x845D
export SECONDARY_COLOR_ARRAY_POINTER
const SECONDARY_COLOR_ARRAY_SIZE = 0x845A
export SECONDARY_COLOR_ARRAY_SIZE
const SECONDARY_COLOR_ARRAY_STRIDE = 0x845C
export SECONDARY_COLOR_ARRAY_STRIDE
const SECONDARY_COLOR_ARRAY_TYPE = 0x845B
export SECONDARY_COLOR_ARRAY_TYPE
const TEXTURE_COMPARE_FUNC = 0x884D
export TEXTURE_COMPARE_FUNC
const TEXTURE_COMPARE_MODE = 0x884C
export TEXTURE_COMPARE_MODE
const TEXTURE_DEPTH_SIZE = 0x884A
export TEXTURE_DEPTH_SIZE
const TEXTURE_FILTER_CONTROL = 0x8500
export TEXTURE_FILTER_CONTROL
const TEXTURE_LOD_BIAS = 0x8501
export TEXTURE_LOD_BIAS
const ARRAY_BUFFER = 0x8892
export ARRAY_BUFFER
const ARRAY_BUFFER_BINDING = 0x8894
export ARRAY_BUFFER_BINDING
const BUFFER_ACCESS = 0x88BB
export BUFFER_ACCESS
const BUFFER_MAPPED = 0x88BC
export BUFFER_MAPPED
const BUFFER_MAP_POINTER = 0x88BD
export BUFFER_MAP_POINTER
const BUFFER_SIZE = 0x8764
export BUFFER_SIZE
const BUFFER_USAGE = 0x8765
export BUFFER_USAGE
const COLOR_ARRAY_BUFFER_BINDING = 0x8898
export COLOR_ARRAY_BUFFER_BINDING
const CURRENT_FOG_COORD = 0x8453
export CURRENT_FOG_COORD
const CURRENT_QUERY = 0x8865
export CURRENT_QUERY
const DYNAMIC_COPY = 0x88EA
export DYNAMIC_COPY
const DYNAMIC_DRAW = 0x88E8
export DYNAMIC_DRAW
const DYNAMIC_READ = 0x88E9
export DYNAMIC_READ
const EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B
export EDGE_FLAG_ARRAY_BUFFER_BINDING
const ELEMENT_ARRAY_BUFFER = 0x8893
export ELEMENT_ARRAY_BUFFER
const ELEMENT_ARRAY_BUFFER_BINDING = 0x8895
export ELEMENT_ARRAY_BUFFER_BINDING
const FOG_COORD = 0x8451
export FOG_COORD
const FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D
export FOG_COORDINATE_ARRAY_BUFFER_BINDING
const FOG_COORD_ARRAY = 0x8457
export FOG_COORD_ARRAY
const FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D
export FOG_COORD_ARRAY_BUFFER_BINDING
const FOG_COORD_ARRAY_POINTER = 0x8456
export FOG_COORD_ARRAY_POINTER
const FOG_COORD_ARRAY_STRIDE = 0x8455
export FOG_COORD_ARRAY_STRIDE
const FOG_COORD_ARRAY_TYPE = 0x8454
export FOG_COORD_ARRAY_TYPE
const FOG_COORD_SRC = 0x8450
export FOG_COORD_SRC
const INDEX_ARRAY_BUFFER_BINDING = 0x8899
export INDEX_ARRAY_BUFFER_BINDING
const NORMAL_ARRAY_BUFFER_BINDING = 0x8897
export NORMAL_ARRAY_BUFFER_BINDING
const QUERY_COUNTER_BITS = 0x8864
export QUERY_COUNTER_BITS
const QUERY_RESULT = 0x8866
export QUERY_RESULT
const QUERY_RESULT_AVAILABLE = 0x8867
export QUERY_RESULT_AVAILABLE
const READ_ONLY = 0x88B8
export READ_ONLY
const READ_WRITE = 0x88BA
export READ_WRITE
const SAMPLES_PASSED = 0x8914
export SAMPLES_PASSED
const SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C
export SECONDARY_COLOR_ARRAY_BUFFER_BINDING
const SRC0_ALPHA = 0x8588
export SRC0_ALPHA
const SRC0_RGB = 0x8580
export SRC0_RGB
const SRC1_ALPHA = 0x8589
export SRC1_ALPHA
const SRC1_RGB = 0x8581
export SRC1_RGB
const SRC2_ALPHA = 0x858A
export SRC2_ALPHA
const SRC2_RGB = 0x8582
export SRC2_RGB
const STATIC_COPY = 0x88E6
export STATIC_COPY
const STATIC_DRAW = 0x88E4
export STATIC_DRAW
const STATIC_READ = 0x88E5
export STATIC_READ
const STREAM_COPY = 0x88E2
export STREAM_COPY
const STREAM_DRAW = 0x88E0
export STREAM_DRAW
const STREAM_READ = 0x88E1
export STREAM_READ
const TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A
export TEXTURE_COORD_ARRAY_BUFFER_BINDING
const VERTEX_ARRAY_BUFFER_BINDING = 0x8896
export VERTEX_ARRAY_BUFFER_BINDING
const VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F
export VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
const WEIGHT_ARRAY_BUFFER_BINDING = 0x889E
export WEIGHT_ARRAY_BUFFER_BINDING
const WRITE_ONLY = 0x88B9
export WRITE_ONLY
const ACTIVE_ATTRIBUTES = 0x8B89
export ACTIVE_ATTRIBUTES
const ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A
export ACTIVE_ATTRIBUTE_MAX_LENGTH
const ACTIVE_UNIFORMS = 0x8B86
export ACTIVE_UNIFORMS
const ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87
export ACTIVE_UNIFORM_MAX_LENGTH
const ATTACHED_SHADERS = 0x8B85
export ATTACHED_SHADERS
const BLEND_EQUATION_ALPHA = 0x883D
export BLEND_EQUATION_ALPHA
const BLEND_EQUATION_RGB = 0x8009
export BLEND_EQUATION_RGB
const BOOL = 0x8B56
export BOOL
const BOOL_VEC2 = 0x8B57
export BOOL_VEC2
const BOOL_VEC3 = 0x8B58
export BOOL_VEC3
const BOOL_VEC4 = 0x8B59
export BOOL_VEC4
const COMPILE_STATUS = 0x8B81
export COMPILE_STATUS
const COORD_REPLACE = 0x8862
export COORD_REPLACE
const CURRENT_PROGRAM = 0x8B8D
export CURRENT_PROGRAM
const CURRENT_VERTEX_ATTRIB = 0x8626
export CURRENT_VERTEX_ATTRIB
const DELETE_STATUS = 0x8B80
export DELETE_STATUS
const DRAW_BUFFER0 = 0x8825
export DRAW_BUFFER0
const DRAW_BUFFER1 = 0x8826
export DRAW_BUFFER1
const DRAW_BUFFER10 = 0x882F
export DRAW_BUFFER10
const DRAW_BUFFER11 = 0x8830
export DRAW_BUFFER11
const DRAW_BUFFER12 = 0x8831
export DRAW_BUFFER12
const DRAW_BUFFER13 = 0x8832
export DRAW_BUFFER13
const DRAW_BUFFER14 = 0x8833
export DRAW_BUFFER14
const DRAW_BUFFER15 = 0x8834
export DRAW_BUFFER15
const DRAW_BUFFER2 = 0x8827
export DRAW_BUFFER2
const DRAW_BUFFER3 = 0x8828
export DRAW_BUFFER3
const DRAW_BUFFER4 = 0x8829
export DRAW_BUFFER4
const DRAW_BUFFER5 = 0x882A
export DRAW_BUFFER5
const DRAW_BUFFER6 = 0x882B
export DRAW_BUFFER6
const DRAW_BUFFER7 = 0x882C
export DRAW_BUFFER7
const DRAW_BUFFER8 = 0x882D
export DRAW_BUFFER8
const DRAW_BUFFER9 = 0x882E
export DRAW_BUFFER9
const FLOAT_MAT2 = 0x8B5A
export FLOAT_MAT2
const FLOAT_MAT3 = 0x8B5B
export FLOAT_MAT3
const FLOAT_MAT4 = 0x8B5C
export FLOAT_MAT4
const FLOAT_VEC2 = 0x8B50
export FLOAT_VEC2
const FLOAT_VEC3 = 0x8B51
export FLOAT_VEC3
const FLOAT_VEC4 = 0x8B52
export FLOAT_VEC4
const FRAGMENT_SHADER = 0x8B30
export FRAGMENT_SHADER
const FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
export FRAGMENT_SHADER_DERIVATIVE_HINT
const INFO_LOG_LENGTH = 0x8B84
export INFO_LOG_LENGTH
const INT_VEC2 = 0x8B53
export INT_VEC2
const INT_VEC3 = 0x8B54
export INT_VEC3
const INT_VEC4 = 0x8B55
export INT_VEC4
const LINK_STATUS = 0x8B82
export LINK_STATUS
const LOWER_LEFT = 0x8CA1
export LOWER_LEFT
const MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D
export MAX_COMBINED_TEXTURE_IMAGE_UNITS
const MAX_DRAW_BUFFERS = 0x8824
export MAX_DRAW_BUFFERS
const MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49
export MAX_FRAGMENT_UNIFORM_COMPONENTS
const MAX_TEXTURE_COORDS = 0x8871
export MAX_TEXTURE_COORDS
const MAX_TEXTURE_IMAGE_UNITS = 0x8872
export MAX_TEXTURE_IMAGE_UNITS
const MAX_VARYING_FLOATS = 0x8B4B
export MAX_VARYING_FLOATS
const MAX_VERTEX_ATTRIBS = 0x8869
export MAX_VERTEX_ATTRIBS
const MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C
export MAX_VERTEX_TEXTURE_IMAGE_UNITS
const MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A
export MAX_VERTEX_UNIFORM_COMPONENTS
const POINT_SPRITE = 0x8861
export POINT_SPRITE
const POINT_SPRITE_COORD_ORIGIN = 0x8CA0
export POINT_SPRITE_COORD_ORIGIN
const SAMPLER_1D = 0x8B5D
export SAMPLER_1D
const SAMPLER_1D_SHADOW = 0x8B61
export SAMPLER_1D_SHADOW
const SAMPLER_2D = 0x8B5E
export SAMPLER_2D
const SAMPLER_2D_SHADOW = 0x8B62
export SAMPLER_2D_SHADOW
const SAMPLER_3D = 0x8B5F
export SAMPLER_3D
const SAMPLER_CUBE = 0x8B60
export SAMPLER_CUBE
const SHADER_SOURCE_LENGTH = 0x8B88
export SHADER_SOURCE_LENGTH
const SHADER_TYPE = 0x8B4F
export SHADER_TYPE
const SHADING_LANGUAGE_VERSION = 0x8B8C
export SHADING_LANGUAGE_VERSION
const STENCIL_BACK_FAIL = 0x8801
export STENCIL_BACK_FAIL
const STENCIL_BACK_FUNC = 0x8800
export STENCIL_BACK_FUNC
const STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802
export STENCIL_BACK_PASS_DEPTH_FAIL
const STENCIL_BACK_PASS_DEPTH_PASS = 0x8803
export STENCIL_BACK_PASS_DEPTH_PASS
const STENCIL_BACK_REF = 0x8CA3
export STENCIL_BACK_REF
const STENCIL_BACK_VALUE_MASK = 0x8CA4
export STENCIL_BACK_VALUE_MASK
const STENCIL_BACK_WRITEMASK = 0x8CA5
export STENCIL_BACK_WRITEMASK
const UPPER_LEFT = 0x8CA2
export UPPER_LEFT
const VALIDATE_STATUS = 0x8B83
export VALIDATE_STATUS
const VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622
export VERTEX_ATTRIB_ARRAY_ENABLED
const VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A
export VERTEX_ATTRIB_ARRAY_NORMALIZED
const VERTEX_ATTRIB_ARRAY_POINTER = 0x8645
export VERTEX_ATTRIB_ARRAY_POINTER
const VERTEX_ATTRIB_ARRAY_SIZE = 0x8623
export VERTEX_ATTRIB_ARRAY_SIZE
const VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624
export VERTEX_ATTRIB_ARRAY_STRIDE
const VERTEX_ATTRIB_ARRAY_TYPE = 0x8625
export VERTEX_ATTRIB_ARRAY_TYPE
const VERTEX_PROGRAM_POINT_SIZE = 0x8642
export VERTEX_PROGRAM_POINT_SIZE
const VERTEX_PROGRAM_TWO_SIDE = 0x8643
export VERTEX_PROGRAM_TWO_SIDE
const VERTEX_SHADER = 0x8B31
export VERTEX_SHADER
const COMPRESSED_SLUMINANCE = 0x8C4A
export COMPRESSED_SLUMINANCE
const COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B
export COMPRESSED_SLUMINANCE_ALPHA
const COMPRESSED_SRGB = 0x8C48
export COMPRESSED_SRGB
const COMPRESSED_SRGB_ALPHA = 0x8C49
export COMPRESSED_SRGB_ALPHA
const CURRENT_RASTER_SECONDARY_COLOR = 0x845F
export CURRENT_RASTER_SECONDARY_COLOR
const FLOAT_MAT2x3 = 0x8B65
export FLOAT_MAT2x3
const FLOAT_MAT2x4 = 0x8B66
export FLOAT_MAT2x4
const FLOAT_MAT3x2 = 0x8B67
export FLOAT_MAT3x2
const FLOAT_MAT3x4 = 0x8B68
export FLOAT_MAT3x4
const FLOAT_MAT4x2 = 0x8B69
export FLOAT_MAT4x2
const FLOAT_MAT4x3 = 0x8B6A
export FLOAT_MAT4x3
const PIXEL_PACK_BUFFER = 0x88EB
export PIXEL_PACK_BUFFER
const PIXEL_PACK_BUFFER_BINDING = 0x88ED
export PIXEL_PACK_BUFFER_BINDING
const PIXEL_UNPACK_BUFFER = 0x88EC
export PIXEL_UNPACK_BUFFER
const PIXEL_UNPACK_BUFFER_BINDING = 0x88EF
export PIXEL_UNPACK_BUFFER_BINDING
const SLUMINANCE = 0x8C46
export SLUMINANCE
const SLUMINANCE8 = 0x8C47
export SLUMINANCE8
const SLUMINANCE8_ALPHA8 = 0x8C45
export SLUMINANCE8_ALPHA8
const SLUMINANCE_ALPHA = 0x8C44
export SLUMINANCE_ALPHA
const SRGB = 0x8C40
export SRGB
const SRGB8 = 0x8C41
export SRGB8
const SRGB8_ALPHA8 = 0x8C43
export SRGB8_ALPHA8
const SRGB_ALPHA = 0x8C42
export SRGB_ALPHA
@getCFun "libGL" glCullFace glCullFace(mode::GLenum)::Void
export glCullFace
@getCFun "libGL" glFrontFace glFrontFace(mode::GLenum)::Void
export glFrontFace
@getCFun "libGL" glHint glHint(target::GLenum, mode::GLenum)::Void
export glHint
@getCFun "libGL" glLineWidth glLineWidth(width::GLfloat)::Void
export glLineWidth
@getCFun "libGL" glPointSize glPointSize(size::GLfloat)::Void
export glPointSize
@getCFun "libGL" glPolygonMode glPolygonMode(face::GLenum, mode::GLenum)::Void
export glPolygonMode
@getCFun "libGL" glScissor glScissor(x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void
export glScissor
@getCFun "libGL" glTexParameterf glTexParameterf(target::GLenum, pname::GLenum, param::GLfloat)::Void
export glTexParameterf
@getCFun "libGL" glTexParameterfv glTexParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glTexParameterfv
@getCFun "libGL" glTexParameteri glTexParameteri(target::GLenum, pname::GLenum, param::GLint)::Void
export glTexParameteri
@getCFun "libGL" glTexParameteriv glTexParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glTexParameteriv
@getCFun "libGL" glTexImage1D glTexImage1D(target::GLenum, level::GLint, internalformat::GLint, width::GLsizei, border::GLint, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexImage1D
@getCFun "libGL" glTexImage2D glTexImage2D(target::GLenum, level::GLint, internalformat::GLint, width::GLsizei, height::GLsizei, border::GLint, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexImage2D
@getCFun "libGL" glDrawBuffer glDrawBuffer(mode::GLenum)::Void
export glDrawBuffer
@getCFun "libGL" glClear glClear(mask::GLbitfield)::Void
export glClear
@getCFun "libGL" glClearColor glClearColor(red::GLfloat, green::GLfloat, blue::GLfloat, alpha::GLfloat)::Void
export glClearColor
@getCFun "libGL" glClearStencil glClearStencil(s::GLint)::Void
export glClearStencil
@getCFun "libGL" glClearDepth glClearDepth(depth::GLdouble)::Void
export glClearDepth
@getCFun "libGL" glStencilMask glStencilMask(mask::GLuint)::Void
export glStencilMask
@getCFun "libGL" glColorMask glColorMask(red::GLboolean, green::GLboolean, blue::GLboolean, alpha::GLboolean)::Void
export glColorMask
@getCFun "libGL" glDepthMask glDepthMask(flag::GLboolean)::Void
export glDepthMask
@getCFun "libGL" glDisable glDisable(cap::GLenum)::Void
export glDisable
@getCFun "libGL" glEnable glEnable(cap::GLenum)::Void
export glEnable
@getCFun "libGL" glFinish glFinish()::Void
export glFinish
@getCFun "libGL" glFlush glFlush()::Void
export glFlush
@getCFun "libGL" glBlendFunc glBlendFunc(sfactor::GLenum, dfactor::GLenum)::Void
export glBlendFunc
@getCFun "libGL" glLogicOp glLogicOp(opcode::GLenum)::Void
export glLogicOp
@getCFun "libGL" glStencilFunc glStencilFunc(func_::GLenum, ref::GLint, mask::GLuint)::Void
export glStencilFunc
@getCFun "libGL" glStencilOp glStencilOp(fail::GLenum, zfail::GLenum, zpass::GLenum)::Void
export glStencilOp
@getCFun "libGL" glDepthFunc glDepthFunc(func_::GLenum)::Void
export glDepthFunc
@getCFun "libGL" glPixelStoref glPixelStoref(pname::GLenum, param::GLfloat)::Void
export glPixelStoref
@getCFun "libGL" glPixelStorei glPixelStorei(pname::GLenum, param::GLint)::Void
export glPixelStorei
@getCFun "libGL" glReadBuffer glReadBuffer(mode::GLenum)::Void
export glReadBuffer
@getCFun "libGL" glReadPixels glReadPixels(x::GLint, y::GLint, width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glReadPixels
@getCFun "libGL" glGetBooleanv glGetBooleanv(pname::GLenum, params::Ptr{GLboolean})::Void
export glGetBooleanv
@getCFun "libGL" glGetDoublev glGetDoublev(pname::GLenum, params::Ptr{GLdouble})::Void
export glGetDoublev
@getCFun "libGL" glGetError glGetError()::Cint
export glGetError
@getCFun "libGL" glGetFloatv glGetFloatv(pname::GLenum, params::Ptr{GLfloat})::Void
export glGetFloatv
@getCFun "libGL" glGetIntegerv glGetIntegerv(pname::GLenum, params::Ptr{GLint})::Void
export glGetIntegerv
@getCFun "libGL" glGetString glGetString(name::GLenum)::Ptr{Cuchar}
export glGetString
@getCFun "libGL" glGetTexImage glGetTexImage(target::GLenum, level::GLint, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glGetTexImage
@getCFun "libGL" glGetTexParameterfv glGetTexParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetTexParameterfv
@getCFun "libGL" glGetTexParameteriv glGetTexParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetTexParameteriv
@getCFun "libGL" glGetTexLevelParameterfv glGetTexLevelParameterfv(target::GLenum, level::GLint, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetTexLevelParameterfv
@getCFun "libGL" glGetTexLevelParameteriv glGetTexLevelParameteriv(target::GLenum, level::GLint, pname::GLenum, params::Ptr{GLint})::Void
export glGetTexLevelParameteriv
@getCFun "libGL" glIsEnabled glIsEnabled(cap::GLenum)::Bool
export glIsEnabled
@getCFun "libGL" glDepthRange glDepthRange(near_::GLdouble, far_::GLdouble)::Void
export glDepthRange
@getCFun "libGL" glViewport glViewport(x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void
export glViewport
@getCFun "libGL" glNewList glNewList(list::GLuint, mode::GLenum)::Void
export glNewList
@getCFun "libGL" glEndList glEndList()::Void
export glEndList
@getCFun "libGL" glCallList glCallList(list::GLuint)::Void
export glCallList
@getCFun "libGL" glCallLists glCallLists(n::GLsizei, type_::GLenum, lists::Ptr{Void})::Void
export glCallLists
@getCFun "libGL" glDeleteLists glDeleteLists(list::GLuint, range_::GLsizei)::Void
export glDeleteLists
@getCFun "libGL" glGenLists glGenLists(range_::GLsizei)::Cuint
export glGenLists
@getCFun "libGL" glListBase glListBase(base::GLuint)::Void
export glListBase
@getCFun "libGL" glBegin glBegin(mode::GLenum)::Void
export glBegin
@getCFun "libGL" glBitmap glBitmap(width::GLsizei, height::GLsizei, xorig::GLfloat, yorig::GLfloat, xmove::GLfloat, ymove::GLfloat, bitmap::Ptr{GLubyte})::Void
export glBitmap
@getCFun "libGL" glColor3b glColor3b(red::GLbyte, green::GLbyte, blue::GLbyte)::Void
export glColor3b
@getCFun "libGL" glColor3bv glColor3bv(v::Ptr{GLbyte})::Void
export glColor3bv
@getCFun "libGL" glColor3d glColor3d(red::GLdouble, green::GLdouble, blue::GLdouble)::Void
export glColor3d
@getCFun "libGL" glColor3dv glColor3dv(v::Ptr{GLdouble})::Void
export glColor3dv
@getCFun "libGL" glColor3f glColor3f(red::GLfloat, green::GLfloat, blue::GLfloat)::Void
export glColor3f
@getCFun "libGL" glColor3fv glColor3fv(v::Ptr{GLfloat})::Void
export glColor3fv
@getCFun "libGL" glColor3i glColor3i(red::GLint, green::GLint, blue::GLint)::Void
export glColor3i
@getCFun "libGL" glColor3iv glColor3iv(v::Ptr{GLint})::Void
export glColor3iv
@getCFun "libGL" glColor3s glColor3s(red::GLshort, green::GLshort, blue::GLshort)::Void
export glColor3s
@getCFun "libGL" glColor3sv glColor3sv(v::Ptr{GLshort})::Void
export glColor3sv
@getCFun "libGL" glColor3ub glColor3ub(red::GLubyte, green::GLubyte, blue::GLubyte)::Void
export glColor3ub
@getCFun "libGL" glColor3ubv glColor3ubv(v::Ptr{GLubyte})::Void
export glColor3ubv
@getCFun "libGL" glColor3ui glColor3ui(red::GLuint, green::GLuint, blue::GLuint)::Void
export glColor3ui
@getCFun "libGL" glColor3uiv glColor3uiv(v::Ptr{GLuint})::Void
export glColor3uiv
@getCFun "libGL" glColor3us glColor3us(red::GLushort, green::GLushort, blue::GLushort)::Void
export glColor3us
@getCFun "libGL" glColor3usv glColor3usv(v::Ptr{GLushort})::Void
export glColor3usv
@getCFun "libGL" glColor4b glColor4b(red::GLbyte, green::GLbyte, blue::GLbyte, alpha::GLbyte)::Void
export glColor4b
@getCFun "libGL" glColor4bv glColor4bv(v::Ptr{GLbyte})::Void
export glColor4bv
@getCFun "libGL" glColor4d glColor4d(red::GLdouble, green::GLdouble, blue::GLdouble, alpha::GLdouble)::Void
export glColor4d
@getCFun "libGL" glColor4dv glColor4dv(v::Ptr{GLdouble})::Void
export glColor4dv
@getCFun "libGL" glColor4f glColor4f(red::GLfloat, green::GLfloat, blue::GLfloat, alpha::GLfloat)::Void
export glColor4f
@getCFun "libGL" glColor4fv glColor4fv(v::Ptr{GLfloat})::Void
export glColor4fv
@getCFun "libGL" glColor4i glColor4i(red::GLint, green::GLint, blue::GLint, alpha::GLint)::Void
export glColor4i
@getCFun "libGL" glColor4iv glColor4iv(v::Ptr{GLint})::Void
export glColor4iv
@getCFun "libGL" glColor4s glColor4s(red::GLshort, green::GLshort, blue::GLshort, alpha::GLshort)::Void
export glColor4s
@getCFun "libGL" glColor4sv glColor4sv(v::Ptr{GLshort})::Void
export glColor4sv
@getCFun "libGL" glColor4ub glColor4ub(red::GLubyte, green::GLubyte, blue::GLubyte, alpha::GLubyte)::Void
export glColor4ub
@getCFun "libGL" glColor4ubv glColor4ubv(v::Ptr{GLubyte})::Void
export glColor4ubv
@getCFun "libGL" glColor4ui glColor4ui(red::GLuint, green::GLuint, blue::GLuint, alpha::GLuint)::Void
export glColor4ui
@getCFun "libGL" glColor4uiv glColor4uiv(v::Ptr{GLuint})::Void
export glColor4uiv
@getCFun "libGL" glColor4us glColor4us(red::GLushort, green::GLushort, blue::GLushort, alpha::GLushort)::Void
export glColor4us
@getCFun "libGL" glColor4usv glColor4usv(v::Ptr{GLushort})::Void
export glColor4usv
@getCFun "libGL" glEdgeFlag glEdgeFlag(flag::GLboolean)::Void
export glEdgeFlag
@getCFun "libGL" glEdgeFlagv glEdgeFlagv(flag::Ptr{GLboolean})::Void
export glEdgeFlagv
@getCFun "libGL" glEnd glEnd()::Void
export glEnd
@getCFun "libGL" glIndexd glIndexd(c::GLdouble)::Void
export glIndexd
@getCFun "libGL" glIndexdv glIndexdv(c::Ptr{GLdouble})::Void
export glIndexdv
@getCFun "libGL" glIndexf glIndexf(c::GLfloat)::Void
export glIndexf
@getCFun "libGL" glIndexfv glIndexfv(c::Ptr{GLfloat})::Void
export glIndexfv
@getCFun "libGL" glIndexi glIndexi(c::GLint)::Void
export glIndexi
@getCFun "libGL" glIndexiv glIndexiv(c::Ptr{GLint})::Void
export glIndexiv
@getCFun "libGL" glIndexs glIndexs(c::GLshort)::Void
export glIndexs
@getCFun "libGL" glIndexsv glIndexsv(c::Ptr{GLshort})::Void
export glIndexsv
@getCFun "libGL" glNormal3b glNormal3b(nx::GLbyte, ny::GLbyte, nz::GLbyte)::Void
export glNormal3b
@getCFun "libGL" glNormal3bv glNormal3bv(v::Ptr{GLbyte})::Void
export glNormal3bv
@getCFun "libGL" glNormal3d glNormal3d(nx::GLdouble, ny::GLdouble, nz::GLdouble)::Void
export glNormal3d
@getCFun "libGL" glNormal3dv glNormal3dv(v::Ptr{GLdouble})::Void
export glNormal3dv
@getCFun "libGL" glNormal3f glNormal3f(nx::GLfloat, ny::GLfloat, nz::GLfloat)::Void
export glNormal3f
@getCFun "libGL" glNormal3fv glNormal3fv(v::Ptr{GLfloat})::Void
export glNormal3fv
@getCFun "libGL" glNormal3i glNormal3i(nx::GLint, ny::GLint, nz::GLint)::Void
export glNormal3i
@getCFun "libGL" glNormal3iv glNormal3iv(v::Ptr{GLint})::Void
export glNormal3iv
@getCFun "libGL" glNormal3s glNormal3s(nx::GLshort, ny::GLshort, nz::GLshort)::Void
export glNormal3s
@getCFun "libGL" glNormal3sv glNormal3sv(v::Ptr{GLshort})::Void
export glNormal3sv
@getCFun "libGL" glRasterPos2d glRasterPos2d(x::GLdouble, y::GLdouble)::Void
export glRasterPos2d
@getCFun "libGL" glRasterPos2dv glRasterPos2dv(v::Ptr{GLdouble})::Void
export glRasterPos2dv
@getCFun "libGL" glRasterPos2f glRasterPos2f(x::GLfloat, y::GLfloat)::Void
export glRasterPos2f
@getCFun "libGL" glRasterPos2fv glRasterPos2fv(v::Ptr{GLfloat})::Void
export glRasterPos2fv
@getCFun "libGL" glRasterPos2i glRasterPos2i(x::GLint, y::GLint)::Void
export glRasterPos2i
@getCFun "libGL" glRasterPos2iv glRasterPos2iv(v::Ptr{GLint})::Void
export glRasterPos2iv
@getCFun "libGL" glRasterPos2s glRasterPos2s(x::GLshort, y::GLshort)::Void
export glRasterPos2s
@getCFun "libGL" glRasterPos2sv glRasterPos2sv(v::Ptr{GLshort})::Void
export glRasterPos2sv
@getCFun "libGL" glRasterPos3d glRasterPos3d(x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glRasterPos3d
@getCFun "libGL" glRasterPos3dv glRasterPos3dv(v::Ptr{GLdouble})::Void
export glRasterPos3dv
@getCFun "libGL" glRasterPos3f glRasterPos3f(x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glRasterPos3f
@getCFun "libGL" glRasterPos3fv glRasterPos3fv(v::Ptr{GLfloat})::Void
export glRasterPos3fv
@getCFun "libGL" glRasterPos3i glRasterPos3i(x::GLint, y::GLint, z::GLint)::Void
export glRasterPos3i
@getCFun "libGL" glRasterPos3iv glRasterPos3iv(v::Ptr{GLint})::Void
export glRasterPos3iv
@getCFun "libGL" glRasterPos3s glRasterPos3s(x::GLshort, y::GLshort, z::GLshort)::Void
export glRasterPos3s
@getCFun "libGL" glRasterPos3sv glRasterPos3sv(v::Ptr{GLshort})::Void
export glRasterPos3sv
@getCFun "libGL" glRasterPos4d glRasterPos4d(x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void
export glRasterPos4d
@getCFun "libGL" glRasterPos4dv glRasterPos4dv(v::Ptr{GLdouble})::Void
export glRasterPos4dv
@getCFun "libGL" glRasterPos4f glRasterPos4f(x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void
export glRasterPos4f
@getCFun "libGL" glRasterPos4fv glRasterPos4fv(v::Ptr{GLfloat})::Void
export glRasterPos4fv
@getCFun "libGL" glRasterPos4i glRasterPos4i(x::GLint, y::GLint, z::GLint, w::GLint)::Void
export glRasterPos4i
@getCFun "libGL" glRasterPos4iv glRasterPos4iv(v::Ptr{GLint})::Void
export glRasterPos4iv
@getCFun "libGL" glRasterPos4s glRasterPos4s(x::GLshort, y::GLshort, z::GLshort, w::GLshort)::Void
export glRasterPos4s
@getCFun "libGL" glRasterPos4sv glRasterPos4sv(v::Ptr{GLshort})::Void
export glRasterPos4sv
@getCFun "libGL" glRectd glRectd(x1::GLdouble, y1::GLdouble, x2::GLdouble, y2::GLdouble)::Void
export glRectd
@getCFun "libGL" glRectdv glRectdv(v1::Ptr{GLdouble}, v2::Ptr{GLdouble})::Void
export glRectdv
@getCFun "libGL" glRectf glRectf(x1::GLfloat, y1::GLfloat, x2::GLfloat, y2::GLfloat)::Void
export glRectf
@getCFun "libGL" glRectfv glRectfv(v1::Ptr{GLfloat}, v2::Ptr{GLfloat})::Void
export glRectfv
@getCFun "libGL" glRecti glRecti(x1::GLint, y1::GLint, x2::GLint, y2::GLint)::Void
export glRecti
@getCFun "libGL" glRectiv glRectiv(v1::Ptr{GLint}, v2::Ptr{GLint})::Void
export glRectiv
@getCFun "libGL" glRects glRects(x1::GLshort, y1::GLshort, x2::GLshort, y2::GLshort)::Void
export glRects
@getCFun "libGL" glRectsv glRectsv(v1::Ptr{GLshort}, v2::Ptr{GLshort})::Void
export glRectsv
@getCFun "libGL" glTexCoord1d glTexCoord1d(s::GLdouble)::Void
export glTexCoord1d
@getCFun "libGL" glTexCoord1dv glTexCoord1dv(v::Ptr{GLdouble})::Void
export glTexCoord1dv
@getCFun "libGL" glTexCoord1f glTexCoord1f(s::GLfloat)::Void
export glTexCoord1f
@getCFun "libGL" glTexCoord1fv glTexCoord1fv(v::Ptr{GLfloat})::Void
export glTexCoord1fv
@getCFun "libGL" glTexCoord1i glTexCoord1i(s::GLint)::Void
export glTexCoord1i
@getCFun "libGL" glTexCoord1iv glTexCoord1iv(v::Ptr{GLint})::Void
export glTexCoord1iv
@getCFun "libGL" glTexCoord1s glTexCoord1s(s::GLshort)::Void
export glTexCoord1s
@getCFun "libGL" glTexCoord1sv glTexCoord1sv(v::Ptr{GLshort})::Void
export glTexCoord1sv
@getCFun "libGL" glTexCoord2d glTexCoord2d(s::GLdouble, t::GLdouble)::Void
export glTexCoord2d
@getCFun "libGL" glTexCoord2dv glTexCoord2dv(v::Ptr{GLdouble})::Void
export glTexCoord2dv
@getCFun "libGL" glTexCoord2f glTexCoord2f(s::GLfloat, t::GLfloat)::Void
export glTexCoord2f
@getCFun "libGL" glTexCoord2fv glTexCoord2fv(v::Ptr{GLfloat})::Void
export glTexCoord2fv
@getCFun "libGL" glTexCoord2i glTexCoord2i(s::GLint, t::GLint)::Void
export glTexCoord2i
@getCFun "libGL" glTexCoord2iv glTexCoord2iv(v::Ptr{GLint})::Void
export glTexCoord2iv
@getCFun "libGL" glTexCoord2s glTexCoord2s(s::GLshort, t::GLshort)::Void
export glTexCoord2s
@getCFun "libGL" glTexCoord2sv glTexCoord2sv(v::Ptr{GLshort})::Void
export glTexCoord2sv
@getCFun "libGL" glTexCoord3d glTexCoord3d(s::GLdouble, t::GLdouble, r::GLdouble)::Void
export glTexCoord3d
@getCFun "libGL" glTexCoord3dv glTexCoord3dv(v::Ptr{GLdouble})::Void
export glTexCoord3dv
@getCFun "libGL" glTexCoord3f glTexCoord3f(s::GLfloat, t::GLfloat, r::GLfloat)::Void
export glTexCoord3f
@getCFun "libGL" glTexCoord3fv glTexCoord3fv(v::Ptr{GLfloat})::Void
export glTexCoord3fv
@getCFun "libGL" glTexCoord3i glTexCoord3i(s::GLint, t::GLint, r::GLint)::Void
export glTexCoord3i
@getCFun "libGL" glTexCoord3iv glTexCoord3iv(v::Ptr{GLint})::Void
export glTexCoord3iv
@getCFun "libGL" glTexCoord3s glTexCoord3s(s::GLshort, t::GLshort, r::GLshort)::Void
export glTexCoord3s
@getCFun "libGL" glTexCoord3sv glTexCoord3sv(v::Ptr{GLshort})::Void
export glTexCoord3sv
@getCFun "libGL" glTexCoord4d glTexCoord4d(s::GLdouble, t::GLdouble, r::GLdouble, q::GLdouble)::Void
export glTexCoord4d
@getCFun "libGL" glTexCoord4dv glTexCoord4dv(v::Ptr{GLdouble})::Void
export glTexCoord4dv
@getCFun "libGL" glTexCoord4f glTexCoord4f(s::GLfloat, t::GLfloat, r::GLfloat, q::GLfloat)::Void
export glTexCoord4f
@getCFun "libGL" glTexCoord4fv glTexCoord4fv(v::Ptr{GLfloat})::Void
export glTexCoord4fv
@getCFun "libGL" glTexCoord4i glTexCoord4i(s::GLint, t::GLint, r::GLint, q::GLint)::Void
export glTexCoord4i
@getCFun "libGL" glTexCoord4iv glTexCoord4iv(v::Ptr{GLint})::Void
export glTexCoord4iv
@getCFun "libGL" glTexCoord4s glTexCoord4s(s::GLshort, t::GLshort, r::GLshort, q::GLshort)::Void
export glTexCoord4s
@getCFun "libGL" glTexCoord4sv glTexCoord4sv(v::Ptr{GLshort})::Void
export glTexCoord4sv
@getCFun "libGL" glVertex2d glVertex2d(x::GLdouble, y::GLdouble)::Void
export glVertex2d
@getCFun "libGL" glVertex2dv glVertex2dv(v::Ptr{GLdouble})::Void
export glVertex2dv
@getCFun "libGL" glVertex2f glVertex2f(x::GLfloat, y::GLfloat)::Void
export glVertex2f
@getCFun "libGL" glVertex2fv glVertex2fv(v::Ptr{GLfloat})::Void
export glVertex2fv
@getCFun "libGL" glVertex2i glVertex2i(x::GLint, y::GLint)::Void
export glVertex2i
@getCFun "libGL" glVertex2iv glVertex2iv(v::Ptr{GLint})::Void
export glVertex2iv
@getCFun "libGL" glVertex2s glVertex2s(x::GLshort, y::GLshort)::Void
export glVertex2s
@getCFun "libGL" glVertex2sv glVertex2sv(v::Ptr{GLshort})::Void
export glVertex2sv
@getCFun "libGL" glVertex3d glVertex3d(x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glVertex3d
@getCFun "libGL" glVertex3dv glVertex3dv(v::Ptr{GLdouble})::Void
export glVertex3dv
@getCFun "libGL" glVertex3f glVertex3f(x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glVertex3f
@getCFun "libGL" glVertex3fv glVertex3fv(v::Ptr{GLfloat})::Void
export glVertex3fv
@getCFun "libGL" glVertex3i glVertex3i(x::GLint, y::GLint, z::GLint)::Void
export glVertex3i
@getCFun "libGL" glVertex3iv glVertex3iv(v::Ptr{GLint})::Void
export glVertex3iv
@getCFun "libGL" glVertex3s glVertex3s(x::GLshort, y::GLshort, z::GLshort)::Void
export glVertex3s
@getCFun "libGL" glVertex3sv glVertex3sv(v::Ptr{GLshort})::Void
export glVertex3sv
@getCFun "libGL" glVertex4d glVertex4d(x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void
export glVertex4d
@getCFun "libGL" glVertex4dv glVertex4dv(v::Ptr{GLdouble})::Void
export glVertex4dv
@getCFun "libGL" glVertex4f glVertex4f(x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void
export glVertex4f
@getCFun "libGL" glVertex4fv glVertex4fv(v::Ptr{GLfloat})::Void
export glVertex4fv
@getCFun "libGL" glVertex4i glVertex4i(x::GLint, y::GLint, z::GLint, w::GLint)::Void
export glVertex4i
@getCFun "libGL" glVertex4iv glVertex4iv(v::Ptr{GLint})::Void
export glVertex4iv
@getCFun "libGL" glVertex4s glVertex4s(x::GLshort, y::GLshort, z::GLshort, w::GLshort)::Void
export glVertex4s
@getCFun "libGL" glVertex4sv glVertex4sv(v::Ptr{GLshort})::Void
export glVertex4sv
@getCFun "libGL" glClipPlane glClipPlane(plane::GLenum, equation::Ptr{GLdouble})::Void
export glClipPlane
@getCFun "libGL" glColorMaterial glColorMaterial(face::GLenum, mode::GLenum)::Void
export glColorMaterial
@getCFun "libGL" glFogf glFogf(pname::GLenum, param::GLfloat)::Void
export glFogf
@getCFun "libGL" glFogfv glFogfv(pname::GLenum, params::Ptr{GLfloat})::Void
export glFogfv
@getCFun "libGL" glFogi glFogi(pname::GLenum, param::GLint)::Void
export glFogi
@getCFun "libGL" glFogiv glFogiv(pname::GLenum, params::Ptr{GLint})::Void
export glFogiv
@getCFun "libGL" glLightf glLightf(light::GLenum, pname::GLenum, param::GLfloat)::Void
export glLightf
@getCFun "libGL" glLightfv glLightfv(light::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glLightfv
@getCFun "libGL" glLighti glLighti(light::GLenum, pname::GLenum, param::GLint)::Void
export glLighti
@getCFun "libGL" glLightiv glLightiv(light::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glLightiv
@getCFun "libGL" glLightModelf glLightModelf(pname::GLenum, param::GLfloat)::Void
export glLightModelf
@getCFun "libGL" glLightModelfv glLightModelfv(pname::GLenum, params::Ptr{GLfloat})::Void
export glLightModelfv
@getCFun "libGL" glLightModeli glLightModeli(pname::GLenum, param::GLint)::Void
export glLightModeli
@getCFun "libGL" glLightModeliv glLightModeliv(pname::GLenum, params::Ptr{GLint})::Void
export glLightModeliv
@getCFun "libGL" glLineStipple glLineStipple(factor::GLint, pattern::GLushort)::Void
export glLineStipple
@getCFun "libGL" glMaterialf glMaterialf(face::GLenum, pname::GLenum, param::GLfloat)::Void
export glMaterialf
@getCFun "libGL" glMaterialfv glMaterialfv(face::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glMaterialfv
@getCFun "libGL" glMateriali glMateriali(face::GLenum, pname::GLenum, param::GLint)::Void
export glMateriali
@getCFun "libGL" glMaterialiv glMaterialiv(face::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glMaterialiv
@getCFun "libGL" glPolygonStipple glPolygonStipple(mask::Ptr{GLubyte})::Void
export glPolygonStipple
@getCFun "libGL" glShadeModel glShadeModel(mode::GLenum)::Void
export glShadeModel
@getCFun "libGL" glTexEnvf glTexEnvf(target::GLenum, pname::GLenum, param::GLfloat)::Void
export glTexEnvf
@getCFun "libGL" glTexEnvfv glTexEnvfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glTexEnvfv
@getCFun "libGL" glTexEnvi glTexEnvi(target::GLenum, pname::GLenum, param::GLint)::Void
export glTexEnvi
@getCFun "libGL" glTexEnviv glTexEnviv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glTexEnviv
@getCFun "libGL" glTexGend glTexGend(coord::GLenum, pname::GLenum, param::GLdouble)::Void
export glTexGend
@getCFun "libGL" glTexGendv glTexGendv(coord::GLenum, pname::GLenum, params::Ptr{GLdouble})::Void
export glTexGendv
@getCFun "libGL" glTexGenf glTexGenf(coord::GLenum, pname::GLenum, param::GLfloat)::Void
export glTexGenf
@getCFun "libGL" glTexGenfv glTexGenfv(coord::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glTexGenfv
@getCFun "libGL" glTexGeni glTexGeni(coord::GLenum, pname::GLenum, param::GLint)::Void
export glTexGeni
@getCFun "libGL" glTexGeniv glTexGeniv(coord::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glTexGeniv
@getCFun "libGL" glFeedbackBuffer glFeedbackBuffer(size::GLsizei, type_::GLenum, buffer::Ptr{GLfloat})::Void
export glFeedbackBuffer
@getCFun "libGL" glSelectBuffer glSelectBuffer(size::GLsizei, buffer::Ptr{GLuint})::Void
export glSelectBuffer
@getCFun "libGL" glRenderMode glRenderMode(mode::GLenum)::Cint
export glRenderMode
@getCFun "libGL" glInitNames glInitNames()::Void
export glInitNames
@getCFun "libGL" glLoadName glLoadName(name::GLuint)::Void
export glLoadName
@getCFun "libGL" glPassThrough glPassThrough(token::GLfloat)::Void
export glPassThrough
@getCFun "libGL" glPopName glPopName()::Void
export glPopName
@getCFun "libGL" glPushName glPushName(name::GLuint)::Void
export glPushName
@getCFun "libGL" glClearAccum glClearAccum(red::GLfloat, green::GLfloat, blue::GLfloat, alpha::GLfloat)::Void
export glClearAccum
@getCFun "libGL" glClearIndex glClearIndex(c::GLfloat)::Void
export glClearIndex
@getCFun "libGL" glIndexMask glIndexMask(mask::GLuint)::Void
export glIndexMask
@getCFun "libGL" glAccum glAccum(op::GLenum, value::GLfloat)::Void
export glAccum
@getCFun "libGL" glPopAttrib glPopAttrib()::Void
export glPopAttrib
@getCFun "libGL" glPushAttrib glPushAttrib(mask::GLbitfield)::Void
export glPushAttrib
@getCFun "libGL" glMap1d glMap1d(target::GLenum, u1::GLdouble, u2::GLdouble, stride::GLint, order::GLint, points::Ptr{GLdouble})::Void
export glMap1d
@getCFun "libGL" glMap1f glMap1f(target::GLenum, u1::GLfloat, u2::GLfloat, stride::GLint, order::GLint, points::Ptr{GLfloat})::Void
export glMap1f
@getCFun "libGL" glMap2d glMap2d(target::GLenum, u1::GLdouble, u2::GLdouble, ustride::GLint, uorder::GLint, v1::GLdouble, v2::GLdouble, vstride::GLint, vorder::GLint, points::Ptr{GLdouble})::Void
export glMap2d
@getCFun "libGL" glMap2f glMap2f(target::GLenum, u1::GLfloat, u2::GLfloat, ustride::GLint, uorder::GLint, v1::GLfloat, v2::GLfloat, vstride::GLint, vorder::GLint, points::Ptr{GLfloat})::Void
export glMap2f
@getCFun "libGL" glMapGrid1d glMapGrid1d(un::GLint, u1::GLdouble, u2::GLdouble)::Void
export glMapGrid1d
@getCFun "libGL" glMapGrid1f glMapGrid1f(un::GLint, u1::GLfloat, u2::GLfloat)::Void
export glMapGrid1f
@getCFun "libGL" glMapGrid2d glMapGrid2d(un::GLint, u1::GLdouble, u2::GLdouble, vn::GLint, v1::GLdouble, v2::GLdouble)::Void
export glMapGrid2d
@getCFun "libGL" glMapGrid2f glMapGrid2f(un::GLint, u1::GLfloat, u2::GLfloat, vn::GLint, v1::GLfloat, v2::GLfloat)::Void
export glMapGrid2f
@getCFun "libGL" glEvalCoord1d glEvalCoord1d(u::GLdouble)::Void
export glEvalCoord1d
@getCFun "libGL" glEvalCoord1dv glEvalCoord1dv(u::Ptr{GLdouble})::Void
export glEvalCoord1dv
@getCFun "libGL" glEvalCoord1f glEvalCoord1f(u::GLfloat)::Void
export glEvalCoord1f
@getCFun "libGL" glEvalCoord1fv glEvalCoord1fv(u::Ptr{GLfloat})::Void
export glEvalCoord1fv
@getCFun "libGL" glEvalCoord2d glEvalCoord2d(u::GLdouble, v::GLdouble)::Void
export glEvalCoord2d
@getCFun "libGL" glEvalCoord2dv glEvalCoord2dv(u::Ptr{GLdouble})::Void
export glEvalCoord2dv
@getCFun "libGL" glEvalCoord2f glEvalCoord2f(u::GLfloat, v::GLfloat)::Void
export glEvalCoord2f
@getCFun "libGL" glEvalCoord2fv glEvalCoord2fv(u::Ptr{GLfloat})::Void
export glEvalCoord2fv
@getCFun "libGL" glEvalMesh1 glEvalMesh1(mode::GLenum, i1::GLint, i2::GLint)::Void
export glEvalMesh1
@getCFun "libGL" glEvalPoint1 glEvalPoint1(i::GLint)::Void
export glEvalPoint1
@getCFun "libGL" glEvalMesh2 glEvalMesh2(mode::GLenum, i1::GLint, i2::GLint, j1::GLint, j2::GLint)::Void
export glEvalMesh2
@getCFun "libGL" glEvalPoint2 glEvalPoint2(i::GLint, j::GLint)::Void
export glEvalPoint2
@getCFun "libGL" glAlphaFunc glAlphaFunc(func_::GLenum, ref::GLfloat)::Void
export glAlphaFunc
@getCFun "libGL" glPixelZoom glPixelZoom(xfactor::GLfloat, yfactor::GLfloat)::Void
export glPixelZoom
@getCFun "libGL" glPixelTransferf glPixelTransferf(pname::GLenum, param::GLfloat)::Void
export glPixelTransferf
@getCFun "libGL" glPixelTransferi glPixelTransferi(pname::GLenum, param::GLint)::Void
export glPixelTransferi
@getCFun "libGL" glPixelMapfv glPixelMapfv(map_::GLenum, mapsize::GLsizei, values::Ptr{GLfloat})::Void
export glPixelMapfv
@getCFun "libGL" glPixelMapuiv glPixelMapuiv(map_::GLenum, mapsize::GLsizei, values::Ptr{GLuint})::Void
export glPixelMapuiv
@getCFun "libGL" glPixelMapusv glPixelMapusv(map_::GLenum, mapsize::GLsizei, values::Ptr{GLushort})::Void
export glPixelMapusv
@getCFun "libGL" glCopyPixels glCopyPixels(x::GLint, y::GLint, width::GLsizei, height::GLsizei, type_::GLenum)::Void
export glCopyPixels
@getCFun "libGL" glDrawPixels glDrawPixels(width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glDrawPixels
@getCFun "libGL" glGetClipPlane glGetClipPlane(plane::GLenum, equation::Ptr{GLdouble})::Void
export glGetClipPlane
@getCFun "libGL" glGetLightfv glGetLightfv(light::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetLightfv
@getCFun "libGL" glGetLightiv glGetLightiv(light::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetLightiv
@getCFun "libGL" glGetMapdv glGetMapdv(target::GLenum, query::GLenum, v::Ptr{GLdouble})::Void
export glGetMapdv
@getCFun "libGL" glGetMapfv glGetMapfv(target::GLenum, query::GLenum, v::Ptr{GLfloat})::Void
export glGetMapfv
@getCFun "libGL" glGetMapiv glGetMapiv(target::GLenum, query::GLenum, v::Ptr{GLint})::Void
export glGetMapiv
@getCFun "libGL" glGetMaterialfv glGetMaterialfv(face::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetMaterialfv
@getCFun "libGL" glGetMaterialiv glGetMaterialiv(face::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetMaterialiv
@getCFun "libGL" glGetPixelMapfv glGetPixelMapfv(map_::GLenum, values::Ptr{GLfloat})::Void
export glGetPixelMapfv
@getCFun "libGL" glGetPixelMapuiv glGetPixelMapuiv(map_::GLenum, values::Ptr{GLuint})::Void
export glGetPixelMapuiv
@getCFun "libGL" glGetPixelMapusv glGetPixelMapusv(map_::GLenum, values::Ptr{GLushort})::Void
export glGetPixelMapusv
@getCFun "libGL" glGetPolygonStipple glGetPolygonStipple(mask::Ptr{GLubyte})::Void
export glGetPolygonStipple
@getCFun "libGL" glGetTexEnvfv glGetTexEnvfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetTexEnvfv
@getCFun "libGL" glGetTexEnviv glGetTexEnviv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetTexEnviv
@getCFun "libGL" glGetTexGendv glGetTexGendv(coord::GLenum, pname::GLenum, params::Ptr{GLdouble})::Void
export glGetTexGendv
@getCFun "libGL" glGetTexGenfv glGetTexGenfv(coord::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetTexGenfv
@getCFun "libGL" glGetTexGeniv glGetTexGeniv(coord::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetTexGeniv
@getCFun "libGL" glIsList glIsList(list::GLuint)::Bool
export glIsList
@getCFun "libGL" glFrustum glFrustum(left::GLdouble, right::GLdouble, bottom::GLdouble, top::GLdouble, zNear::GLdouble, zFar::GLdouble)::Void
export glFrustum
@getCFun "libGL" glLoadIdentity glLoadIdentity()::Void
export glLoadIdentity
@getCFun "libGL" glLoadMatrixf glLoadMatrixf(m::Ptr{GLfloat})::Void
export glLoadMatrixf
@getCFun "libGL" glLoadMatrixd glLoadMatrixd(m::Ptr{GLdouble})::Void
export glLoadMatrixd
@getCFun "libGL" glMatrixMode glMatrixMode(mode::GLenum)::Void
export glMatrixMode
@getCFun "libGL" glMultMatrixf glMultMatrixf(m::Ptr{GLfloat})::Void
export glMultMatrixf
@getCFun "libGL" glMultMatrixd glMultMatrixd(m::Ptr{GLdouble})::Void
export glMultMatrixd
@getCFun "libGL" glOrtho glOrtho(left::GLdouble, right::GLdouble, bottom::GLdouble, top::GLdouble, zNear::GLdouble, zFar::GLdouble)::Void
export glOrtho
@getCFun "libGL" glPopMatrix glPopMatrix()::Void
export glPopMatrix
@getCFun "libGL" glPushMatrix glPushMatrix()::Void
export glPushMatrix
@getCFun "libGL" glRotated glRotated(angle::GLdouble, x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glRotated
@getCFun "libGL" glRotatef glRotatef(angle::GLfloat, x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glRotatef
@getCFun "libGL" glScaled glScaled(x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glScaled
@getCFun "libGL" glScalef glScalef(x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glScalef
@getCFun "libGL" glTranslated glTranslated(x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glTranslated
@getCFun "libGL" glTranslatef glTranslatef(x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glTranslatef
@getCFun "libGL" glDrawArrays glDrawArrays(mode::GLenum, first::GLint, count::GLsizei)::Void
export glDrawArrays
@getCFun "libGL" glDrawElements glDrawElements(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void})::Void
export glDrawElements
@getCFun "libGL" glGetPointerv glGetPointerv(pname::GLenum, params::Ptr{Ptr{Void}})::Void
export glGetPointerv
@getCFun "libGL" glPolygonOffset glPolygonOffset(factor::GLfloat, units::GLfloat)::Void
export glPolygonOffset
@getCFun "libGL" glCopyTexImage1D glCopyTexImage1D(target::GLenum, level::GLint, internalformat::GLenum, x::GLint, y::GLint, width::GLsizei, border::GLint)::Void
export glCopyTexImage1D
@getCFun "libGL" glCopyTexImage2D glCopyTexImage2D(target::GLenum, level::GLint, internalformat::GLenum, x::GLint, y::GLint, width::GLsizei, height::GLsizei, border::GLint)::Void
export glCopyTexImage2D
@getCFun "libGL" glCopyTexSubImage1D glCopyTexSubImage1D(target::GLenum, level::GLint, xoffset::GLint, x::GLint, y::GLint, width::GLsizei)::Void
export glCopyTexSubImage1D
@getCFun "libGL" glCopyTexSubImage2D glCopyTexSubImage2D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void
export glCopyTexSubImage2D
@getCFun "libGL" glTexSubImage1D glTexSubImage1D(target::GLenum, level::GLint, xoffset::GLint, width::GLsizei, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexSubImage1D
@getCFun "libGL" glTexSubImage2D glTexSubImage2D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexSubImage2D
@getCFun "libGL" glBindTexture glBindTexture(target::GLenum, texture::GLuint)::Void
export glBindTexture
@getCFun "libGL" glDeleteTextures glDeleteTextures(n::GLsizei, textures::Ptr{GLuint})::Void
export glDeleteTextures
@getCFun "libGL" glGenTextures glGenTextures(n::GLsizei, textures::Ptr{GLuint})::Void
export glGenTextures
@getCFun "libGL" glIsTexture glIsTexture(texture::GLuint)::Bool
export glIsTexture
@getCFun "libGL" glArrayElement glArrayElement(i::GLint)::Void
export glArrayElement
@getCFun "libGL" glColorPointer glColorPointer(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glColorPointer
@getCFun "libGL" glDisableClientState glDisableClientState(array::GLenum)::Void
export glDisableClientState
@getCFun "libGL" glEdgeFlagPointer glEdgeFlagPointer(stride::GLsizei, pointer::Ptr{Void})::Void
export glEdgeFlagPointer
@getCFun "libGL" glEnableClientState glEnableClientState(array::GLenum)::Void
export glEnableClientState
@getCFun "libGL" glIndexPointer glIndexPointer(type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glIndexPointer
@getCFun "libGL" glInterleavedArrays glInterleavedArrays(format::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glInterleavedArrays
@getCFun "libGL" glNormalPointer glNormalPointer(type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glNormalPointer
@getCFun "libGL" glTexCoordPointer glTexCoordPointer(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glTexCoordPointer
@getCFun "libGL" glVertexPointer glVertexPointer(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glVertexPointer
@getCFun "libGL" glAreTexturesResident glAreTexturesResident(n::GLsizei, textures::Ptr{GLuint}, residences::Ptr{GLboolean})::Bool
export glAreTexturesResident
@getCFun "libGL" glPrioritizeTextures glPrioritizeTextures(n::GLsizei, textures::Ptr{GLuint}, priorities::Ptr{GLfloat})::Void
export glPrioritizeTextures
@getCFun "libGL" glIndexub glIndexub(c::GLubyte)::Void
export glIndexub
@getCFun "libGL" glIndexubv glIndexubv(c::Ptr{GLubyte})::Void
export glIndexubv
@getCFun "libGL" glPopClientAttrib glPopClientAttrib()::Void
export glPopClientAttrib
@getCFun "libGL" glPushClientAttrib glPushClientAttrib(mask::GLbitfield)::Void
export glPushClientAttrib
@getCFun "libGL" glBlendColor glBlendColor(red::GLfloat, green::GLfloat, blue::GLfloat, alpha::GLfloat)::Void
export glBlendColor
@getCFun "libGL" glBlendEquation glBlendEquation(mode::GLenum)::Void
export glBlendEquation
@getCFun "libGL" glDrawRangeElements glDrawRangeElements(mode::GLenum, start::GLuint, END::GLuint, count::GLsizei, type_::GLenum, indices::Ptr{Void})::Void
export glDrawRangeElements
@getCFun "libGL" glTexImage3D glTexImage3D(target::GLenum, level::GLint, internalformat::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, border::GLint, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexImage3D
@getCFun "libGL" glTexSubImage3D glTexSubImage3D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, zoffset::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, format::GLenum, type_::GLenum, pixels::Ptr{Void})::Void
export glTexSubImage3D
@getCFun "libGL" glCopyTexSubImage3D glCopyTexSubImage3D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, zoffset::GLint, x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void
export glCopyTexSubImage3D
@getCFun "libGL" glColorTable glColorTable(target::GLenum, internalformat::GLenum, width::GLsizei, format::GLenum, type_::GLenum, table::Ptr{Void})::Void
export glColorTable
@getCFun "libGL" glColorTableParameterfv glColorTableParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glColorTableParameterfv
@getCFun "libGL" glColorTableParameteriv glColorTableParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glColorTableParameteriv
@getCFun "libGL" glCopyColorTable glCopyColorTable(target::GLenum, internalformat::GLenum, x::GLint, y::GLint, width::GLsizei)::Void
export glCopyColorTable
@getCFun "libGL" glGetColorTable glGetColorTable(target::GLenum, format::GLenum, type_::GLenum, table::Ptr{Void})::Void
export glGetColorTable
@getCFun "libGL" glGetColorTableParameterfv glGetColorTableParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetColorTableParameterfv
@getCFun "libGL" glGetColorTableParameteriv glGetColorTableParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetColorTableParameteriv
@getCFun "libGL" glColorSubTable glColorSubTable(target::GLenum, start::GLsizei, count::GLsizei, format::GLenum, type_::GLenum, data::Ptr{Void})::Void
export glColorSubTable
@getCFun "libGL" glCopyColorSubTable glCopyColorSubTable(target::GLenum, start::GLsizei, x::GLint, y::GLint, width::GLsizei)::Void
export glCopyColorSubTable
@getCFun "libGL" glConvolutionFilter1D glConvolutionFilter1D(target::GLenum, internalformat::GLenum, width::GLsizei, format::GLenum, type_::GLenum, image::Ptr{Void})::Void
export glConvolutionFilter1D
@getCFun "libGL" glConvolutionFilter2D glConvolutionFilter2D(target::GLenum, internalformat::GLenum, width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, image::Ptr{Void})::Void
export glConvolutionFilter2D
@getCFun "libGL" glConvolutionParameterf glConvolutionParameterf(target::GLenum, pname::GLenum, params::GLfloat)::Void
export glConvolutionParameterf
@getCFun "libGL" glConvolutionParameterfv glConvolutionParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glConvolutionParameterfv
@getCFun "libGL" glConvolutionParameteri glConvolutionParameteri(target::GLenum, pname::GLenum, params::GLint)::Void
export glConvolutionParameteri
@getCFun "libGL" glConvolutionParameteriv glConvolutionParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glConvolutionParameteriv
@getCFun "libGL" glCopyConvolutionFilter1D glCopyConvolutionFilter1D(target::GLenum, internalformat::GLenum, x::GLint, y::GLint, width::GLsizei)::Void
export glCopyConvolutionFilter1D
@getCFun "libGL" glCopyConvolutionFilter2D glCopyConvolutionFilter2D(target::GLenum, internalformat::GLenum, x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void
export glCopyConvolutionFilter2D
@getCFun "libGL" glGetConvolutionFilter glGetConvolutionFilter(target::GLenum, format::GLenum, type_::GLenum, image::Ptr{Void})::Void
export glGetConvolutionFilter
@getCFun "libGL" glGetConvolutionParameterfv glGetConvolutionParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetConvolutionParameterfv
@getCFun "libGL" glGetConvolutionParameteriv glGetConvolutionParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetConvolutionParameteriv
@getCFun "libGL" glGetSeparableFilter glGetSeparableFilter(target::GLenum, format::GLenum, type_::GLenum, row::Ptr{Void}, column::Ptr{Void}, span::Ptr{Void})::Void
export glGetSeparableFilter
@getCFun "libGL" glSeparableFilter2D glSeparableFilter2D(target::GLenum, internalformat::GLenum, width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, row::Ptr{Void}, column::Ptr{Void})::Void
export glSeparableFilter2D
@getCFun "libGL" glGetHistogram glGetHistogram(target::GLenum, reset::GLboolean, format::GLenum, type_::GLenum, values::Ptr{Void})::Void
export glGetHistogram
@getCFun "libGL" glGetHistogramParameterfv glGetHistogramParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetHistogramParameterfv
@getCFun "libGL" glGetHistogramParameteriv glGetHistogramParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetHistogramParameteriv
@getCFun "libGL" glGetMinmax glGetMinmax(target::GLenum, reset::GLboolean, format::GLenum, type_::GLenum, values::Ptr{Void})::Void
export glGetMinmax
@getCFun "libGL" glGetMinmaxParameterfv glGetMinmaxParameterfv(target::GLenum, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetMinmaxParameterfv
@getCFun "libGL" glGetMinmaxParameteriv glGetMinmaxParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetMinmaxParameteriv
@getCFun "libGL" glHistogram glHistogram(target::GLenum, width::GLsizei, internalformat::GLenum, sink::GLboolean)::Void
export glHistogram
@getCFun "libGL" glMinmax glMinmax(target::GLenum, internalformat::GLenum, sink::GLboolean)::Void
export glMinmax
@getCFun "libGL" glResetHistogram glResetHistogram(target::GLenum)::Void
export glResetHistogram
@getCFun "libGL" glResetMinmax glResetMinmax(target::GLenum)::Void
export glResetMinmax
@getCFun "libGL" glActiveTexture glActiveTexture(texture::GLenum)::Void
export glActiveTexture
@getCFun "libGL" glSampleCoverage glSampleCoverage(value::GLfloat, invert::GLboolean)::Void
export glSampleCoverage
@getCFun "libGL" glCompressedTexImage3D glCompressedTexImage3D(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexImage3D
@getCFun "libGL" glCompressedTexImage2D glCompressedTexImage2D(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, height::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexImage2D
@getCFun "libGL" glCompressedTexImage1D glCompressedTexImage1D(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexImage1D
@getCFun "libGL" glCompressedTexSubImage3D glCompressedTexSubImage3D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, zoffset::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexSubImage3D
@getCFun "libGL" glCompressedTexSubImage2D glCompressedTexSubImage2D(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, width::GLsizei, height::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexSubImage2D
@getCFun "libGL" glCompressedTexSubImage1D glCompressedTexSubImage1D(target::GLenum, level::GLint, xoffset::GLint, width::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void
export glCompressedTexSubImage1D
@getCFun "libGL" glGetCompressedTexImage glGetCompressedTexImage(target::GLenum, level::GLint, img::Ptr{Void})::Void
export glGetCompressedTexImage
@getCFun "libGL" glClientActiveTexture glClientActiveTexture(texture::GLenum)::Void
export glClientActiveTexture
@getCFun "libGL" glMultiTexCoord1d glMultiTexCoord1d(target::GLenum, s::GLdouble)::Void
export glMultiTexCoord1d
@getCFun "libGL" glMultiTexCoord1dv glMultiTexCoord1dv(target::GLenum, v::Ptr{GLdouble})::Void
export glMultiTexCoord1dv
@getCFun "libGL" glMultiTexCoord1f glMultiTexCoord1f(target::GLenum, s::GLfloat)::Void
export glMultiTexCoord1f
@getCFun "libGL" glMultiTexCoord1fv glMultiTexCoord1fv(target::GLenum, v::Ptr{GLfloat})::Void
export glMultiTexCoord1fv
@getCFun "libGL" glMultiTexCoord1i glMultiTexCoord1i(target::GLenum, s::GLint)::Void
export glMultiTexCoord1i
@getCFun "libGL" glMultiTexCoord1iv glMultiTexCoord1iv(target::GLenum, v::Ptr{GLint})::Void
export glMultiTexCoord1iv
@getCFun "libGL" glMultiTexCoord1s glMultiTexCoord1s(target::GLenum, s::GLshort)::Void
export glMultiTexCoord1s
@getCFun "libGL" glMultiTexCoord1sv glMultiTexCoord1sv(target::GLenum, v::Ptr{GLshort})::Void
export glMultiTexCoord1sv
@getCFun "libGL" glMultiTexCoord2d glMultiTexCoord2d(target::GLenum, s::GLdouble, t::GLdouble)::Void
export glMultiTexCoord2d
@getCFun "libGL" glMultiTexCoord2dv glMultiTexCoord2dv(target::GLenum, v::Ptr{GLdouble})::Void
export glMultiTexCoord2dv
@getCFun "libGL" glMultiTexCoord2f glMultiTexCoord2f(target::GLenum, s::GLfloat, t::GLfloat)::Void
export glMultiTexCoord2f
@getCFun "libGL" glMultiTexCoord2fv glMultiTexCoord2fv(target::GLenum, v::Ptr{GLfloat})::Void
export glMultiTexCoord2fv
@getCFun "libGL" glMultiTexCoord2i glMultiTexCoord2i(target::GLenum, s::GLint, t::GLint)::Void
export glMultiTexCoord2i
@getCFun "libGL" glMultiTexCoord2iv glMultiTexCoord2iv(target::GLenum, v::Ptr{GLint})::Void
export glMultiTexCoord2iv
@getCFun "libGL" glMultiTexCoord2s glMultiTexCoord2s(target::GLenum, s::GLshort, t::GLshort)::Void
export glMultiTexCoord2s
@getCFun "libGL" glMultiTexCoord2sv glMultiTexCoord2sv(target::GLenum, v::Ptr{GLshort})::Void
export glMultiTexCoord2sv
@getCFun "libGL" glMultiTexCoord3d glMultiTexCoord3d(target::GLenum, s::GLdouble, t::GLdouble, r::GLdouble)::Void
export glMultiTexCoord3d
@getCFun "libGL" glMultiTexCoord3dv glMultiTexCoord3dv(target::GLenum, v::Ptr{GLdouble})::Void
export glMultiTexCoord3dv
@getCFun "libGL" glMultiTexCoord3f glMultiTexCoord3f(target::GLenum, s::GLfloat, t::GLfloat, r::GLfloat)::Void
export glMultiTexCoord3f
@getCFun "libGL" glMultiTexCoord3fv glMultiTexCoord3fv(target::GLenum, v::Ptr{GLfloat})::Void
export glMultiTexCoord3fv
@getCFun "libGL" glMultiTexCoord3i glMultiTexCoord3i(target::GLenum, s::GLint, t::GLint, r::GLint)::Void
export glMultiTexCoord3i
@getCFun "libGL" glMultiTexCoord3iv glMultiTexCoord3iv(target::GLenum, v::Ptr{GLint})::Void
export glMultiTexCoord3iv
@getCFun "libGL" glMultiTexCoord3s glMultiTexCoord3s(target::GLenum, s::GLshort, t::GLshort, r::GLshort)::Void
export glMultiTexCoord3s
@getCFun "libGL" glMultiTexCoord3sv glMultiTexCoord3sv(target::GLenum, v::Ptr{GLshort})::Void
export glMultiTexCoord3sv
@getCFun "libGL" glMultiTexCoord4d glMultiTexCoord4d(target::GLenum, s::GLdouble, t::GLdouble, r::GLdouble, q::GLdouble)::Void
export glMultiTexCoord4d
@getCFun "libGL" glMultiTexCoord4dv glMultiTexCoord4dv(target::GLenum, v::Ptr{GLdouble})::Void
export glMultiTexCoord4dv
@getCFun "libGL" glMultiTexCoord4f glMultiTexCoord4f(target::GLenum, s::GLfloat, t::GLfloat, r::GLfloat, q::GLfloat)::Void
export glMultiTexCoord4f
@getCFun "libGL" glMultiTexCoord4fv glMultiTexCoord4fv(target::GLenum, v::Ptr{GLfloat})::Void
export glMultiTexCoord4fv
@getCFun "libGL" glMultiTexCoord4i glMultiTexCoord4i(target::GLenum, s::GLint, t::GLint, r::GLint, q::GLint)::Void
export glMultiTexCoord4i
@getCFun "libGL" glMultiTexCoord4iv glMultiTexCoord4iv(target::GLenum, v::Ptr{GLint})::Void
export glMultiTexCoord4iv
@getCFun "libGL" glMultiTexCoord4s glMultiTexCoord4s(target::GLenum, s::GLshort, t::GLshort, r::GLshort, q::GLshort)::Void
export glMultiTexCoord4s
@getCFun "libGL" glMultiTexCoord4sv glMultiTexCoord4sv(target::GLenum, v::Ptr{GLshort})::Void
export glMultiTexCoord4sv
@getCFun "libGL" glLoadTransposeMatrixf glLoadTransposeMatrixf(m::Ptr{GLfloat})::Void
export glLoadTransposeMatrixf
@getCFun "libGL" glLoadTransposeMatrixd glLoadTransposeMatrixd(m::Ptr{GLdouble})::Void
export glLoadTransposeMatrixd
@getCFun "libGL" glMultTransposeMatrixf glMultTransposeMatrixf(m::Ptr{GLfloat})::Void
export glMultTransposeMatrixf
@getCFun "libGL" glMultTransposeMatrixd glMultTransposeMatrixd(m::Ptr{GLdouble})::Void
export glMultTransposeMatrixd
@getCFun "libGL" glBlendFuncSeparate glBlendFuncSeparate(sfactorRGB::GLenum, dfactorRGB::GLenum, sfactorAlpha::GLenum, dfactorAlpha::GLenum)::Void
export glBlendFuncSeparate
@getCFun "libGL" glMultiDrawArrays glMultiDrawArrays(mode::GLenum, first::Ptr{GLint}, count::Ptr{GLsizei}, drawcount::GLsizei)::Void
export glMultiDrawArrays
@getCFun "libGL" glMultiDrawElements glMultiDrawElements(mode::GLenum, count::Ptr{GLsizei}, type_::GLenum, indices::Ptr{Ptr{Void}}, drawcount::GLsizei)::Void
export glMultiDrawElements
@getCFun "libGL" glPointParameterf glPointParameterf(pname::GLenum, param::GLfloat)::Void
export glPointParameterf
@getCFun "libGL" glPointParameterfv glPointParameterfv(pname::GLenum, params::Ptr{GLfloat})::Void
export glPointParameterfv
@getCFun "libGL" glPointParameteri glPointParameteri(pname::GLenum, param::GLint)::Void
export glPointParameteri
@getCFun "libGL" glPointParameteriv glPointParameteriv(pname::GLenum, params::Ptr{GLint})::Void
export glPointParameteriv
@getCFun "libGL" glFogCoordf glFogCoordf(coord::GLfloat)::Void
export glFogCoordf
@getCFun "libGL" glFogCoordfv glFogCoordfv(coord::Ptr{GLfloat})::Void
export glFogCoordfv
@getCFun "libGL" glFogCoordd glFogCoordd(coord::GLdouble)::Void
export glFogCoordd
@getCFun "libGL" glFogCoorddv glFogCoorddv(coord::Ptr{GLdouble})::Void
export glFogCoorddv
@getCFun "libGL" glFogCoordPointer glFogCoordPointer(type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glFogCoordPointer
@getCFun "libGL" glSecondaryColor3b glSecondaryColor3b(red::GLbyte, green::GLbyte, blue::GLbyte)::Void
export glSecondaryColor3b
@getCFun "libGL" glSecondaryColor3bv glSecondaryColor3bv(v::Ptr{GLbyte})::Void
export glSecondaryColor3bv
@getCFun "libGL" glSecondaryColor3d glSecondaryColor3d(red::GLdouble, green::GLdouble, blue::GLdouble)::Void
export glSecondaryColor3d
@getCFun "libGL" glSecondaryColor3dv glSecondaryColor3dv(v::Ptr{GLdouble})::Void
export glSecondaryColor3dv
@getCFun "libGL" glSecondaryColor3f glSecondaryColor3f(red::GLfloat, green::GLfloat, blue::GLfloat)::Void
export glSecondaryColor3f
@getCFun "libGL" glSecondaryColor3fv glSecondaryColor3fv(v::Ptr{GLfloat})::Void
export glSecondaryColor3fv
@getCFun "libGL" glSecondaryColor3i glSecondaryColor3i(red::GLint, green::GLint, blue::GLint)::Void
export glSecondaryColor3i
@getCFun "libGL" glSecondaryColor3iv glSecondaryColor3iv(v::Ptr{GLint})::Void
export glSecondaryColor3iv
@getCFun "libGL" glSecondaryColor3s glSecondaryColor3s(red::GLshort, green::GLshort, blue::GLshort)::Void
export glSecondaryColor3s
@getCFun "libGL" glSecondaryColor3sv glSecondaryColor3sv(v::Ptr{GLshort})::Void
export glSecondaryColor3sv
@getCFun "libGL" glSecondaryColor3ub glSecondaryColor3ub(red::GLubyte, green::GLubyte, blue::GLubyte)::Void
export glSecondaryColor3ub
@getCFun "libGL" glSecondaryColor3ubv glSecondaryColor3ubv(v::Ptr{GLubyte})::Void
export glSecondaryColor3ubv
@getCFun "libGL" glSecondaryColor3ui glSecondaryColor3ui(red::GLuint, green::GLuint, blue::GLuint)::Void
export glSecondaryColor3ui
@getCFun "libGL" glSecondaryColor3uiv glSecondaryColor3uiv(v::Ptr{GLuint})::Void
export glSecondaryColor3uiv
@getCFun "libGL" glSecondaryColor3us glSecondaryColor3us(red::GLushort, green::GLushort, blue::GLushort)::Void
export glSecondaryColor3us
@getCFun "libGL" glSecondaryColor3usv glSecondaryColor3usv(v::Ptr{GLushort})::Void
export glSecondaryColor3usv
@getCFun "libGL" glSecondaryColorPointer glSecondaryColorPointer(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void
export glSecondaryColorPointer
@getCFun "libGL" glWindowPos2d glWindowPos2d(x::GLdouble, y::GLdouble)::Void
export glWindowPos2d
@getCFun "libGL" glWindowPos2dv glWindowPos2dv(v::Ptr{GLdouble})::Void
export glWindowPos2dv
@getCFun "libGL" glWindowPos2f glWindowPos2f(x::GLfloat, y::GLfloat)::Void
export glWindowPos2f
@getCFun "libGL" glWindowPos2fv glWindowPos2fv(v::Ptr{GLfloat})::Void
export glWindowPos2fv
@getCFun "libGL" glWindowPos2i glWindowPos2i(x::GLint, y::GLint)::Void
export glWindowPos2i
@getCFun "libGL" glWindowPos2iv glWindowPos2iv(v::Ptr{GLint})::Void
export glWindowPos2iv
@getCFun "libGL" glWindowPos2s glWindowPos2s(x::GLshort, y::GLshort)::Void
export glWindowPos2s
@getCFun "libGL" glWindowPos2sv glWindowPos2sv(v::Ptr{GLshort})::Void
export glWindowPos2sv
@getCFun "libGL" glWindowPos3d glWindowPos3d(x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glWindowPos3d
@getCFun "libGL" glWindowPos3dv glWindowPos3dv(v::Ptr{GLdouble})::Void
export glWindowPos3dv
@getCFun "libGL" glWindowPos3f glWindowPos3f(x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glWindowPos3f
@getCFun "libGL" glWindowPos3fv glWindowPos3fv(v::Ptr{GLfloat})::Void
export glWindowPos3fv
@getCFun "libGL" glWindowPos3i glWindowPos3i(x::GLint, y::GLint, z::GLint)::Void
export glWindowPos3i
@getCFun "libGL" glWindowPos3iv glWindowPos3iv(v::Ptr{GLint})::Void
export glWindowPos3iv
@getCFun "libGL" glWindowPos3s glWindowPos3s(x::GLshort, y::GLshort, z::GLshort)::Void
export glWindowPos3s
@getCFun "libGL" glWindowPos3sv glWindowPos3sv(v::Ptr{GLshort})::Void
export glWindowPos3sv
@getCFun "libGL" glGenQueries glGenQueries(n::GLsizei, ids::Ptr{GLuint})::Void
export glGenQueries
@getCFun "libGL" glDeleteQueries glDeleteQueries(n::GLsizei, ids::Ptr{GLuint})::Void
export glDeleteQueries
@getCFun "libGL" glIsQuery glIsQuery(id::GLuint)::Bool
export glIsQuery
@getCFun "libGL" glBeginQuery glBeginQuery(target::GLenum, id::GLuint)::Void
export glBeginQuery
@getCFun "libGL" glEndQuery glEndQuery(target::GLenum)::Void
export glEndQuery
@getCFun "libGL" glGetQueryiv glGetQueryiv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetQueryiv
@getCFun "libGL" glGetQueryObjectiv glGetQueryObjectiv(id::GLuint, pname::GLenum, params::Ptr{GLint})::Void
export glGetQueryObjectiv
@getCFun "libGL" glGetQueryObjectuiv glGetQueryObjectuiv(id::GLuint, pname::GLenum, params::Ptr{GLuint})::Void
export glGetQueryObjectuiv
@getCFun "libGL" glBindBuffer glBindBuffer(target::GLenum, buffer::GLuint)::Void
export glBindBuffer
@getCFun "libGL" glDeleteBuffers glDeleteBuffers(n::GLsizei, buffers::Ptr{GLuint})::Void
export glDeleteBuffers
@getCFun "libGL" glGenBuffers glGenBuffers(n::GLsizei, buffers::Ptr{GLuint})::Void
export glGenBuffers
@getCFun "libGL" glIsBuffer glIsBuffer(buffer::GLuint)::Bool
export glIsBuffer
@getCFun "libGL" glBufferData glBufferData(target::GLenum, size::GLsizeiptr, data::Ptr{Void}, usage::GLenum)::Void
export glBufferData
@getCFun "libGL" glBufferSubData glBufferSubData(target::GLenum, offset::GLintptr, size::GLsizeiptr, data::Ptr{Void})::Void
export glBufferSubData
@getCFun "libGL" glGetBufferSubData glGetBufferSubData(target::GLenum, offset::GLintptr, size::GLsizeiptr, data::Ptr{Void})::Void
export glGetBufferSubData
@getCFun "libGL" glMapBuffer glMapBuffer(target::GLenum, access::GLenum)::Ptr{Void}
export glMapBuffer
@getCFun "libGL" glUnmapBuffer glUnmapBuffer(target::GLenum)::Bool
export glUnmapBuffer
@getCFun "libGL" glGetBufferParameteriv glGetBufferParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void
export glGetBufferParameteriv
@getCFun "libGL" glGetBufferPointerv glGetBufferPointerv(target::GLenum, pname::GLenum, params::Ptr{Ptr{Void}})::Void
export glGetBufferPointerv
@getCFun "libGL" glBlendEquationSeparate glBlendEquationSeparate(modeRGB::GLenum, modeAlpha::GLenum)::Void
export glBlendEquationSeparate
@getCFun "libGL" glDrawBuffers glDrawBuffers(n::GLsizei, bufs::Ptr{GLenum})::Void
export glDrawBuffers
@getCFun "libGL" glStencilOpSeparate glStencilOpSeparate(face::GLenum, sfail::GLenum, dpfail::GLenum, dppass::GLenum)::Void
export glStencilOpSeparate
@getCFun "libGL" glStencilFuncSeparate glStencilFuncSeparate(face::GLenum, func_::GLenum, ref::GLint, mask::GLuint)::Void
export glStencilFuncSeparate
@getCFun "libGL" glStencilMaskSeparate glStencilMaskSeparate(face::GLenum, mask::GLuint)::Void
export glStencilMaskSeparate
@getCFun "libGL" glAttachShader glAttachShader(program::GLuint, shader::GLuint)::Void
export glAttachShader
@getCFun "libGL" glBindAttribLocation glBindAttribLocation(program::GLuint, index::GLuint, name::Ptr{GLchar})::Void
export glBindAttribLocation
@getCFun "libGL" glCompileShader glCompileShader(shader::GLuint)::Void
export glCompileShader
@getCFun "libGL" glCreateProgram glCreateProgram()::Cuint
export glCreateProgram
@getCFun "libGL" glCreateShader glCreateShader(type_::GLenum)::Cuint
export glCreateShader
@getCFun "libGL" glDeleteProgram glDeleteProgram(program::GLuint)::Void
export glDeleteProgram
@getCFun "libGL" glDeleteShader glDeleteShader(shader::GLuint)::Void
export glDeleteShader
@getCFun "libGL" glDetachShader glDetachShader(program::GLuint, shader::GLuint)::Void
export glDetachShader
@getCFun "libGL" glDisableVertexAttribArray glDisableVertexAttribArray(index::GLuint)::Void
export glDisableVertexAttribArray
@getCFun "libGL" glEnableVertexAttribArray glEnableVertexAttribArray(index::GLuint)::Void
export glEnableVertexAttribArray
@getCFun "libGL" glGetActiveAttrib glGetActiveAttrib(program::GLuint, index::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, size::Ptr{GLint}, type_::Ptr{GLenum}, name::Ptr{GLchar})::Void
export glGetActiveAttrib
@getCFun "libGL" glGetActiveUniform glGetActiveUniform(program::GLuint, index::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, size::Ptr{GLint}, type_::Ptr{GLenum}, name::Ptr{GLchar})::Void
export glGetActiveUniform
@getCFun "libGL" glGetAttachedShaders glGetAttachedShaders(program::GLuint, maxCount::GLsizei, count::Ptr{GLsizei}, obj::Ptr{GLuint})::Void
export glGetAttachedShaders
@getCFun "libGL" glGetAttribLocation glGetAttribLocation(program::GLuint, name::Ptr{GLchar})::Cint
export glGetAttribLocation
@getCFun "libGL" glGetProgramiv glGetProgramiv(program::GLuint, pname::GLenum, params::Ptr{GLint})::Void
export glGetProgramiv
@getCFun "libGL" glGetProgramInfoLog glGetProgramInfoLog(program::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, infoLog::Ptr{GLchar})::Void
export glGetProgramInfoLog
@getCFun "libGL" glGetShaderiv glGetShaderiv(shader::GLuint, pname::GLenum, params::Ptr{GLint})::Void
export glGetShaderiv
@getCFun "libGL" glGetShaderInfoLog glGetShaderInfoLog(shader::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, infoLog::Ptr{GLchar})::Void
export glGetShaderInfoLog
@getCFun "libGL" glGetShaderSource glGetShaderSource(shader::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, source::Ptr{GLchar})::Void
export glGetShaderSource
@getCFun "libGL" glGetUniformLocation glGetUniformLocation(program::GLuint, name::Ptr{GLchar})::Cint
export glGetUniformLocation
@getCFun "libGL" glGetUniformfv glGetUniformfv(program::GLuint, location::GLint, params::Ptr{GLfloat})::Void
export glGetUniformfv
@getCFun "libGL" glGetUniformiv glGetUniformiv(program::GLuint, location::GLint, params::Ptr{GLint})::Void
export glGetUniformiv
@getCFun "libGL" glGetVertexAttribdv glGetVertexAttribdv(index::GLuint, pname::GLenum, params::Ptr{GLdouble})::Void
export glGetVertexAttribdv
@getCFun "libGL" glGetVertexAttribfv glGetVertexAttribfv(index::GLuint, pname::GLenum, params::Ptr{GLfloat})::Void
export glGetVertexAttribfv
@getCFun "libGL" glGetVertexAttribiv glGetVertexAttribiv(index::GLuint, pname::GLenum, params::Ptr{GLint})::Void
export glGetVertexAttribiv
@getCFun "libGL" glGetVertexAttribPointerv glGetVertexAttribPointerv(index::GLuint, pname::GLenum, pointer::Ptr{Ptr{Void}})::Void
export glGetVertexAttribPointerv
@getCFun "libGL" glIsProgram glIsProgram(program::GLuint)::Bool
export glIsProgram
@getCFun "libGL" glIsShader glIsShader(shader::GLuint)::Bool
export glIsShader
@getCFun "libGL" glLinkProgram glLinkProgram(program::GLuint)::Void
export glLinkProgram
@getCFun "libGL" glShaderSource glShaderSource(shader::GLuint, count::GLsizei, string_::Ptr{Uint8}, length::Ptr{GLint})::Void
export glShaderSource
@getCFun "libGL" glUseProgram glUseProgram(program::GLuint)::Void
export glUseProgram
@getCFun "libGL" glUniform1f glUniform1f(location::GLint, v0::GLfloat)::Void
export glUniform1f
@getCFun "libGL" glUniform2f glUniform2f(location::GLint, v0::GLfloat, v1::GLfloat)::Void
export glUniform2f
@getCFun "libGL" glUniform3f glUniform3f(location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat)::Void
export glUniform3f
@getCFun "libGL" glUniform4f glUniform4f(location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat, v3::GLfloat)::Void
export glUniform4f
@getCFun "libGL" glUniform1i glUniform1i(location::GLint, v0::GLint)::Void
export glUniform1i
@getCFun "libGL" glUniform2i glUniform2i(location::GLint, v0::GLint, v1::GLint)::Void
export glUniform2i
@getCFun "libGL" glUniform3i glUniform3i(location::GLint, v0::GLint, v1::GLint, v2::GLint)::Void
export glUniform3i
@getCFun "libGL" glUniform4i glUniform4i(location::GLint, v0::GLint, v1::GLint, v2::GLint, v3::GLint)::Void
export glUniform4i
@getCFun "libGL" glUniform1fv glUniform1fv(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void
export glUniform1fv
@getCFun "libGL" glUniform2fv glUniform2fv(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void
export glUniform2fv
@getCFun "libGL" glUniform3fv glUniform3fv(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void
export glUniform3fv
@getCFun "libGL" glUniform4fv glUniform4fv(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void
export glUniform4fv
@getCFun "libGL" glUniform1iv glUniform1iv(location::GLint, count::GLsizei, value::Ptr{GLint})::Void
export glUniform1iv
@getCFun "libGL" glUniform2iv glUniform2iv(location::GLint, count::GLsizei, value::Ptr{GLint})::Void
export glUniform2iv
@getCFun "libGL" glUniform3iv glUniform3iv(location::GLint, count::GLsizei, value::Ptr{GLint})::Void
export glUniform3iv
@getCFun "libGL" glUniform4iv glUniform4iv(location::GLint, count::GLsizei, value::Ptr{GLint})::Void
export glUniform4iv
@getCFun "libGL" glUniformMatrix2fv glUniformMatrix2fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix2fv
@getCFun "libGL" glUniformMatrix3fv glUniformMatrix3fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix3fv
@getCFun "libGL" glUniformMatrix4fv glUniformMatrix4fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix4fv
@getCFun "libGL" glValidateProgram glValidateProgram(program::GLuint)::Void
export glValidateProgram
@getCFun "libGL" glVertexAttrib1d glVertexAttrib1d(index::GLuint, x::GLdouble)::Void
export glVertexAttrib1d
@getCFun "libGL" glVertexAttrib1dv glVertexAttrib1dv(index::GLuint, v::Ptr{GLdouble})::Void
export glVertexAttrib1dv
@getCFun "libGL" glVertexAttrib1f glVertexAttrib1f(index::GLuint, x::GLfloat)::Void
export glVertexAttrib1f
@getCFun "libGL" glVertexAttrib1fv glVertexAttrib1fv(index::GLuint, v::Ptr{GLfloat})::Void
export glVertexAttrib1fv
@getCFun "libGL" glVertexAttrib1s glVertexAttrib1s(index::GLuint, x::GLshort)::Void
export glVertexAttrib1s
@getCFun "libGL" glVertexAttrib1sv glVertexAttrib1sv(index::GLuint, v::Ptr{GLshort})::Void
export glVertexAttrib1sv
@getCFun "libGL" glVertexAttrib2d glVertexAttrib2d(index::GLuint, x::GLdouble, y::GLdouble)::Void
export glVertexAttrib2d
@getCFun "libGL" glVertexAttrib2dv glVertexAttrib2dv(index::GLuint, v::Ptr{GLdouble})::Void
export glVertexAttrib2dv
@getCFun "libGL" glVertexAttrib2f glVertexAttrib2f(index::GLuint, x::GLfloat, y::GLfloat)::Void
export glVertexAttrib2f
@getCFun "libGL" glVertexAttrib2fv glVertexAttrib2fv(index::GLuint, v::Ptr{GLfloat})::Void
export glVertexAttrib2fv
@getCFun "libGL" glVertexAttrib2s glVertexAttrib2s(index::GLuint, x::GLshort, y::GLshort)::Void
export glVertexAttrib2s
@getCFun "libGL" glVertexAttrib2sv glVertexAttrib2sv(index::GLuint, v::Ptr{GLshort})::Void
export glVertexAttrib2sv
@getCFun "libGL" glVertexAttrib3d glVertexAttrib3d(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble)::Void
export glVertexAttrib3d
@getCFun "libGL" glVertexAttrib3dv glVertexAttrib3dv(index::GLuint, v::Ptr{GLdouble})::Void
export glVertexAttrib3dv
@getCFun "libGL" glVertexAttrib3f glVertexAttrib3f(index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat)::Void
export glVertexAttrib3f
@getCFun "libGL" glVertexAttrib3fv glVertexAttrib3fv(index::GLuint, v::Ptr{GLfloat})::Void
export glVertexAttrib3fv
@getCFun "libGL" glVertexAttrib3s glVertexAttrib3s(index::GLuint, x::GLshort, y::GLshort, z::GLshort)::Void
export glVertexAttrib3s
@getCFun "libGL" glVertexAttrib3sv glVertexAttrib3sv(index::GLuint, v::Ptr{GLshort})::Void
export glVertexAttrib3sv
@getCFun "libGL" glVertexAttrib4Nbv glVertexAttrib4Nbv(index::GLuint, v::Ptr{GLbyte})::Void
export glVertexAttrib4Nbv
@getCFun "libGL" glVertexAttrib4Niv glVertexAttrib4Niv(index::GLuint, v::Ptr{GLint})::Void
export glVertexAttrib4Niv
@getCFun "libGL" glVertexAttrib4Nsv glVertexAttrib4Nsv(index::GLuint, v::Ptr{GLshort})::Void
export glVertexAttrib4Nsv
@getCFun "libGL" glVertexAttrib4Nub glVertexAttrib4Nub(index::GLuint, x::GLubyte, y::GLubyte, z::GLubyte, w::GLubyte)::Void
export glVertexAttrib4Nub
@getCFun "libGL" glVertexAttrib4Nubv glVertexAttrib4Nubv(index::GLuint, v::Ptr{GLubyte})::Void
export glVertexAttrib4Nubv
@getCFun "libGL" glVertexAttrib4Nuiv glVertexAttrib4Nuiv(index::GLuint, v::Ptr{GLuint})::Void
export glVertexAttrib4Nuiv
@getCFun "libGL" glVertexAttrib4Nusv glVertexAttrib4Nusv(index::GLuint, v::Ptr{GLushort})::Void
export glVertexAttrib4Nusv
@getCFun "libGL" glVertexAttrib4bv glVertexAttrib4bv(index::GLuint, v::Ptr{GLbyte})::Void
export glVertexAttrib4bv
@getCFun "libGL" glVertexAttrib4d glVertexAttrib4d(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void
export glVertexAttrib4d
@getCFun "libGL" glVertexAttrib4dv glVertexAttrib4dv(index::GLuint, v::Ptr{GLdouble})::Void
export glVertexAttrib4dv
@getCFun "libGL" glVertexAttrib4f glVertexAttrib4f(index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void
export glVertexAttrib4f
@getCFun "libGL" glVertexAttrib4fv glVertexAttrib4fv(index::GLuint, v::Ptr{GLfloat})::Void
export glVertexAttrib4fv
@getCFun "libGL" glVertexAttrib4iv glVertexAttrib4iv(index::GLuint, v::Ptr{GLint})::Void
export glVertexAttrib4iv
@getCFun "libGL" glVertexAttrib4s glVertexAttrib4s(index::GLuint, x::GLshort, y::GLshort, z::GLshort, w::GLshort)::Void
export glVertexAttrib4s
@getCFun "libGL" glVertexAttrib4sv glVertexAttrib4sv(index::GLuint, v::Ptr{GLshort})::Void
export glVertexAttrib4sv
@getCFun "libGL" glVertexAttrib4ubv glVertexAttrib4ubv(index::GLuint, v::Ptr{GLubyte})::Void
export glVertexAttrib4ubv
@getCFun "libGL" glVertexAttrib4uiv glVertexAttrib4uiv(index::GLuint, v::Ptr{GLuint})::Void
export glVertexAttrib4uiv
@getCFun "libGL" glVertexAttrib4usv glVertexAttrib4usv(index::GLuint, v::Ptr{GLushort})::Void
export glVertexAttrib4usv
@getCFun "libGL" glVertexAttribPointer glVertexAttribPointer(index::GLuint, size::GLint, type_::GLenum, normalized::GLboolean, stride::GLsizei, pointer::Ptr{Void})::Void
export glVertexAttribPointer
@getCFun "libGL" glUniformMatrix2x3fv glUniformMatrix2x3fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix2x3fv
@getCFun "libGL" glUniformMatrix3x2fv glUniformMatrix3x2fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix3x2fv
@getCFun "libGL" glUniformMatrix2x4fv glUniformMatrix2x4fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix2x4fv
@getCFun "libGL" glUniformMatrix4x2fv glUniformMatrix4x2fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix4x2fv
@getCFun "libGL" glUniformMatrix3x4fv glUniformMatrix3x4fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix3x4fv
@getCFun "libGL" glUniformMatrix4x3fv glUniformMatrix4x3fv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void
export glUniformMatrix4x3fv

end
