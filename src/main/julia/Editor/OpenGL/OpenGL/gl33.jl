#Types, functions and constants, needed on top of the common ones
#types
const GL_GL33_TYPES = [
]
#constants
const GL_GL33_CONSTANTS = [
:(const UNIFORM_BUFFER_BINDING                                          = 0x8A28),
:(const TEXTURE_2D_MULTISAMPLE                                          = 0x9100),
:(const R16F                                                            = 0x822D),
:(const COLOR_ATTACHMENT6                                               = 0x8CE6),
:(const RGBA32F                                                         = 0x8814),
:(const FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER                            = 0x8CD4),
:(const RENDERBUFFER_SAMPLES                                            = 0x8CAB),
:(const MAX_COLOR_ATTACHMENTS                                           = 0x8CDF),
:(const GEOMETRY_SHADER                                                 = 0x8DD9),
:(const UNIFORM_BLOCK_NAME_LENGTH                                       = 0x8A41),
:(const INT_SAMPLER_2D_RECT                                             = 0x8DCD),
:(const MAX_GEOMETRY_TEXTURE_IMAGE_UNITS                                = 0x8C29),
:(const BLUE_INTEGER                                                    = 0x8D96),
:(const TEXTURE_BINDING_2D_MULTISAMPLE                                  = 0x9104),
:(const MAX_UNIFORM_BLOCK_SIZE                                          = 0x8A30),
:(const COPY_WRITE_BUFFER                                               = 0x8F37),
:(const UNSIGNED_NORMALIZED                                             = 0x8C17),
:(const CLIP_DISTANCE4                                                  = 0x3004),
:(const RG16                                                            = 0x822C),
:(const MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS                            = 0x8DE1),
:(const INVALID_INDEX                                                   = 0xFFFFFFFF),
:(const R8_SNORM                                                        = 0x8F94),
:(const FRAMEBUFFER_INCOMPLETE_MULTISAMPLE                              = 0x8D56),
:(const RG32F                                                           = 0x8230),
:(const QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION                        = 0x8E4C),
:(const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                       = 0x910D),
:(const MAX_TEXTURE_BUFFER_SIZE                                         = 0x8C2B),
:(const FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE                    = 0x8CD3),
:(const RENDERBUFFER_RED_SIZE                                           = 0x8D50),
:(const UNIFORM_SIZE                                                    = 0x8A38),
:(const UNSIGNED_INT_24_8                                               = 0x84FA),
:(const MAX_GEOMETRY_OUTPUT_COMPONENTS                                  = 0x9124),
:(const R11F_G11F_B10F                                                  = 0x8C3A),
:(const SAMPLER_2D_ARRAY                                                = 0x8DC1),
:(const RENDERBUFFER                                                    = 0x8D41),
:(const SYNC_STATUS                                                     = 0x9114),
:(const ANY_SAMPLES_PASSED                                              = 0x8C2F),
:(const FRAMEBUFFER_ATTACHMENT_OBJECT_NAME                              = 0x8CD1),
:(const COLOR_ATTACHMENT10                                              = 0x8CEA),
:(const MAX_COLOR_TEXTURE_SAMPLES                                       = 0x910E),
:(const RGB_INTEGER                                                     = 0x8D98),
:(const STENCIL_INDEX16                                                 = 0x8D49),
:(const PRIMITIVE_RESTART_INDEX                                         = 0x8F9E),
:(const BGRA_INTEGER                                                    = 0x8D9B),
:(const MAX_DEPTH_TEXTURE_SAMPLES                                       = 0x910F),
:(const SYNC_FLAGS                                                      = 0x9115),
:(const MAX_FRAGMENT_UNIFORM_BLOCKS                                     = 0x8A2D),
:(const RG16UI                                                          = 0x823A),
:(const FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE                               = 0x8216),
:(const MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS                        = 0x8A33),
:(const R16UI                                                           = 0x8234),
:(const TEXTURE_BINDING_1D_ARRAY                                        = 0x8C1C),
:(const INT_SAMPLER_CUBE                                                = 0x8DCC),
:(const CLIP_DISTANCE2                                                  = 0x3002),
:(const TRANSFORM_FEEDBACK_BUFFER_MODE                                  = 0x8C7F),
:(const UNSIGNED_INT_SAMPLER_BUFFER                                     = 0x8DD8),
:(const DRAW_FRAMEBUFFER                                                = 0x8CA9),
:(const TEXTURE_BLUE_TYPE                                               = 0x8C12),
:(const CLAMP_VERTEX_COLOR                                              = 0x891A),
:(const GEOMETRY_INPUT_TYPE                                             = 0x8917),
:(const COLOR_ATTACHMENT5                                               = 0x8CE5),
:(const RG32I                                                           = 0x823B),
:(const RGBA16UI                                                        = 0x8D76),
:(const COLOR_ATTACHMENT15                                              = 0x8CEF),
:(const RGBA16I                                                         = 0x8D88),
:(const R8I                                                             = 0x8231),
:(const MAX_VERTEX_OUTPUT_COMPONENTS                                    = 0x9122),
:(const FRAMEBUFFER_INCOMPLETE_READ_BUFFER                              = 0x8CDC),
:(const UNSIGNED_INT_VEC2                                               = 0x8DC6),
:(const ONE_MINUS_SRC1_ALPHA                                            = 0x88FB),
:(const DRAW_FRAMEBUFFER_BINDING                                        = 0x8CA6),
:(const MAX_ARRAY_TEXTURE_LAYERS                                        = 0x88FF),
:(const INTERLEAVED_ATTRIBS                                             = 0x8C8C),
:(const MAX_GEOMETRY_OUTPUT_VERTICES                                    = 0x8DE0),
:(const R32I                                                            = 0x8235),
:(const RGBA16F                                                         = 0x881A),
:(const UNIFORM_BUFFER                                                  = 0x8A11),
:(const RGB16I                                                          = 0x8D89),
:(const SAMPLE_MASK_VALUE                                               = 0x8E52),
:(const FRAMEBUFFER_UNDEFINED                                           = 0x8219),
:(const QUERY_BY_REGION_WAIT                                            = 0x8E15),
:(const PRIMITIVES_GENERATED                                            = 0x8C87),
:(const COLOR_ATTACHMENT8                                               = 0x8CE8),
:(const COMPRESSED_RED                                                  = 0x8225),
:(const TEXTURE_DEPTH_TYPE                                              = 0x8C16),
:(const MAP_WRITE_BIT                                                   = 0x0002),
:(const VERTEX_ATTRIB_ARRAY_DIVISOR                                     = 0x88FE),
:(const RGBA8I                                                          = 0x8D8E),
:(const PROXY_TEXTURE_2D_ARRAY                                          = 0x8C1B),
:(const TRANSFORM_FEEDBACK_BUFFER_START                                 = 0x8C84),
:(const RG8_SNORM                                                       = 0x8F95),
:(const RED_SNORM                                                       = 0x8F90),
:(const TEXTURE_2D_ARRAY                                                = 0x8C1A),
:(const OBJECT_TYPE                                                     = 0x9112),
:(const INT_2_10_10_10_REV                                              = 0x8D9F),
:(const GREEN_INTEGER                                                   = 0x8D95),
:(const UNIFORM_BLOCK_DATA_SIZE                                         = 0x8A40),
:(const RGB32I                                                          = 0x8D83),
:(const ONE_MINUS_SRC1_COLOR                                            = 0x88FA),
:(const MAX_GEOMETRY_INPUT_COMPONENTS                                   = 0x9123),
:(const INDEX                                                           = 0x8222),
:(const MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS                   = 0x8C8A),
:(const MAX_FRAGMENT_INPUT_COMPONENTS                                   = 0x9125),
:(const SAMPLER_2D_RECT                                                 = 0x8B63),
:(const RGBA_SNORM                                                      = 0x8F93),
:(const TRANSFORM_FEEDBACK_VARYINGS                                     = 0x8C83),
:(const FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE                             = 0x8217),
:(const FRAMEBUFFER_BINDING                                             = 0x8CA6),
:(const PROXY_TEXTURE_2D_MULTISAMPLE                                    = 0x9101),
:(const TIME_ELAPSED                                                    = 0x88BF),
:(const INT_SAMPLER_1D                                                  = 0x8DC9),
:(const FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE                           = 0x8211),
:(const RGB8_SNORM                                                      = 0x8F96),
:(const RGB_SNORM                                                       = 0x8F92),
:(const SIGNED_NORMALIZED                                               = 0x8F9C),
:(const TIMEOUT_IGNORED                                                 = 0xFFFFFFFFFFFFFFFF),
:(const RASTERIZER_DISCARD                                              = 0x8C89),
:(const READ_FRAMEBUFFER_BINDING                                        = 0x8CAA),
:(const UNIFORM_ARRAY_STRIDE                                            = 0x8A3C),
:(const FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE                              = 0x8CD0),
:(const INT_SAMPLER_2D_MULTISAMPLE                                      = 0x9109),
:(const GEOMETRY_OUTPUT_TYPE                                            = 0x8918),
:(const SAMPLER_2D_MULTISAMPLE_ARRAY                                    = 0x910B),
:(const VERTEX_ARRAY_BINDING                                            = 0x85B5),
:(const COLOR_ATTACHMENT9                                               = 0x8CE9),
:(const TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH                           = 0x8C76),
:(const MAX_UNIFORM_BUFFER_BINDINGS                                     = 0x8A2F),
:(const UNIFORM_BLOCK_ACTIVE_UNIFORMS                                   = 0x8A42),
:(const UNIFORM_IS_ROW_MAJOR                                            = 0x8A3E),
:(const RGB10_A2UI                                                      = 0x906F),
:(const FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING                           = 0x8210),
:(const COLOR_ATTACHMENT7                                               = 0x8CE7),
:(const UNSIGNED_INT_5_9_9_9_REV                                        = 0x8C3E),
:(const FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT                       = 0x8CD7),
:(const R32F                                                            = 0x822E),
:(const UNIFORM_BUFFER_SIZE                                             = 0x8A2A),
:(const MAJOR_VERSION                                                   = 0x821B),
:(const TEXTURE_1D_ARRAY                                                = 0x8C18),
:(const RG                                                              = 0x8227),
:(const MAX_VARYING_COMPONENTS                                          = 0x8B4B),
:(const RG16I                                                           = 0x8239),
:(const FRAMEBUFFER_ATTACHMENT_RED_SIZE                                 = 0x8212),
:(const QUERY_BY_REGION_NO_WAIT                                         = 0x8E16),
:(const UNSIGNED_INT_SAMPLER_CUBE                                       = 0x8DD4),
:(const R8                                                              = 0x8229),
:(const MAP_UNSYNCHRONIZED_BIT                                          = 0x0020),
:(const MAX_DUAL_SOURCE_DRAW_BUFFERS                                    = 0x88FC),
:(const RGBA32UI                                                        = 0x8D70),
:(const RGB16F                                                          = 0x881B),
:(const TIMEOUT_EXPIRED                                                 = 0x911B),
:(const PROVOKING_VERTEX                                                = 0x8E4F),
:(const VERTEX_ATTRIB_ARRAY_INTEGER                                     = 0x88FD),
:(const RGB32UI                                                         = 0x8D71),
:(const RGB32F                                                          = 0x8815),
:(const UNSIGNED_INT_SAMPLER_2D                                         = 0x8DD2),
:(const SAMPLER_BINDING                                                 = 0x8919),
:(const MAP_READ_BIT                                                    = 0x0001),
:(const SAMPLE_MASK                                                     = 0x8E51),
:(const TEXTURE_BINDING_2D_ARRAY                                        = 0x8C1D),
:(const SAMPLER_2D_RECT_SHADOW                                          = 0x8B64),
:(const COLOR_ATTACHMENT2                                               = 0x8CE2),
:(const FRAMEBUFFER_COMPLETE                                            = 0x8CD5),
:(const CONTEXT_CORE_PROFILE_BIT                                        = 0x00000001),
:(const MAP_INVALIDATE_RANGE_BIT                                        = 0x0004),
:(const TEXTURE_SWIZZLE_R                                               = 0x8E42),
:(const COMPRESSED_RG_RGTC2                                             = 0x8DBD),
:(const UNIFORM_NAME_LENGTH                                             = 0x8A39),
:(const MINOR_VERSION                                                   = 0x821C),
:(const RENDERBUFFER_HEIGHT                                             = 0x8D43),
:(const UNSIGNED_INT_VEC3                                               = 0x8DC7),
:(const RENDERBUFFER_BINDING                                            = 0x8CA7),
:(const ALREADY_SIGNALED                                                = 0x911A),
:(const TRIANGLES_ADJACENCY                                             = 0x000C),
:(const INVALID_FRAMEBUFFER_OPERATION                                   = 0x0506),
:(const SRC1_COLOR                                                      = 0x88F9),
:(const RENDERBUFFER_STENCIL_SIZE                                       = 0x8D55),
:(const PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY                              = 0x9103),
:(const TEXTURE_SWIZZLE_RGBA                                            = 0x8E46),
:(const CLAMP_FRAGMENT_COLOR                                            = 0x891B),
:(const TEXTURE_RED_TYPE                                                = 0x8C10),
:(const FIXED_ONLY                                                      = 0x891D),
:(const UNIFORM_OFFSET                                                  = 0x8A3B),
:(const PRIMITIVE_RESTART                                               = 0x8F9D),
:(const INT_SAMPLER_1D_ARRAY                                            = 0x8DCE),
:(const TIMESTAMP                                                       = 0x8E28),
:(const UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES                            = 0x8A43),
:(const TEXTURE_RECTANGLE                                               = 0x84F5),
:(const UNSIGNED_INT_SAMPLER_1D                                         = 0x8DD1),
:(const RGB9_E5                                                         = 0x8C3D),
:(const RG_SNORM                                                        = 0x8F91),
:(const SYNC_CONDITION                                                  = 0x9113),
:(const RENDERBUFFER_WIDTH                                              = 0x8D42),
:(const CLIP_DISTANCE5                                                  = 0x3005),
:(const SAMPLER_1D_ARRAY_SHADOW                                         = 0x8DC3),
:(const RENDERBUFFER_BLUE_SIZE                                          = 0x8D52),
:(const CONTEXT_COMPATIBILITY_PROFILE_BIT                               = 0x00000002),
:(const INT_SAMPLER_BUFFER                                              = 0x8DD0),
:(const TEXTURE_LUMINANCE_TYPE                                          = 0x8C14),
:(const DEPTH_CLAMP                                                     = 0x864F),
:(const BUFFER_MAP_OFFSET                                               = 0x9121),
:(const SYNC_FLUSH_COMMANDS_BIT                                         = 0x00000001),
:(const STENCIL_INDEX4                                                  = 0x8D47),
:(const UNSIGNED_INT_SAMPLER_2D_ARRAY                                   = 0x8DD7),
:(const CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT                             = 0x0001),
:(const FLOAT_32_UNSIGNED_INT_24_8_REV                                  = 0x8DAD),
:(const FRAMEBUFFER_ATTACHMENT_GREEN_SIZE                               = 0x8213),
:(const ALPHA_INTEGER                                                   = 0x8D97),
:(const TEXTURE_BINDING_RECTANGLE                                       = 0x84F6),
:(const MAX_COMBINED_UNIFORM_BLOCKS                                     = 0x8A2E),
:(const R16_SNORM                                                       = 0x8F98),
:(const COLOR_ATTACHMENT13                                              = 0x8CED),
:(const FRAMEBUFFER_DEFAULT                                             = 0x8218),
:(const WAIT_FAILED                                                     = 0x911D),
:(const TRANSFORM_FEEDBACK_BUFFER_BINDING                               = 0x8C8F),
:(const TEXTURE_GREEN_TYPE                                              = 0x8C11),
:(const UNIFORM_BUFFER_OFFSET_ALIGNMENT                                 = 0x8A34),
:(const RGBA8UI                                                         = 0x8D7C),
:(const RGB16UI                                                         = 0x8D77),
:(const GEOMETRY_VERTICES_OUT                                           = 0x8916),
:(const TEXTURE_STENCIL_SIZE                                            = 0x88F1),
:(const COLOR_ATTACHMENT3                                               = 0x8CE3),
:(const TEXTURE_INTENSITY_TYPE                                          = 0x8C15),
:(const RENDERBUFFER_GREEN_SIZE                                         = 0x8D51),
:(const FRAMEBUFFER                                                     = 0x8D40),
:(const FIRST_VERTEX_CONVENTION                                         = 0x8E4D),
:(const UNIFORM_TYPE                                                    = 0x8A37),
:(const QUERY_WAIT                                                      = 0x8E13),
:(const RG16_SNORM                                                      = 0x8F99),
:(const UNSIGNALED                                                      = 0x9118),
:(const HALF_FLOAT                                                      = 0x140B),
:(const TEXTURE_ALPHA_TYPE                                              = 0x8C13),
:(const STENCIL_INDEX1                                                  = 0x8D46),
:(const DEPTH24_STENCIL8                                                = 0x88F0),
:(const FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL                            = 0x8CD2),
:(const UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE                             = 0x910A),
:(const TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN                           = 0x8C88),
:(const STENCIL_ATTACHMENT                                              = 0x8D20),
:(const SEPARATE_ATTRIBS                                                = 0x8C8D),
:(const SAMPLER_2D_MULTISAMPLE                                          = 0x9108),
:(const SAMPLER_2D_ARRAY_SHADOW                                         = 0x8DC4),
:(const CONTEXT_FLAGS                                                   = 0x821E),
:(const TEXTURE_2D_MULTISAMPLE_ARRAY                                    = 0x9102),
:(const RG_INTEGER                                                      = 0x8228),
:(const QUERY_NO_WAIT                                                   = 0x8E14),
:(const UNSIGNED_INT_10F_11F_11F_REV                                    = 0x8C3B),
:(const SYNC_GPU_COMMANDS_COMPLETE                                      = 0x9117),
:(const COMPRESSED_RED_RGTC1                                            = 0x8DBB),
:(const CLIP_DISTANCE3                                                  = 0x3003),
:(const TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY                            = 0x9105),
:(const RGB8I                                                           = 0x8D8F),
:(const R16                                                             = 0x822A),
:(const RGBA_INTEGER                                                    = 0x8D99),
:(const FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE                               = 0x8215),
:(const MAX_PROGRAM_TEXEL_OFFSET                                        = 0x8905),
:(const UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER                       = 0x8A44),
:(const COMPRESSED_SIGNED_RED_RGTC1                                     = 0x8DBC),
:(const MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS                         = 0x8C8B),
:(const COMPARE_REF_TO_TEXTURE                                          = 0x884E),
:(const R8UI                                                            = 0x8232),
:(const RGBA8_SNORM                                                     = 0x8F97),
:(const INT_SAMPLER_2D                                                  = 0x8DCA),
:(const INT_SAMPLER_3D                                                  = 0x8DCB),
:(const ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH                            = 0x8A35),
:(const MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS                          = 0x8A31),
:(const DEPTH_COMPONENT32F                                              = 0x8CAC),
:(const RG16F                                                           = 0x822F),
:(const TEXTURE_SAMPLES                                                 = 0x9106),
:(const CONTEXT_PROFILE_MASK                                            = 0x9126),
:(const TEXTURE_BUFFER                                                  = 0x8C2A),
:(const COMPRESSED_RG                                                   = 0x8226),
:(const RENDERBUFFER_INTERNAL_FORMAT                                    = 0x8D44),
:(const CLAMP_READ_COLOR                                                = 0x891C),
:(const RGB8UI                                                          = 0x8D7D),
:(const BUFFER_ACCESS_FLAGS                                             = 0x911F),
:(const MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS                      = 0x8C80),
:(const RENDERBUFFER_DEPTH_SIZE                                         = 0x8D54),
:(const SAMPLER_1D_ARRAY                                                = 0x8DC0),
:(const CLIP_DISTANCE7                                                  = 0x3007),
:(const COPY_READ_BUFFER                                                = 0x8F36),
:(const TEXTURE_BINDING_BUFFER                                          = 0x8C2C),
:(const MAX_INTEGER_SAMPLES                                             = 0x9110),
:(const MAX_RECTANGLE_TEXTURE_SIZE                                      = 0x84F8),
:(const FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER                              = 0x8CDB),
:(const STENCIL_INDEX8                                                  = 0x8D48),
:(const TEXTURE_SWIZZLE_A                                               = 0x8E45),
:(const DEPTH_STENCIL                                                   = 0x84F9),
:(const PROXY_TEXTURE_RECTANGLE                                         = 0x84F7),
:(const TEXTURE_SWIZZLE_G                                               = 0x8E43),
:(const PROGRAM_POINT_SIZE                                              = 0x8642),
:(const CLIP_DISTANCE6                                                  = 0x3006),
:(const COLOR_ATTACHMENT12                                              = 0x8CEC),
:(const UNSIGNED_INT_SAMPLER_3D                                         = 0x8DD3),
:(const COLOR_ATTACHMENT4                                               = 0x8CE4),
:(const LAST_VERTEX_CONVENTION                                          = 0x8E4E),
:(const TEXTURE_SWIZZLE_B                                               = 0x8E44),
:(const UNIFORM_BLOCK_INDEX                                             = 0x8A3A),
:(const CLIP_DISTANCE1                                                  = 0x3001),
:(const MAP_FLUSH_EXPLICIT_BIT                                          = 0x0010),
:(const COLOR_ATTACHMENT1                                               = 0x8CE1),
:(const RGBA16_SNORM                                                    = 0x8F9B),
:(const UNSIGNED_INT_SAMPLER_2D_RECT                                    = 0x8DD5),
:(const SAMPLER_BUFFER                                                  = 0x8DC2),
:(const FRAMEBUFFER_INCOMPLETE_ATTACHMENT                               = 0x8CD6),
:(const BUFFER_MAP_LENGTH                                               = 0x9120),
:(const PROXY_TEXTURE_1D_ARRAY                                          = 0x8C19),
:(const DEPTH32F_STENCIL8                                               = 0x8CAD),
:(const UNIFORM_BUFFER_START                                            = 0x8A29),
:(const MAX_VERTEX_UNIFORM_BLOCKS                                       = 0x8A2B),
:(const TRANSFORM_FEEDBACK_BUFFER_SIZE                                  = 0x8C85),
:(const SAMPLE_POSITION                                                 = 0x8E50),
:(const RG32UI                                                          = 0x823C),
:(const UNIFORM_BLOCK_BINDING                                           = 0x8A3F),
:(const COLOR_ATTACHMENT11                                              = 0x8CEB),
:(const FRAMEBUFFER_ATTACHMENT_LAYERED                                  = 0x8DA7),
:(const TRANSFORM_FEEDBACK_BUFFER                                       = 0x8C8E),
:(const CONDITION_SATISFIED                                             = 0x911C),
:(const RG8I                                                            = 0x8237),
:(const TRIANGLE_STRIP_ADJACENCY                                        = 0x000D),
:(const TEXTURE_BUFFER_DATA_STORE_BINDING                               = 0x8C2D),
:(const R32UI                                                           = 0x8236),
:(const FRAMEBUFFER_SRGB                                                = 0x8DB9),
:(const COLOR_ATTACHMENT14                                              = 0x8CEE),
:(const MAX_SAMPLE_MASK_WORDS                                           = 0x8E59),
:(const INT_SAMPLER_2D_ARRAY                                            = 0x8DCF),
:(const DEPTH_STENCIL_ATTACHMENT                                        = 0x821A),
:(const SYNC_FENCE                                                      = 0x9116),
:(const TEXTURE_CUBE_MAP_SEAMLESS                                       = 0x884F),
:(const MAX_RENDERBUFFER_SIZE                                           = 0x84E8),
:(const COMPRESSED_SIGNED_RG_RGTC2                                      = 0x8DBE),
:(const ACTIVE_UNIFORM_BLOCKS                                           = 0x8A36),
:(const RED_INTEGER                                                     = 0x8D94),
:(const FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS                            = 0x8DA8),
:(const READ_FRAMEBUFFER                                                = 0x8CA8),
:(const FRAMEBUFFER_UNSUPPORTED                                         = 0x8CDD),
:(const LINES_ADJACENCY                                                 = 0x000A),
:(const MAX_GEOMETRY_UNIFORM_COMPONENTS                                 = 0x8DDF),
:(const RG8UI                                                           = 0x8238),
:(const SIGNALED                                                        = 0x9119),
:(const DEPTH_ATTACHMENT                                                = 0x8D00),
:(const UNSIGNED_INT_VEC4                                               = 0x8DC8),
:(const MAP_INVALIDATE_BUFFER_BIT                                       = 0x0008),
:(const UNIFORM_MATRIX_STRIDE                                           = 0x8A3D),
:(const CLIP_DISTANCE0                                                  = 0x3000),
:(const RG8                                                             = 0x822B),
:(const BGR_INTEGER                                                     = 0x8D9A),
:(const MAX_SAMPLES                                                     = 0x8D57),
:(const TEXTURE_FIXED_SAMPLE_LOCATIONS                                  = 0x9107),
:(const RENDERBUFFER_ALPHA_SIZE                                         = 0x8D53),
:(const MAX_SERVER_WAIT_TIMEOUT                                         = 0x9111),
:(const R16I                                                            = 0x8233),
:(const TEXTURE_SHARED_SIZE                                             = 0x8C3F),
:(const RGB16_SNORM                                                     = 0x8F9A),
:(const FRAMEBUFFER_ATTACHMENT_BLUE_SIZE                                = 0x8214),
:(const INT_SAMPLER_2D_MULTISAMPLE_ARRAY                                = 0x910C),
:(const UNSIGNED_INT_SAMPLER_1D_ARRAY                                   = 0x8DD6),
:(const SAMPLER_CUBE_SHADOW                                             = 0x8DC5),
:(const LINE_STRIP_ADJACENCY                                            = 0x000B),
:(const MAX_CLIP_DISTANCES                                              = 0x0D32),
:(const RGBA32I                                                         = 0x8D82),
:(const COLOR_ATTACHMENT0                                               = 0x8CE0),
:(const MIN_PROGRAM_TEXEL_OFFSET                                        = 0x8904),
:(const UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER                     = 0x8A46),
:(const NUM_EXTENSIONS                                                  = 0x821D)]
#function bodies
const GL_GL33_FUNCTIONS = [
:(glFramebufferRenderbuffer(target::GLenum, attachment::GLenum, renderbuffertarget::GLenum, renderbuffer::GLuint)::Void),
:(glBindBufferBase(target::GLenum, index::GLuint, buffer::GLuint)::Void),
:(glClientWaitSync(sync::GLsync, flags::GLbitfield, timeout::GLuClonglong)::Cint),
:(glGetIntegeri_v(target::GLenum, index::GLuint, data::Ptr{GLint})::Void),
:(glTexCoordP2ui(type_::GLenum, coords::GLuint)::Void),
:(glGetActiveUniformBlockName(program::GLuint, uniformBlockIndex::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, uniformBlockName::Ptr{GLchar})::Void),
:(glProvokingVertex(mode::GLenum)::Void),
:(glTexParameterIiv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttribI4usv(index::GLuint, v::Ptr{GLushort})::Void),
:(glVertexAttribI2iv(index::GLuint, v::Ptr{GLint})::Void),
:(glTexCoordP3ui(type_::GLenum, coords::GLuint)::Void),
:(glDeleteSync(sync::GLsync)::Void),
:(glGenSamplers(count::GLsizei, samplers::Ptr{GLuint})::Void),
:(glBindFragDataLocation(program::GLuint, color::GLuint, name::Ptr{GLchar})::Void),
:(glSamplerParameteri(sampler::GLuint, pname::GLenum, param::GLint)::Void),
:(glMultiDrawElementsBaseVertex(mode::GLenum, count::Ptr{GLsizei}, type_::GLenum, indices::Ptr{Ptr{Void}}, drawcount::GLsizei, basevertex::Ptr{GLint})::Void),
:(glGenRenderbuffers(n::GLsizei, renderbuffers::Ptr{GLuint})::Void),
:(glFlushMappedBufferRange(target::GLenum, offset::GLintptr, length::GLsizeiptr)::Void),
:(glUniform1ui(location::GLint, v0::GLuint)::Void),
:(glBeginConditionalRender(id::GLuint, mode::GLenum)::Void),
:(glGetActiveUniformsiv(program::GLuint, uniformCount::GLsizei, uniformIndices::Ptr{GLuint}, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetStringi(name::GLenum, index::GLuint)::Ptr{Cuchar}),
:(glTransformFeedbackVaryings(program::GLuint, count::GLsizei, varyings::Ptr{Uint8}, bufferMode::GLenum)::Void),
:(glGetSamplerParameterIiv(sampler::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetVertexAttribIuiv(index::GLuint, pname::GLenum, params::Ptr{GLuint})::Void),
:(glRenderbufferStorageMultisample(target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glUniform2ui(location::GLint, v0::GLuint, v1::GLuint)::Void),
:(glBindFramebuffer(target::GLenum, framebuffer::GLuint)::Void),
:(glGetQueryObjectui64v(id::GLuint, pname::GLenum, params::Ptr{GLuint64})::Void),
:(glFramebufferTexture3D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint, zoffset::GLint)::Void),
:(glVertexAttribDivisor(index::GLuint, divisor::GLuint)::Void),
:(glBindFragDataLocationIndexed(program::GLuint, colorNumber::GLuint, index::GLuint, name::Ptr{GLchar})::Void),
:(glDrawElementsBaseVertex(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, basevertex::GLint)::Void),
:(glMultiTexCoordP4ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glVertexAttribP4ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glSamplerParameterIuiv(sampler::GLuint, pname::GLenum, param::Ptr{GLuint})::Void),
:(glDrawElementsInstancedBaseVertex(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, instancecount::GLsizei, basevertex::GLint)::Void),
:(glColorMaski(index::GLuint, r::GLboolean, g::GLboolean, b::GLboolean, a::GLboolean)::Void),
:(glNormalP3ui(type_::GLenum, coords::GLuint)::Void),
:(glVertexP3ui(type_::GLenum, value::GLuint)::Void),
:(glGenerateMipmap(target::GLenum)::Void),
:(glDrawArraysInstanced(mode::GLenum, first::GLint, count::GLsizei, instancecount::GLsizei)::Void),
:(glDeleteRenderbuffers(n::GLsizei, renderbuffers::Ptr{GLuint})::Void),
:(glVertexAttribP1ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glWaitSync(sync::GLsync, flags::GLbitfield, timeout::GLuint64)::Void),
:(glMultiTexCoordP1ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glVertexAttribI1uiv(index::GLuint, v::Ptr{GLuint})::Void),
:(glGetUniformBlockIndex(program::GLuint, uniformBlockName::Ptr{GLchar})::Cuint),
:(glIsVertexArray(array::GLuint)::Bool),
:(glVertexAttribP2uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glIsEnabledi(target::GLenum, index::GLuint)::Bool),
:(glVertexAttribP2ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glGenVertexArrays(n::GLsizei, arrays::Ptr{GLuint})::Void),
:(glSecondaryColorP3uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glQueryCounter(id::GLuint, target::GLenum)::Void),
:(glNormalP3uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glTexCoordP2uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glUniform4ui(location::GLint, v0::GLuint, v1::GLuint, v2::GLuint, v3::GLuint)::Void),
:(glVertexAttribI4i(index::GLuint, x::GLint, y::GLint, z::GLint, w::GLint)::Void),
:(glDrawRangeElementsBaseVertex(mode::GLenum, start::GLuint, END::GLuint, count::GLsizei, type_::GLenum, indices::Ptr{Void}, basevertex::GLint)::Void),
:(glVertexAttribI4uiv(index::GLuint, v::Ptr{GLuint})::Void),
:(glGetInteger64v(pname::GLenum, params::Ptr{GLint64})::Void),
:(glVertexAttribI2ui(index::GLuint, x::GLuint, y::GLuint)::Void),
:(glPrimitiveRestartIndex(index::GLuint)::Void),
:(glGetSamplerParameteriv(sampler::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttribI3uiv(index::GLuint, v::Ptr{GLuint})::Void),
:(glVertexAttribP4uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glVertexAttribI1iv(index::GLuint, v::Ptr{GLint})::Void),
:(glFramebufferTexture1D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint)::Void),
:(glUniform2uiv(location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glUniform3uiv(location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glGenFramebuffers(n::GLsizei, framebuffers::Ptr{GLuint})::Void),
:(glFramebufferTextureLayer(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint, layer::GLint)::Void),
:(glSecondaryColorP3ui(type_::GLenum, color::GLuint)::Void),
:(glClearBufferfi(buffer::GLenum, drawbuffer::GLint, depth::GLfloat, stencil::GLint)::Void),
:(glUniform4uiv(location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glGetVertexAttribIiv(index::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetTransformFeedbackVarying(program::GLuint, index::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, size::Ptr{GLsizei}, type_::Ptr{GLenum}, name::Ptr{GLchar})::Void),
:(glGetFramebufferAttachmentParameteriv(target::GLenum, attachment::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttribI1i(index::GLuint, x::GLint)::Void),
:(glVertexAttribI3ui(index::GLuint, x::GLuint, y::GLuint, z::GLuint)::Void),
:(glGetActiveUniformBlockiv(program::GLuint, uniformBlockIndex::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glBlitFramebuffer(srcX0::GLint, srcY0::GLint, srcX1::GLint, srcY1::GLint, dstX0::GLint, dstY0::GLint, dstX1::GLint, dstY1::GLint, mask::GLbitfield, filter::GLenum)::Void),
:(glBeginTransformFeedback(primitiveMode::GLenum)::Void),
:(glVertexAttribI4bv(index::GLuint, v::Ptr{GLbyte})::Void),
:(glIsSampler(sampler::GLuint)::Bool),
:(glVertexAttribI3i(index::GLuint, x::GLint, y::GLint, z::GLint)::Void),
:(glVertexAttribI4ui(index::GLuint, x::GLuint, y::GLuint, z::GLuint, w::GLuint)::Void),
:(glCheckFramebufferStatus(target::GLenum)::Cint),
:(glVertexAttribI4ubv(index::GLuint, v::Ptr{GLubyte})::Void),
:(glUniformBlockBinding(program::GLuint, uniformBlockIndex::GLuint, uniformBlockBinding::GLuint)::Void),
:(glGetSynciv(sync::GLsync, pname::GLenum, bufSize::GLsizei, length::Ptr{GLsizei}, values::Ptr{GLint})::Void),
:(glClampColor(target::GLenum, clamp::GLenum)::Void),
:(glVertexAttribP3ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glFenceSync(condition::GLenum, flags::GLbitfield)::Sync),
:(glSamplerParameterfv(sampler::GLuint, pname::GLenum, param::Ptr{GLfloat})::Void),
:(glMapBufferRange(target::GLenum, offset::GLintptr, length::GLsizeiptr, access::GLbitfield)::Ptr{Void}),
:(glTexCoordP4uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glGetActiveUniformName(program::GLuint, uniformIndex::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, uniformName::Ptr{GLchar})::Void),
:(glClearBufferiv(buffer::GLenum, drawbuffer::GLint, value::Ptr{GLint})::Void),
:(glBindVertexArray(array::GLuint)::Void),
:(glSamplerParameteriv(sampler::GLuint, pname::GLenum, param::Ptr{GLint})::Void),
:(glGetSamplerParameterfv(sampler::GLuint, pname::GLenum, params::Ptr{GLfloat})::Void),
:(glVertexAttribI3iv(index::GLuint, v::Ptr{GLint})::Void),
:(glVertexP4uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glMultiTexCoordP1uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glSamplerParameterIiv(sampler::GLuint, pname::GLenum, param::Ptr{GLint})::Void),
:(glVertexAttribI2uiv(index::GLuint, v::Ptr{GLuint})::Void),
:(glGetBooleani_v(target::GLenum, index::GLuint, data::Ptr{GLboolean})::Void),
:(glMultiTexCoordP2uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glTexCoordP1uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glSampleMaski(index::GLuint, mask::GLbitfield)::Void),
:(glFramebufferTexture2D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint)::Void),
:(glUniform1uiv(location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glVertexAttribI2i(index::GLuint, x::GLint, y::GLint)::Void),
:(glTexParameterIuiv(target::GLenum, pname::GLenum, params::Ptr{GLuint})::Void),
:(glVertexAttribP3uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glIsSync(sync::GLsync)::Bool),
:(glGetTexParameterIiv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glUniform3ui(location::GLint, v0::GLuint, v1::GLuint, v2::GLuint)::Void),
:(glDeleteFramebuffers(n::GLsizei, framebuffers::Ptr{GLuint})::Void),
:(glGetTexParameterIuiv(target::GLenum, pname::GLenum, params::Ptr{GLuint})::Void),
:(glFramebufferTexture(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint)::Void),
:(glTexImage3DMultisample(target::GLenum, samples::GLsizei, internalformat::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glTexCoordP4ui(type_::GLenum, coords::GLuint)::Void),
:(glCopyBufferSubData(readTarget::GLenum, writeTarget::GLenum, readOffset::GLintptr, writeOffset::GLintptr, size::GLsizeiptr)::Void),
:(glSamplerParameterf(sampler::GLuint, pname::GLenum, param::GLfloat)::Void),
:(glEnablei(target::GLenum, index::GLuint)::Void),
:(glTexBuffer(target::GLenum, internalformat::GLenum, buffer::GLuint)::Void),
:(glTexCoordP3uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glMultiTexCoordP3ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glClearBufferfv(buffer::GLenum, drawbuffer::GLint, value::Ptr{GLfloat})::Void),
:(glGetRenderbufferParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glDisablei(target::GLenum, index::GLuint)::Void),
:(glVertexAttribI4sv(index::GLuint, v::Ptr{GLshort})::Void),
:(glColorP3ui(type_::GLenum, color::GLuint)::Void),
:(glVertexP2ui(type_::GLenum, value::GLuint)::Void),
:(glDrawElementsInstanced(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, instancecount::GLsizei)::Void),
:(glGetQueryObjecti64v(id::GLuint, pname::GLenum, params::Ptr{GLint64})::Void),
:(glGetMultisamplefv(pname::GLenum, index::GLuint, val::Ptr{GLfloat})::Void),
:(glDeleteVertexArrays(n::GLsizei, arrays::Ptr{GLuint})::Void),
:(glIsRenderbuffer(renderbuffer::GLuint)::Bool),
:(glClearBufferuiv(buffer::GLenum, drawbuffer::GLint, value::Ptr{GLuint})::Void),
:(glRenderbufferStorage(target::GLenum, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glGetInteger64i_v(target::GLenum, index::GLuint, data::Ptr{GLint64})::Void),
:(glVertexAttribI1ui(index::GLuint, x::GLuint)::Void),
:(glGetFragDataIndex(program::GLuint, name::Ptr{GLchar})::Cint),
:(glVertexP2uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glGetUniformIndices(program::GLuint, uniformCount::GLsizei, uniformNames::Ptr{Uint8}, uniformIndices::Ptr{GLuint})::Void),
:(glGetFragDataLocation(program::GLuint, name::Ptr{GLchar})::Cint),
:(glMultiTexCoordP2ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glGetUniformuiv(program::GLuint, location::GLint, params::Ptr{GLuint})::Void),
:(glVertexAttribI4iv(index::GLuint, v::Ptr{GLint})::Void),
:(glColorP4ui(type_::GLenum, color::GLuint)::Void),
:(glBindBufferRange(target::GLenum, index::GLuint, buffer::GLuint, offset::GLintptr, size::GLsizeiptr)::Void),
:(glDeleteSamplers(count::GLsizei, samplers::Ptr{GLuint})::Void),
:(glGetBufferParameteri64v(target::GLenum, pname::GLenum, params::Ptr{GLint64})::Void),
:(glBindSampler(unit::GLuint, sampler::GLuint)::Void),
:(glColorP4uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glVertexAttribIPointer(index::GLuint, size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void),
:(glTexCoordP1ui(type_::GLenum, coords::GLuint)::Void),
:(glBindRenderbuffer(target::GLenum, renderbuffer::GLuint)::Void),
:(glColorP3uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glMultiTexCoordP4uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glGetSamplerParameterIuiv(sampler::GLuint, pname::GLenum, params::Ptr{GLuint})::Void),
:(glMultiTexCoordP3uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glVertexP3uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glVertexP4ui(type_::GLenum, value::GLuint)::Void),
:(glIsFramebuffer(framebuffer::GLuint)::Bool),
:(glVertexAttribP1uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glTexImage2DMultisample(target::GLenum, samples::GLsizei, internalformat::GLint, width::GLsizei, height::GLsizei, fixedsamplelocations::GLboolean)::Void)]
