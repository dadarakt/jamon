#Types, functions and constants, needed on top of the common ones
#types
const GL_ARB_TYPES = [
]
#constants
const GL_ARB_CONSTANTS = [
:(const GL_CLAMP_READ_COLOR_ARB                                         = 0x891C),
:(const GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB                      = 0x8810),
:(const GL_ACTIVE_VERTEX_UNITS_ARB                                      = 0x86A5),
:(const GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB                             = 0x880D),
:(const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER                           = 0x8CDC),
:(const GL_MODELVIEW2_ARB                                               = 0x8722),
:(const GL_IMAGE_CUBE_MAP_ARRAY                                         = 0x9054),
:(const GL_COMPRESSED_RG11_EAC                                          = 0x9272),
:(const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED                             = 0x8E23),
:(const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS                           = 0x8E83),
:(const GL_FRAMEBUFFER_UNSUPPORTED                                      = 0x8CDD),
:(const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS                          = 0x92D1),
:(const GL_IMAGE_CLASS_4_X_8                                            = 0x82BF),
:(const GL_PROGRAM_BINDING_ARB                                          = 0x8677),
:(const GL_UNSIGNED_INT_ATOMIC_COUNTER                                  = 0x92DB),
:(const GL_COMPRESSED_ALPHA_ARB                                         = 0x84E9),
:(const GL_ELEMENT_ARRAY_BARRIER_BIT                                    = 0x00000002),
:(const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB                              = 0x889E),
:(const GL_PIXEL_BUFFER_BARRIER_BIT                                     = 0x00000080),
:(const GL_READ_FRAMEBUFFER_BINDING                                     = 0x8CAA),
:(const GL_CLAMP_FRAGMENT_COLOR_ARB                                     = 0x891B),
:(const GL_COLOR_TABLE_WIDTH                                            = 0x80D9),
:(const GL_TEXTURE5_ARB                                                 = 0x84C5),
:(const GL_TEXTURE9_ARB                                                 = 0x84C9),
:(const GL_MAX_COMPUTE_WORK_GROUP_SIZE                                  = 0x91BF),
:(const GL_MINMAX_FORMAT                                                = 0x802F),
:(const GL_INT_IMAGE_2D_RECT                                            = 0x905A),
:(const GL_MODELVIEW19_ARB                                              = 0x8733),
:(const GL_LAYER_PROVOKING_VERTEX                                       = 0x825E),
:(const GL_FRACTIONAL_EVEN                                              = 0x8E7C),
:(const GL_MATRIX_STRIDE                                                = 0x92FF),
:(const GL_TEXTURE_COMPRESSION_HINT_ARB                                 = 0x84EF),
:(const GL_FLOAT_MAT2_ARB                                               = 0x8B5A),
:(const GL_MATRIX_INDEX_ARRAY_ARB                                       = 0x8844),
:(const GL_MAX_FRAMEBUFFER_WIDTH                                        = 0x9315),
:(const GL_PROXY_TEXTURE_2D_MULTISAMPLE                                 = 0x9101),
:(const GL_COLOR_TABLE_INTENSITY_SIZE                                   = 0x80DF),
:(const GL_TEXTURE26_ARB                                                = 0x84DA),
:(const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB                              = 0x8518),
:(const GL_POST_COLOR_MATRIX_ALPHA_BIAS                                 = 0x80BB),
:(const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB                           = 0x8B4C),
:(const GL_MEDIUM_INT                                                   = 0x8DF4),
:(const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME                           = 0x8CD1),
:(const GL_CONVOLUTION_BORDER_COLOR                                     = 0x8154),
:(const GL_SHADER_COMPILER                                              = 0x8DFA),
:(const GL_DRAW_BUFFER11_ARB                                            = 0x8830),
:(const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB                              = 0x851A),
:(const GL_MAP_UNSYNCHRONIZED_BIT                                       = 0x0020),
:(const GL_MAX_UNIFORM_LOCATIONS                                        = 0x826E),
:(const GL_COMPRESSED_RGB8_ETC2                                         = 0x9274),
:(const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB                             = 0x8248),
:(const GL_R32F                                                         = 0x822E),
:(const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB                           = 0x8DA7),
:(const GL_TEXTURE_FETCH_BARRIER_BIT                                    = 0x00000008),
:(const GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB                      = 0x880F),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER          = 0x92CB),
:(const GL_UNSIGNED_INT_IMAGE_CUBE                                      = 0x9066),
:(const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS                        = 0x8E86),
:(const GL_SYNC_FLUSH_COMMANDS_BIT                                      = 0x00000001),
:(const GL_MODELVIEW4_ARB                                               = 0x8724),
:(const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS                                = 0x8A42),
:(const GL_SAMPLE_BUFFERS_ARB                                           = 0x80A8),
:(const GL_OPERAND2_RGB_ARB                                             = 0x8592),
:(const GL_COLOR_TABLE_BIAS                                             = 0x80D7),
:(const GL_TEXTURE_DEPTH_SIZE_ARB                                       = 0x884A),
:(const GL_INTERNALFORMAT_BLUE_SIZE                                     = 0x8273),
:(const GL_INDEX_ARRAY_BUFFER_BINDING_ARB                               = 0x8899),
:(const GL_DEPTH_COMPONENTS                                             = 0x8284),
:(const GL_MAX_GEOMETRY_SHADER_INVOCATIONS                              = 0x8E5A),
:(const GL_REFERENCED_BY_TESS_CONTROL_SHADER                            = 0x9307),
:(const GL_HIGH_FLOAT                                                   = 0x8DF2),
:(const GL_CLAMP_VERTEX_COLOR_ARB                                       = 0x891A),
:(const GL_FUNC_REVERSE_SUBTRACT                                        = 0x800B),
:(const GL_ACTIVE_SUBROUTINE_MAX_LENGTH                                 = 0x8E48),
:(const GL_COMMAND_BARRIER_BIT                                          = 0x00000040),
:(const GL_RG32F                                                        = 0x8230),
:(const GL_COPY_WRITE_BUFFER_BINDING                                    = 0x8F37),
:(const GL_RGB10_A2UI                                                   = 0x906F),
:(const GL_IMAGE_2D_MULTISAMPLE_ARRAY                                   = 0x9056),
:(const GL_HISTOGRAM_ALPHA_SIZE                                         = 0x802B),
:(const GL_DRAW_BUFFER4_ARB                                             = 0x8829),
:(const GL_DRAW_BUFFER14_ARB                                            = 0x8833),
:(const GL_VERTEX_SUBROUTINE                                            = 0x92E8),
:(const GL_STENCIL_INDEX16                                              = 0x8D49),
:(const GL_STATIC_DRAW_ARB                                              = 0x88E4),
:(const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS                 = 0x92C5),
:(const GL_IMAGE_PIXEL_FORMAT                                           = 0x82A9),
:(const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS                           = 0x90D7),
:(const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE                            = 0x8216),
:(const GL_RGBA32F_ARB                                                  = 0x8814),
:(const GL_MODELVIEW5_ARB                                               = 0x8725),
:(const GL_DYNAMIC_READ_ARB                                             = 0x88E9),
:(const GL_GET_TEXTURE_IMAGE_TYPE                                       = 0x8292),
:(const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE                               = 0x92D8),
:(const GL_CLAMP_TO_BORDER_ARB                                          = 0x812D),
:(const GL_RGB32F_ARB                                                   = 0x8815),
:(const GL_PROGRAM_STRING_ARB                                           = 0x8628),
:(const GL_SRGB_DECODE_ARB                                              = 0x8299),
:(const GL_TRANSFORM_FEEDBACK                                           = 0x8E22),
:(const GL_DEPTH_CLAMP                                                  = 0x864F),
:(const GL_MATRIX4_ARB                                                  = 0x88C4),
:(const GL_TEXTURE_1D_ARRAY                                             = 0x8C18),
:(const GL_TEXTURE_GATHER                                               = 0x82A2),
:(const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS                      = 0x8266),
:(const GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB                     = 0x88B3),
:(const GL_MODELVIEW22_ARB                                              = 0x8736),
:(const GL_DEPTH_TEXTURE_MODE_ARB                                       = 0x884B),
:(const GL_ARRAY_BUFFER_ARB                                             = 0x8892),
:(const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB                                 = 0x8242),
:(const GL_R32I                                                         = 0x8235),
:(const GL_SAMPLE_COVERAGE_INVERT_ARB                                   = 0x80AB),
:(const GL_MAX_NUM_ACTIVE_VARIABLES                                     = 0x92F7),
:(const GL_DRAW_BUFFER12_ARB                                            = 0x8831),
:(const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE                           = 0x8D56),
:(const GL_MAX_GEOMETRY_ATOMIC_COUNTERS                                 = 0x92D5),
:(const GL_MATRIX15_ARB                                                 = 0x88CF),
:(const GL_SHADER_STORAGE_BUFFER_START                                  = 0x90D4),
:(const GL_TESS_CONTROL_SHADER_BIT                                      = 0x00000008),
:(const GL_MODELVIEW14_ARB                                              = 0x872E),
:(const GL_VIEW_CLASS_BPTC_UNORM                                        = 0x82D2),
:(const GL_SEPARABLE_2D                                                 = 0x8012),
:(const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS                          = 0x90C9),
:(const GL_READ_FRAMEBUFFER                                             = 0x8CA8),
:(const GL_PROXY_TEXTURE_RECTANGLE_ARB                                  = 0x84F7),
:(const GL_OBJECT_TYPE                                                  = 0x9112),
:(const GL_TEXTURE12_ARB                                                = 0x84CC),
:(const GL_MAX_DEPTH                                                    = 0x8280),
:(const GL_MAX_COMPUTE_UNIFORM_BLOCKS                                   = 0x91BB),
:(const GL_MAX_COMPUTE_ATOMIC_COUNTERS                                  = 0x8265),
:(const GL_COLOR_ATTACHMENT12                                           = 0x8CEC),
:(const GL_GEOMETRY_SHADER_INVOCATIONS                                  = 0x887F),
:(const GL_DOT3_RGBA_ARB                                                = 0x86AF),
:(const GL_STENCIL_INDEX8                                               = 0x8D48),
:(const GL_HISTOGRAM_BLUE_SIZE                                          = 0x802A),
:(const GL_CURRENT_PALETTE_MATRIX_ARB                                   = 0x8843),
:(const GL_AUTO_GENERATE_MIPMAP                                         = 0x8295),
:(const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS                           = 0x90DC),
:(const GL_POST_CONVOLUTION_BLUE_BIAS                                   = 0x8022),
:(const GL_TEXTURE_BLUE_TYPE_ARB                                        = 0x8C12),
:(const GL_INT_2_10_10_10_REV                                           = 0x8D9F),
:(const GL_DEBUG_SEVERITY_MEDIUM_ARB                                    = 0x9147),
:(const GL_DEPTH_ATTACHMENT                                             = 0x8D00),
:(const GL_PROGRAM_TEX_INDIRECTIONS_ARB                                 = 0x8807),
:(const GL_COMPRESSED_RGBA8_ETC2_EAC                                    = 0x9278),
:(const GL_IMAGE_CLASS_11_11_10                                         = 0x82C2),
:(const GL_CURRENT_MATRIX_STACK_DEPTH_ARB                               = 0x8640),
:(const GL_TEXTURE1_ARB                                                 = 0x84C1),
:(const GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB                              = 0x88B6),
:(const GL_MATRIX22_ARB                                                 = 0x88D6),
:(const GL_LOCATION_INDEX                                               = 0x930F),
:(const GL_COLOR_TABLE_SCALE                                            = 0x80D6),
:(const GL_DRAW_BUFFER10_ARB                                            = 0x882F),
:(const GL_UNSIGNED_NORMALIZED                                          = 0x8C17),
:(const GL_VIEW_CLASS_16_BITS                                           = 0x82CA),
:(const GL_SYNC_FENCE                                                   = 0x9116),
:(const GL_TEXTURE_ALPHA_TYPE_ARB                                       = 0x8C13),
:(const GL_ONE_MINUS_SRC1_ALPHA                                         = 0x88FB),
:(const GL_MANUAL_GENERATE_MIPMAP                                       = 0x8294),
:(const GL_NAMED_STRING_TYPE_ARB                                        = 0x8DEA),
:(const GL_VERTEX_SUBROUTINE_UNIFORM                                    = 0x92EE),
:(const GL_COMPUTE_TEXTURE                                              = 0x82A0),
:(const GL_ARRAY_SIZE                                                   = 0x92FB),
:(const GL_POINT_DISTANCE_ATTENUATION_ARB                               = 0x8129),
:(const GL_POINT_SIZE_MAX_ARB                                           = 0x8127),
:(const GL_GUILTY_CONTEXT_RESET_ARB                                     = 0x8253),
:(const GL_HISTOGRAM                                                    = 0x8024),
:(const GL_RENDERBUFFER_SAMPLES                                         = 0x8CAB),
:(const GL_TEXTURE_VIEW                                                 = 0x82B5),
:(const GL_VIEW_CLASS_RGTC1_RED                                         = 0x82D0),
:(const GL_COMPRESSED_R11_EAC                                           = 0x9270),
:(const GL_INTERNALFORMAT_RED_TYPE                                      = 0x8278),
:(const GL_MAX_VIEWPORTS                                                = 0x825B),
:(const GL_DEBUG_SOURCE_OTHER_ARB                                       = 0x824B),
:(const GL_IMAGE_CUBE                                                   = 0x9050),
:(const GL_RENDERBUFFER_WIDTH                                           = 0x8D42),
:(const GL_PROGRAM_LENGTH_ARB                                           = 0x8627),
:(const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST                          = 0x82AC),
:(const GL_BUFFER_USAGE_ARB                                             = 0x8765),
:(const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE                            = 0x906B),
:(const GL_TEXTURE_SWIZZLE_G                                            = 0x8E43),
:(const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB                               = 0x900E),
:(const GL_PROXY_HISTOGRAM                                              = 0x8025),
:(const GL_TEXTURE_IMMUTABLE_FORMAT                                     = 0x912F),
:(const GL_TEXTURE_BUFFER_FORMAT_ARB                                    = 0x8C2E),
:(const GL_MAX_SUBROUTINES                                              = 0x8DE7),
:(const GL_ONE_MINUS_CONSTANT_ALPHA                                     = 0x8004),
:(const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS                            = 0x92CC),
:(const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB                          = 0x8DDF),
:(const GL_RGB_SCALE_ARB                                                = 0x8573),
:(const GL_HISTOGRAM_LUMINANCE_SIZE                                     = 0x802C),
:(const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB                       = 0x8DA9),
:(const GL_POST_COLOR_MATRIX_RED_BIAS                                   = 0x80B8),
:(const GL_FULL_SUPPORT                                                 = 0x82B7),
:(const GL_TEXTURE27_ARB                                                = 0x84DB),
:(const GL_PREVIOUS_ARB                                                 = 0x8578),
:(const GL_MODELVIEW24_ARB                                              = 0x8738),
:(const GL_VIEW_CLASS_64_BITS                                           = 0x82C6),
:(const GL_MAX_VERTEX_ATTRIBS_ARB                                       = 0x8869),
:(const GL_TEXTURE_SWIZZLE_RGBA                                         = 0x8E46),
:(const GL_MAX_DRAW_BUFFERS_ARB                                         = 0x8824),
:(const GL_UNIFORM_BLOCK_INDEX                                          = 0x8A3A),
:(const GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB                       = 0x8B8A),
:(const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS                                 = 0x88FC),
:(const GL_SAMPLER_3D_ARB                                               = 0x8B5F),
:(const GL_MAX_COMBINED_IMAGE_UNIFORMS                                  = 0x90CF),
:(const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS                    = 0x90D9),
:(const GL_TEXTURE23_ARB                                                = 0x84D7),
:(const GL_UNKNOWN_CONTEXT_RESET_ARB                                    = 0x8255),
:(const GL_MAX_COMBINED_UNIFORM_BLOCKS                                  = 0x8A2E),
:(const GL_TESS_GEN_POINT_MODE                                          = 0x8E79),
:(const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY                               = 0x9061),
:(const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB                           = 0x824D),
:(const GL_FRAMEBUFFER_BARRIER_BIT                                      = 0x00000400),
:(const GL_MAX_TEXTURE_IMAGE_UNITS_ARB                                  = 0x8872),
:(const GL_MAX_UNIFORM_BLOCK_SIZE                                       = 0x8A30),
:(const GL_INTERNALFORMAT_GREEN_SIZE                                    = 0x8272),
:(const GL_INT_IMAGE_2D                                                 = 0x9058),
:(const GL_MODELVIEW8_ARB                                               = 0x8728),
:(const GL_MATRIX1_ARB                                                  = 0x88C1),
:(const GL_COMPRESSED_SIGNED_RG11_EAC                                   = 0x9273),
:(const GL_POST_COLOR_MATRIX_ALPHA_SCALE                                = 0x80B7),
:(const GL_PROGRAM_FORMAT_ASCII_ARB                                     = 0x8875),
:(const GL_RENDERBUFFER_ALPHA_SIZE                                      = 0x8D53),
:(const GL_MINMAX                                                       = 0x802E),
:(const GL_SAMPLER_2D_RECT_ARB                                          = 0x8B63),
:(const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB                           = 0x900A),
:(const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB                       = 0x8E8F),
:(const GL_INTENSITY16F_ARB                                             = 0x881D),
:(const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH                               = 0x82B1),
:(const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB                              = 0x8519),
:(const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS                      = 0x8E82),
:(const GL_MAX_VERTEX_UNITS_ARB                                         = 0x86A4),
:(const GL_IMAGE_BUFFER                                                 = 0x9051),
:(const GL_RG32I                                                        = 0x823B),
:(const GL_ATOMIC_COUNTER_BARRIER_BIT                                   = 0x00001000),
:(const GL_MODELVIEW15_ARB                                              = 0x872F),
:(const GL_INTERNALFORMAT_PREFERRED                                     = 0x8270),
:(const GL_COLOR_ATTACHMENT8                                            = 0x8CE8),
:(const GL_VIEW_CLASS_24_BITS                                           = 0x82C9),
:(const GL_RGB565                                                       = 0x8D62),
:(const GL_MULTISAMPLE_ARB                                              = 0x809D),
:(const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS                              = 0x90CB),
:(const GL_COMPRESSED_SIGNED_RED_RGTC1                                  = 0x8DBC),
:(const GL_MATRIX2_ARB                                                  = 0x88C2),
:(const GL_MAX_PROGRAM_MATRICES_ARB                                     = 0x862F),
:(const GL_INT_IMAGE_3D                                                 = 0x9059),
:(const GL_MAX_COMBINED_DIMENSIONS                                      = 0x8282),
:(const GL_POST_CONVOLUTION_RED_SCALE                                   = 0x801C),
:(const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB                                 = 0x809E),
:(const GL_MAX_PATCH_VERTICES                                           = 0x8E7D),
:(const GL_MAX_PROGRAM_TEMPORARIES_ARB                                  = 0x88A5),
:(const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT                            = 0x8CD6),
:(const GL_LUMINANCE_ALPHA16F_ARB                                       = 0x881F),
:(const GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB                         = 0x8B87),
:(const GL_FRAGMENT_SHADER_BIT                                          = 0x00000002),
:(const GL_SIGNALED                                                     = 0x9119),
:(const GL_INT_IMAGE_2D_ARRAY                                           = 0x905E),
:(const GL_ACTIVE_RESOURCES                                             = 0x92F5),
:(const GL_VERTEX_BINDING_DIVISOR                                       = 0x82D6),
:(const GL_PROGRAM_TEMPORARIES_ARB                                      = 0x88A4),
:(const GL_UNPACK_COMPRESSED_BLOCK_WIDTH                                = 0x9127),
:(const GL_LUMINANCE32F_ARB                                             = 0x8818),
:(const GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE                          = 0x80D5),
:(const GL_COLOR_TABLE_GREEN_SIZE                                       = 0x80DB),
:(const GL_TIMEOUT_IGNORED                                              = 0xFFFFFFFFFFFFFFFF),
:(const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS                               = 0x9107),
:(const GL_TEXTURE_VIEW_NUM_LAYERS                                      = 0x82DE),
:(const GL_RG8                                                          = 0x822B),
:(const GL_MATRIX23_ARB                                                 = 0x88D7),
:(const GL_CONSTANT_BORDER                                              = 0x8151),
:(const GL_COMPRESSED_LUMINANCE_ARB                                     = 0x84EA),
:(const GL_FRAGMENT_PROGRAM_ARB                                         = 0x8804),
:(const GL_R16UI                                                        = 0x8234),
:(const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS                 = 0x8E1E),
:(const GL_SYNC_CONDITION                                               = 0x9113),
:(const GL_SUBTRACT_ARB                                                 = 0x84E7),
:(const GL_WEIGHT_ARRAY_ARB                                             = 0x86AD),
:(const GL_COLOR_ATTACHMENT11                                           = 0x8CEB),
:(const GL_VIEW_CLASS_BPTC_FLOAT                                        = 0x82D3),
:(const GL_COMPUTE_SHADER                                               = 0x91B9),
:(const GL_PROGRAM_BINARY_RETRIEVABLE_HINT                              = 0x8257),
:(const GL_SAMPLES_PASSED_ARB                                           = 0x8914),
:(const GL_MULTISAMPLE_BIT_ARB                                          = 0x20000000),
:(const GL_R16F                                                         = 0x822D),
:(const GL_PROGRAM_ADDRESS_REGISTERS_ARB                                = 0x88B0),
:(const GL_STATIC_COPY_ARB                                              = 0x88E6),
:(const GL_VIEWPORT_SUBPIXEL_BITS                                       = 0x825C),
:(const GL_INTERPOLATE_ARB                                              = 0x8575),
:(const GL_WEIGHT_ARRAY_SIZE_ARB                                        = 0x86AB),
:(const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT                              = 0x82B2),
:(const GL_MIRRORED_REPEAT_ARB                                          = 0x8370),
:(const GL_VIEW_CLASS_96_BITS                                           = 0x82C5),
:(const GL_PIXEL_PACK_BUFFER_ARB                                        = 0x88EB),
:(const GL_FRACTIONAL_ODD                                               = 0x8E7B),
:(const GL_TEXTURE_SWIZZLE_A                                            = 0x8E45),
:(const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS                       = 0x90D8),
:(const GL_COMPRESSED_TEXTURE_FORMATS_ARB                               = 0x86A3),
:(const GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB                           = 0x8841),
:(const GL_IMPLEMENTATION_COLOR_READ_TYPE                               = 0x8B9A),
:(const GL_SHADER_BINARY_FORMATS                                        = 0x8DF8),
:(const GL_GEOMETRY_SUBROUTINE_UNIFORM                                  = 0x92F1),
:(const GL_POST_CONVOLUTION_GREEN_SCALE                                 = 0x801D),
:(const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB                      = 0x889D),
:(const GL_MAX_TEXTURE_BUFFER_SIZE_ARB                                  = 0x8C2B),
:(const GL_MODELVIEW6_ARB                                               = 0x8726),
:(const GL_MODELVIEW28_ARB                                              = 0x873C),
:(const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST                        = 0x82AD),
:(const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB                               = 0x8624),
:(const GL_PROGRAM_TEX_INSTRUCTIONS_ARB                                 = 0x8806),
:(const GL_MAX                                                          = 0x8008),
:(const GL_UNSIGNED_INT_IMAGE_2D_RECT                                   = 0x9065),
:(const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS                     = 0x8A33),
:(const GL_RGB32F                                                       = 0x8815),
:(const GL_ACTIVE_TEXTURE_ARB                                           = 0x84E0),
:(const GL_REFLECTION_MAP_ARB                                           = 0x8512),
:(const GL_MODELVIEW0_ARB                                               = 0x1700),
:(const GL_MODELVIEW11_ARB                                              = 0x872B),
:(const GL_MATRIX18_ARB                                                 = 0x88D2),
:(const GL_SHADING_LANGUAGE_VERSION_ARB                                 = 0x8B8C),
:(const GL_DRAW_BUFFER8_ARB                                             = 0x882D),
:(const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS                       = 0x8A31),
:(const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS                   = 0x9314),
:(const GL_TEXTURE_DEPTH_TYPE                                           = 0x8C16),
:(const GL_COLOR_TABLE_RED_SIZE                                         = 0x80DA),
:(const GL_MAX_TESS_PATCH_COMPONENTS                                    = 0x8E84),
:(const GL_NORMAL_MAP_ARB                                               = 0x8511),
:(const GL_TEXTURE16_ARB                                                = 0x84D0),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER          = 0x92CA),
:(const GL_TEXTURE_LUMINANCE_TYPE                                       = 0x8C14),
:(const GL_IMAGE_CLASS_1_X_8                                            = 0x82C1),
:(const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES          = 0x92C6),
:(const GL_MODELVIEW23_ARB                                              = 0x8737),
:(const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS                           = 0x8E5D),
:(const GL_TEXTURE_BINDING_CUBE_MAP_ARB                                 = 0x8514),
:(const GL_MODELVIEW29_ARB                                              = 0x873D),
:(const GL_LUMINANCE_ALPHA32F_ARB                                       = 0x8819),
:(const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB                              = 0x8897),
:(const GL_MAX_COMBINED_ATOMIC_COUNTERS                                 = 0x92D7),
:(const GL_ACTIVE_PROGRAM                                               = 0x8259),
:(const GL_MATRIX14_ARB                                                 = 0x88CE),
:(const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS                               = 0x8E70),
:(const GL_MAP_INVALIDATE_BUFFER_BIT                                    = 0x0008),
:(const GL_POST_COLOR_MATRIX_RED_SCALE                                  = 0x80B4),
:(const GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB                           = 0x88A7),
:(const GL_LOSE_CONTEXT_ON_RESET_ARB                                    = 0x8252),
:(const GL_LUMINANCE16F_ARB                                             = 0x881E),
:(const GL_OPERAND1_ALPHA_ARB                                           = 0x8599),
:(const GL_TIMESTAMP                                                    = 0x8E28),
:(const GL_TESS_EVALUATION_SHADER_BIT                                   = 0x00000010),
:(const GL_IMAGE_BINDING_LAYER                                          = 0x8F3D),
:(const GL_TEXTURE19_ARB                                                = 0x84D3),
:(const GL_TEXTURE_CUBE_MAP_ARB                                         = 0x8513),
:(const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET                            = 0x8E5C),
:(const GL_SAMPLE_COVERAGE_ARB                                          = 0x80A0),
:(const GL_DEBUG_SOURCE_THIRD_PARTY_ARB                                 = 0x8249),
:(const GL_SAMPLE_MASK                                                  = 0x8E51),
:(const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB                         = 0x8E8E),
:(const GL_INTERNALFORMAT_GREEN_TYPE                                    = 0x8279),
:(const GL_ALPHA32F_ARB                                                 = 0x8816),
:(const GL_MODELVIEW18_ARB                                              = 0x8732),
:(const GL_DEBUG_LOGGED_MESSAGES_ARB                                    = 0x9145),
:(const GL_TESS_GEN_VERTEX_ORDER                                        = 0x8E78),
:(const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB                              = 0x8622),
:(const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES                         = 0x8F39),
:(const GL_PROGRAM_OUTPUT                                               = 0x92E4),
:(const GL_INVALID_INDEX                                                = 0xFFFFFFFF),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER              = 0x84F0),
:(const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB                             = 0x8DE0),
:(const GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB                            = 0x88B1),
:(const GL_VERTEX_ARRAY_BINDING                                         = 0x85B5),
:(const GL_SHADER_STORAGE_BUFFER_SIZE                                   = 0x90D5),
:(const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB                           = 0x86A2),
:(const GL_COMPUTE_LOCAL_WORK_SIZE                                      = 0x8267),
:(const GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB                               = 0x88AF),
:(const GL_TEXTURE_BUFFER                                               = 0x8C2A),
:(const GL_PROGRAM_PARAMETERS_ARB                                       = 0x88A8),
:(const GL_COPY_READ_BUFFER_BINDING                                     = 0x8F36),
:(const GL_MATRIX13_ARB                                                 = 0x88CD),
:(const GL_TEXTURE_LUMINANCE_TYPE_ARB                                   = 0x8C14),
:(const GL_MAX_VARYING_VECTORS                                          = 0x8DFC),
:(const GL_IMAGE_CLASS_4_X_32                                           = 0x82B9),
:(const GL_MODELVIEW9_ARB                                               = 0x8729),
:(const GL_MIN_MAP_BUFFER_ALIGNMENT                                     = 0x90BC),
:(const GL_CURRENT_QUERY_ARB                                            = 0x8865),
:(const GL_TESS_EVALUATION_SUBROUTINE                                   = 0x92EA),
:(const GL_GEOMETRY_SHADER_BIT                                          = 0x00000004),
:(const GL_VERTEX_TEXTURE                                               = 0x829B),
:(const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS                           = 0x90CC),
:(const GL_QUERY_RESULT_AVAILABLE_ARB                                   = 0x8867),
:(const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB                                 = 0x8623),
:(const GL_ACTIVE_UNIFORM_BLOCKS                                        = 0x8A36),
:(const GL_COLOR_ATTACHMENT10                                           = 0x8CEA),
:(const GL_IMAGE_BINDING_LEVEL                                          = 0x8F3B),
:(const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE                 = 0x8CD3),
:(const GL_PROGRAM_POINT_SIZE_ARB                                       = 0x8642),
:(const GL_TOP_LEVEL_ARRAY_SIZE                                         = 0x930C),
:(const GL_BUFFER_MAP_POINTER_ARB                                       = 0x88BD),
:(const GL_REFERENCED_BY_TESS_EVALUATION_SHADER                         = 0x9308),
:(const GL_SHADER_IMAGE_LOAD                                            = 0x82A4),
:(const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS                              = 0x91BC),
:(const GL_PIXEL_UNPACK_BUFFER_ARB                                      = 0x88EC),
:(const GL_IMAGE_2D_ARRAY                                               = 0x9053),
:(const GL_STENCIL_INDEX1                                               = 0x8D46),
:(const GL_DRAW_INDIRECT_BUFFER                                         = 0x8F3F),
:(const GL_COLOR_ATTACHMENT3                                            = 0x8CE3),
:(const GL_INT_IMAGE_CUBE_MAP_ARRAY                                     = 0x905F),
:(const GL_ELEMENT_ARRAY_BUFFER_ARB                                     = 0x8893),
:(const GL_DRAW_BUFFER7_ARB                                             = 0x882C),
:(const GL_POST_CONVOLUTION_GREEN_BIAS                                  = 0x8021),
:(const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE                              = 0x8212),
:(const GL_OBJECT_SUBTYPE_ARB                                           = 0x8B4F),
:(const GL_READ_WRITE_ARB                                               = 0x88BA),
:(const GL_POINT_SPRITE_ARB                                             = 0x8861),
:(const GL_TESS_CONTROL_SUBROUTINE                                      = 0x92E9),
:(const GL_PROGRAM_INPUT                                                = 0x92E3),
:(const GL_TIMEOUT_EXPIRED                                              = 0x911B),
:(const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE                           = 0x90C8),
:(const GL_COLOR_MATRIX_STACK_DEPTH                                     = 0x80B2),
:(const GL_OBJECT_SHADER_SOURCE_LENGTH_ARB                              = 0x8B88),
:(const GL_IMAGE_CLASS_2_X_16                                           = 0x82BD),
:(const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB                            = 0x8DDE),
:(const GL_FRAMEBUFFER_COMPLETE                                         = 0x8CD5),
:(const GL_UNIFORM_BUFFER                                               = 0x8A11),
:(const GL_COMBINE_ALPHA_ARB                                            = 0x8572),
:(const GL_OPERAND0_ALPHA_ARB                                           = 0x8598),
:(const GL_SOURCE0_RGB_ARB                                              = 0x8580),
:(const GL_OPERAND2_ALPHA_ARB                                           = 0x859A),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER                    = 0x8A44),
:(const GL_SHADER_STORAGE_BLOCK                                         = 0x92E6),
:(const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB                              = 0x8515),
:(const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB                    = 0x8F9F),
:(const GL_DEBUG_SEVERITY_LOW_ARB                                       = 0x9148),
:(const GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB                            = 0x8B4A),
:(const GL_MAX_COLOR_ATTACHMENTS                                        = 0x8CDF),
:(const GL_MATRIX_PALETTE_ARB                                           = 0x8840),
:(const GL_DYNAMIC_DRAW_ARB                                             = 0x88E8),
:(const GL_OFFSET                                                       = 0x92FC),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER                   = 0x90EC),
:(const GL_R16I                                                         = 0x8233),
:(const GL_SHADER_INCLUDE_ARB                                           = 0x8DAE),
:(const GL_DEBUG_TYPE_PERFORMANCE_ARB                                   = 0x8250),
:(const GL_TEXTURE0_ARB                                                 = 0x84C0),
:(const GL_PACK_COMPRESSED_BLOCK_HEIGHT                                 = 0x912C),
:(const GL_COLOR_TABLE_ALPHA_SIZE                                       = 0x80DD),
:(const GL_TEXTURE6_ARB                                                 = 0x84C6),
:(const GL_MATRIX12_ARB                                                 = 0x88CC),
:(const GL_MAX_GEOMETRY_IMAGE_UNIFORMS                                  = 0x90CD),
:(const GL_OBJECT_LINK_STATUS_ARB                                       = 0x8B82),
:(const GL_MAP_READ_BIT                                                 = 0x0001),
:(const GL_MAX_VERTEX_UNIFORM_BLOCKS                                    = 0x8A2B),
:(const GL_IMAGE_PIXEL_TYPE                                             = 0x82AA),
:(const GL_GEOMETRY_SUBROUTINE                                          = 0x92EB),
:(const GL_TRIANGLE_STRIP_ADJACENCY_ARB                                 = 0x000D),
:(const GL_BUFFER_ACCESS_ARB                                            = 0x88BB),
:(const GL_MAX_PROGRAM_ATTRIBS_ARB                                      = 0x88AD),
:(const GL_INVALID_FRAMEBUFFER_OPERATION                                = 0x0506),
:(const GL_BUFFER_VARIABLE                                              = 0x92E5),
:(const GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB                              = 0x88A2),
:(const GL_MODELVIEW17_ARB                                              = 0x8731),
:(const GL_FRAGMENT_SUBROUTINE                                          = 0x92EC),
:(const GL_MAX_SAMPLES                                                  = 0x8D57),
:(const GL_PRIMITIVE_RESTART_FIXED_INDEX                                = 0x8D69),
:(const GL_MAX_HEIGHT                                                   = 0x827F),
:(const GL_DEBUG_CALLBACK_USER_PARAM_ARB                                = 0x8245),
:(const GL_COLOR_ATTACHMENT4                                            = 0x8CE4),
:(const GL_COLOR_ATTACHMENT9                                            = 0x8CE9),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER           = 0x84F1),
:(const GL_OBJECT_VALIDATE_STATUS_ARB                                   = 0x8B83),
:(const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB                          = 0x8B49),
:(const GL_TEXTURE_GATHER_SHADOW                                        = 0x82A3),
:(const GL_OPERAND0_RGB_ARB                                             = 0x8590),
:(const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS                           = 0x90DA),
:(const GL_FRAMEBUFFER_SRGB                                             = 0x8DB9),
:(const GL_HISTOGRAM_FORMAT                                             = 0x8027),
:(const GL_READ_PIXELS_TYPE                                             = 0x828E),
:(const GL_DEPTH_COMPONENT32_ARB                                        = 0x81A7),
:(const GL_IMAGE_BINDING_NAME                                           = 0x8F3A),
:(const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE                        = 0x8211),
:(const GL_SAMPLER_CUBE_MAP_ARRAY_ARB                                   = 0x900C),
:(const GL_INTERNALFORMAT_ALPHA_TYPE                                    = 0x827B),
:(const GL_DEPTH_STENCIL_TEXTURE_MODE                                   = 0x90EA),
:(const GL_COMPRESSED_RGBA_ARB                                          = 0x84EE),
:(const GL_MODELVIEW1_ARB                                               = 0x850A),
:(const GL_IS_ROW_MAJOR                                                 = 0x9300),
:(const GL_ANY_SAMPLES_PASSED                                           = 0x8C2F),
:(const GL_COMBINE_ARB                                                  = 0x8570),
:(const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES                         = 0x8A43),
:(const GL_OBJECT_DELETE_STATUS_ARB                                     = 0x8B80),
:(const GL_UNIFORM_BLOCK                                                = 0x92E2),
:(const GL_INTERNALFORMAT_SUPPORTED                                     = 0x826F),
:(const GL_MAX_VERTEX_ATTRIB_BINDINGS                                   = 0x82DA),
:(const GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB                              = 0x8645),
:(const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                             = 0x910C),
:(const GL_TOP_LEVEL_ARRAY_STRIDE                                       = 0x930D),
:(const GL_CONVOLUTION_FILTER_SCALE                                     = 0x8014),
:(const GL_MAX_FRAMEBUFFER_LAYERS                                       = 0x9317),
:(const GL_ATOMIC_COUNTER_BUFFER_START                                  = 0x92C2),
:(const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS                           = 0x92DC),
:(const GL_DRAW_BUFFER1_ARB                                             = 0x8826),
:(const GL_CONVOLUTION_1D                                               = 0x8010),
:(const GL_WEIGHT_ARRAY_TYPE_ARB                                        = 0x86A9),
:(const GL_SYNC_CL_EVENT_COMPLETE_ARB                                   = 0x8241),
:(const GL_PROXY_POST_CONVOLUTION_COLOR_TABLE                           = 0x80D4),
:(const GL_MATRIX20_ARB                                                 = 0x88D4),
:(const GL_RENDERBUFFER_DEPTH_SIZE                                      = 0x8D54),
:(const GL_DISPATCH_INDIRECT_BUFFER                                     = 0x90EE),
:(const GL_QUERY_RESULT_ARB                                             = 0x8866),
:(const GL_MAX_SERVER_WAIT_TIMEOUT                                      = 0x9111),
:(const GL_FRAMEBUFFER_DEFAULT_HEIGHT                                   = 0x9311),
:(const GL_TEXTURE_VIEW_MIN_LAYER                                       = 0x82DD),
:(const GL_MODELVIEW12_ARB                                              = 0x872C),
:(const GL_PATCH_VERTICES                                               = 0x8E72),
:(const GL_VIEW_CLASS_S3TC_DXT5_RGBA                                    = 0x82CF),
:(const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS                   = 0x92CE),
:(const GL_RG8UI                                                        = 0x8238),
:(const GL_SHADER_STORAGE_BUFFER                                        = 0x90D2),
:(const GL_MODELVIEW7_ARB                                               = 0x8727),
:(const GL_FIXED_ONLY_ARB                                               = 0x891D),
:(const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT                              = 0x00000001),
:(const GL_COMPRESSED_RGB_ARB                                           = 0x84ED),
:(const GL_WRITE_ONLY_ARB                                               = 0x88B9),
:(const GL_GEOMETRY_OUTPUT_TYPE_ARB                                     = 0x8DDC),
:(const GL_COLOR_TABLE_FORMAT                                           = 0x80D8),
:(const GL_RGBA16F_ARB                                                  = 0x881A),
:(const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS                     = 0x8A32),
:(const GL_MATRIX17_ARB                                                 = 0x88D1),
:(const GL_NUM_PROGRAM_BINARY_FORMATS                                   = 0x87FE),
:(const GL_ALPHA16F_ARB                                                 = 0x881C),
:(const GL_FRAMEBUFFER_DEFAULT_LAYERS                                   = 0x9312),
:(const GL_TEXTURE_COMPARE_MODE_ARB                                     = 0x884C),
:(const GL_FUNC_ADD                                                     = 0x8006),
:(const GL_FRAGMENT_TEXTURE                                             = 0x829F),
:(const GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB                          = 0x880A),
:(const GL_MODELVIEW25_ARB                                              = 0x8739),
:(const GL_FRAMEBUFFER_BLEND                                            = 0x828B),
:(const GL_MAX_TESS_GEN_LEVEL                                           = 0x8E7E),
:(const GL_TEXTURE_RECTANGLE_ARB                                        = 0x84F5),
:(const GL_CONSTANT_ALPHA                                               = 0x8003),
:(const GL_MAX_COLOR_MATRIX_STACK_DEPTH                                 = 0x80B3),
:(const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB                     = 0x889C),
:(const GL_DEBUG_SOURCE_API_ARB                                         = 0x8246),
:(const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB                         = 0x8C29),
:(const GL_MIN                                                          = 0x8007),
:(const GL_VERTEX_ATTRIB_BINDING                                        = 0x82D4),
:(const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE                         = 0x82AE),
:(const GL_MAX_PROGRAM_INSTRUCTIONS_ARB                                 = 0x88A1),
:(const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB                           = 0x889B),
:(const GL_SYNC_CL_EVENT_ARB                                            = 0x8240),
:(const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB                          = 0x8B8B),
:(const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS                          = 0x92D4),
:(const GL_BUFFER_DATA_SIZE                                             = 0x9303),
:(const GL_TEXTURE_RED_TYPE                                             = 0x8C10),
:(const GL_TEXTURE_2D_ARRAY                                             = 0x8C1A),
:(const GL_MODELVIEW13_ARB                                              = 0x872D),
:(const GL_WEIGHT_ARRAY_POINTER_ARB                                     = 0x86AC),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER      = 0x92C8),
:(const GL_MAX_SHADER_STORAGE_BLOCK_SIZE                                = 0x90DE),
:(const GL_FRAMEBUFFER_RENDERABLE                                       = 0x8289),
:(const GL_TEXTURE_BINDING_RECTANGLE_ARB                                = 0x84F6),
:(const GL_IMAGE_COMPATIBILITY_CLASS                                    = 0x82A8),
:(const GL_ACTIVE_SUBROUTINE_UNIFORMS                                   = 0x8DE6),
:(const GL_BLEND_COLOR                                                  = 0x8005),
:(const GL_INT_IMAGE_BUFFER                                             = 0x905C),
:(const GL_FIXED                                                        = 0x140C),
:(const GL_QUERY_COUNTER_BITS_ARB                                       = 0x8864),
:(const GL_OBJECT_ACTIVE_UNIFORMS_ARB                                   = 0x8B86),
:(const GL_FRAGMENT_SUBROUTINE_UNIFORM                                  = 0x92F2),
:(const GL_IMAGE_CLASS_1_X_32                                           = 0x82BB),
:(const GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB                            = 0x88AB),
:(const GL_VIEWPORT_BOUNDS_RANGE                                        = 0x825D),
:(const GL_WAIT_FAILED                                                  = 0x911D),
:(const GL_SHADER_STORAGE_BUFFER_BINDING                                = 0x90D3),
:(const GL_IMAGE_TEXEL_SIZE                                             = 0x82A7),
:(const GL_MATRIX31_ARB                                                 = 0x88DF),
:(const GL_TRIANGLES_ADJACENCY_ARB                                      = 0x000C),
:(const GL_RG8I                                                         = 0x8237),
:(const GL_MAX_VERTEX_STREAMS                                           = 0x8E71),
:(const GL_UNIFORM_BLOCK_DATA_SIZE                                      = 0x8A40),
:(const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB                     = 0x8DA8),
:(const GL_COLOR_TABLE_LUMINANCE_SIZE                                   = 0x80DE),
:(const GL_TEXTURE_ALPHA_TYPE                                           = 0x8C13),
:(const GL_LINE_STRIP_ADJACENCY_ARB                                     = 0x000B),
:(const GL_UNIFORM_BLOCK_NAME_LENGTH                                    = 0x8A41),
:(const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM                           = 0x92F0),
:(const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE                           = 0x8CD0),
:(const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB                       = 0x889A),
:(const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2                     = 0x9276),
:(const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL                         = 0x8CD2),
:(const GL_TIME_ELAPSED                                                 = 0x88BF),
:(const GL_UNIFORM_BLOCK_BINDING                                        = 0x8A3F),
:(const GL_TEXTURE31_ARB                                                = 0x84DF),
:(const GL_READ_PIXELS                                                  = 0x828C),
:(const GL_CONVOLUTION_BORDER_MODE                                      = 0x8013),
:(const GL_UNIFORM_OFFSET                                               = 0x8A3B),
:(const GL_TEXTURE_SWIZZLE_B                                            = 0x8E44),
:(const GL_STREAM_COPY_ARB                                              = 0x88E2),
:(const GL_MEDIUM_FLOAT                                                 = 0x8DF1),
:(const GL_TEXTURE8_ARB                                                 = 0x84C8),
:(const GL_UNIFORM_BUFFER_BINDING                                       = 0x8A28),
:(const GL_TRANSFORM_FEEDBACK_VARYING                                   = 0x92F4),
:(const GL_TEXTURE_BUFFER_SIZE                                          = 0x919E),
:(const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH                         = 0x8E49),
:(const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS                           = 0x8E8A),
:(const GL_SAMPLER_2D_MULTISAMPLE                                       = 0x9108),
:(const GL_RENDERBUFFER_INTERNAL_FORMAT                                 = 0x8D44),
:(const GL_COMPUTE_SHADER_BIT                                           = 0x00000020),
:(const GL_COLOR_ATTACHMENT13                                           = 0x8CED),
:(const GL_SYNC_GPU_COMMANDS_COMPLETE                                   = 0x9117),
:(const GL_PROGRAM_INSTRUCTIONS_ARB                                     = 0x88A0),
:(const GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB                      = 0x880E),
:(const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2                    = 0x9277),
:(const GL_MAP_WRITE_BIT                                                = 0x0002),
:(const GL_VIEW_CLASS_RGTC2_RG                                          = 0x82D1),
:(const GL_TRANSFORM_FEEDBACK_ACTIVE                                    = 0x8E24),
:(const GL_MATRIX11_ARB                                                 = 0x88CB),
:(const GL_PROXY_TEXTURE_CUBE_MAP_ARB                                   = 0x851B),
:(const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB                           = 0x00000004),
:(const GL_STENCIL_RENDERABLE                                           = 0x8288),
:(const GL_COLOR_ARRAY_BUFFER_BINDING_ARB                               = 0x8898),
:(const GL_TRANSPOSE_TEXTURE_MATRIX_ARB                                 = 0x84E5),
:(const GL_REFERENCED_BY_VERTEX_SHADER                                  = 0x9306),
:(const GL_PROGRAM_SEPARABLE                                            = 0x8258),
:(const GL_UNSIGNED_INT_IMAGE_BUFFER                                    = 0x9067),
:(const GL_FLOAT_MAT4_ARB                                               = 0x8B5C),
:(const GL_RENDERBUFFER_HEIGHT                                          = 0x8D43),
:(const GL_TRANSFORM_FEEDBACK_BINDING                                   = 0x8E25),
:(const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB                         = 0x8243),
:(const GL_TESS_EVALUATION_TEXTURE                                      = 0x829D),
:(const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB                            = 0x824E),
:(const GL_TEXTURE_CUBE_MAP_ARRAY_ARB                                   = 0x9009),
:(const GL_PROXY_COLOR_TABLE                                            = 0x80D3),
:(const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB                              = 0x8516),
:(const GL_UNIFORM_BUFFER_START                                         = 0x8A29),
:(const GL_TEXTURE_VIEW_MIN_LEVEL                                       = 0x82DB),
:(const GL_OBJECT_COMPILE_STATUS_ARB                                    = 0x8B81),
:(const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB                           = 0x886A),
:(const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS                             = 0x90D6),
:(const GL_TRANSFORM_FEEDBACK_BARRIER_BIT                               = 0x00000800),
:(const GL_SAMPLE_POSITION                                              = 0x8E50),
:(const GL_UNSIGNED_INT_IMAGE_3D                                        = 0x9064),
:(const GL_R8                                                           = 0x8229),
:(const GL_CONVOLUTION_HEIGHT                                           = 0x8019),
:(const GL_MATRIX3_ARB                                                  = 0x88C3),
:(const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER                           = 0x8CDB),
:(const GL_SAMPLES_ARB                                                  = 0x80A9),
:(const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS                            = 0x886C),
:(const GL_INTERNALFORMAT_RED_SIZE                                      = 0x8271),
:(const GL_DISPATCH_INDIRECT_BUFFER_BINDING                             = 0x90EF),
:(const GL_BOOL_VEC4_ARB                                                = 0x8B59),
:(const GL_MAX_SAMPLE_MASK_WORDS                                        = 0x8E59),
:(const GL_OBJECT_TYPE_ARB                                              = 0x8B4E),
:(const GL_COLOR_SUM_ARB                                                = 0x8458),
:(const GL_POINT_SIZE_MIN_ARB                                           = 0x8126),
:(const GL_INT_VEC2_ARB                                                 = 0x8B53),
:(const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB                            = 0x900D),
:(const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING                        = 0x8210),
:(const GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB                           = 0x862E),
:(const GL_CLEAR_BUFFER                                                 = 0x82B4),
:(const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS                         = 0x886D),
:(const GL_RGB32UI                                                      = 0x8D71),
:(const GL_COLOR_ATTACHMENT15                                           = 0x8CEF),
:(const GL_TEXTURE_BUFFER_ARB                                           = 0x8C2A),
:(const GL_UNIFORM_BARRIER_BIT                                          = 0x00000004),
:(const GL_IMAGE_BINDING_ACCESS                                         = 0x8F3E),
:(const GL_MAX_TEXTURE_UNITS_ARB                                        = 0x84E2),
:(const GL_IMAGE_BINDING_LAYERED                                        = 0x8F3C),
:(const GL_CURRENT_WEIGHT_ARB                                           = 0x86A8),
:(const GL_TEXTURE_GREEN_TYPE_ARB                                       = 0x8C11),
:(const GL_POST_CONVOLUTION_ALPHA_SCALE                                 = 0x801F),
:(const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB                        = 0x8E5E),
:(const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB                      = 0x900F),
:(const GL_MAX_COMPUTE_WORK_GROUP_COUNT                                 = 0x91BE),
:(const GL_COLOR_MATRIX                                                 = 0x80B1),
:(const GL_REFERENCED_BY_FRAGMENT_SHADER                                = 0x930A),
:(const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH                         = 0x8A35),
:(const GL_RENDERBUFFER_GREEN_SIZE                                      = 0x8D51),
:(const GL_SRC1_COLOR                                                   = 0x88F9),
:(const GL_HISTOGRAM_RED_SIZE                                           = 0x8028),
:(const GL_CONVOLUTION_WIDTH                                            = 0x8018),
:(const GL_DRAW_BUFFER0_ARB                                             = 0x8825),
:(const GL_ISOLINES                                                     = 0x8E7A),
:(const GL_ACTIVE_SUBROUTINES                                           = 0x8DE5),
:(const GL_MAX_COMPUTE_LOCAL_INVOCATIONS                                = 0x90EB),
:(const GL_ATOMIC_COUNTER_BUFFER_BINDING                                = 0x92C1),
:(const GL_UNSIGNED_INT_IMAGE_2D_ARRAY                                  = 0x9069),
:(const GL_MATRIX6_ARB                                                  = 0x88C6),
:(const GL_CONVOLUTION_FILTER_BIAS                                      = 0x8015),
:(const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE                              = 0x92C4),
:(const GL_VERTEX_PROGRAM_ARB                                           = 0x8620),
:(const GL_TEXTURE_UPDATE_BARRIER_BIT                                   = 0x00000100),
:(const GL_SOURCE1_ALPHA_ARB                                            = 0x8589),
:(const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB                               = 0x8E8C),
:(const GL_UNDEFINED_VERTEX                                             = 0x8260),
:(const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT                               = 0x9128),
:(const GL_DEPTH_RENDERABLE                                             = 0x8287),
:(const GL_HISTOGRAM_SINK                                               = 0x802D),
:(const GL_MATRIX_INDEX_ARRAY_STRIDE_ARB                                = 0x8848),
:(const GL_BLOCK_INDEX                                                  = 0x92FD),
:(const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB                              = 0x8896),
:(const GL_IMAGE_BINDING_FORMAT                                         = 0x906E),
:(const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB                          = 0x8DDD),
:(const GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB                             = 0x880B),
:(const GL_TEXTURE7_ARB                                                 = 0x84C7),
:(const GL_COMPRESSED_SIGNED_R11_EAC                                    = 0x9271),
:(const GL_MODELVIEW16_ARB                                              = 0x8730),
:(const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION                     = 0x8E4C),
:(const GL_VERTEX_ATTRIB_RELATIVE_OFFSET                                = 0x82D5),
:(const GL_CURRENT_VERTEX_ATTRIB_ARB                                    = 0x8626),
:(const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB                              = 0x8517),
:(const GL_COMPRESSED_SRGB8_ETC2                                        = 0x9275),
:(const GL_MAX_NUM_COMPATIBLE_SUBROUTINES                               = 0x92F8),
:(const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE                            = 0x8215),
:(const GL_RESET_NOTIFICATION_STRATEGY_ARB                              = 0x8256),
:(const GL_TEXTURE17_ARB                                                = 0x84D1),
:(const GL_PRIMARY_COLOR_ARB                                            = 0x8577),
:(const GL_ONE_MINUS_SRC1_COLOR                                         = 0x88FA),
:(const GL_STENCIL_COMPONENTS                                           = 0x8285),
:(const GL_MAX_INTEGER_SAMPLES                                          = 0x9110),
:(const GL_FRAMEBUFFER_BINDING                                          = 0x8CA6),
:(const GL_UNIFORM_MATRIX_STRIDE                                        = 0x8A3D),
:(const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE                       = 0x82AF),
:(const GL_MODELVIEW27_ARB                                              = 0x873B),
:(const GL_TEXTURE_RED_TYPE_ARB                                         = 0x8C10),
:(const GL_VERTEX_PROGRAM_POINT_SIZE_ARB                                = 0x8642),
:(const GL_CURRENT_MATRIX_INDEX_ARB                                     = 0x8845),
:(const GL_REFERENCED_BY_COMPUTE_SHADER                                 = 0x930B),
:(const GL_TYPE                                                         = 0x92FA),
:(const GL_TEXTURE10_ARB                                                = 0x84CA),
:(const GL_MATRIX7_ARB                                                  = 0x88C7),
:(const GL_PROGRAM_NATIVE_ATTRIBS_ARB                                   = 0x88AE),
:(const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS                         = 0x8E81),
:(const GL_PROGRAM_OBJECT_ARB                                           = 0x8B40),
:(const GL_POST_COLOR_MATRIX_GREEN_BIAS                                 = 0x80B9),
:(const GL_MAX_FRAMEBUFFER_SAMPLES                                      = 0x9318),
:(const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB                       = 0x889F),
:(const GL_MATRIX28_ARB                                                 = 0x88DC),
:(const GL_TEXTURE_INTENSITY_TYPE_ARB                                   = 0x8C15),
:(const GL_MAX_NAME_LENGTH                                              = 0x92F6),
:(const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY                           = 0x9103),
:(const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB                                = 0x9144),
:(const GL_INNOCENT_CONTEXT_RESET_ARB                                   = 0x8254),
:(const GL_MODELVIEW21_ARB                                              = 0x8735),
:(const GL_UNSIGNED_INT_IMAGE_2D                                        = 0x9063),
:(const GL_MAX_WIDTH                                                    = 0x827E),
:(const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB                             = 0x900B),
:(const GL_TEXTURE18_ARB                                                = 0x84D2),
:(const GL_ANY_SAMPLES_PASSED_CONSERVATIVE                              = 0x8D6A),
:(const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE                               = 0x8262),
:(const GL_FRAMEBUFFER                                                  = 0x8D40),
:(const GL_COLOR_ATTACHMENT6                                            = 0x8CE6),
:(const GL_RG                                                           = 0x8227),
:(const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT                    = 0x8CD7),
:(const GL_MATRIX24_ARB                                                 = 0x88D8),
:(const GL_PROGRAM_PIPELINE_BINDING                                     = 0x825A),
:(const GL_WEIGHT_ARRAY_STRIDE_ARB                                      = 0x86AA),
:(const GL_TRANSPOSE_COLOR_MATRIX_ARB                                   = 0x84E6),
:(const GL_INT_IMAGE_1D_ARRAY                                           = 0x905D),
:(const GL_ATOMIC_COUNTER_BUFFER_SIZE                                   = 0x92C3),
:(const GL_BOOL_VEC2_ARB                                                = 0x8B57),
:(const GL_MODELVIEW10_ARB                                              = 0x872A),
:(const GL_VIEW_CLASS_S3TC_DXT3_RGBA                                    = 0x82CE),
:(const GL_TEXTURE20_ARB                                                = 0x84D4),
:(const GL_UNSIGNED_INT_IMAGE_1D                                        = 0x9062),
:(const GL_MATRIX_INDEX_ARRAY_SIZE_ARB                                  = 0x8846),
:(const GL_TEXTURE29_ARB                                                = 0x84DD),
:(const GL_OPERAND1_RGB_ARB                                             = 0x8591),
:(const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB                                = 0x851C),
:(const GL_BOOL_ARB                                                     = 0x8B56),
:(const GL_ATOMIC_COUNTER_BUFFER_INDEX                                  = 0x9301),
:(const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS                             = 0x8DE8),
:(const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB                              = 0x88EF),
:(const GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB                         = 0x88B2),
:(const GL_FUNC_SUBTRACT                                                = 0x800A),
:(const GL_MAX_CONVOLUTION_WIDTH                                        = 0x801A),
:(const GL_CAVEAT_SUPPORT                                               = 0x82B8),
:(const GL_INTERNALFORMAT_BLUE_TYPE                                     = 0x827A),
:(const GL_RG_INTEGER                                                   = 0x8228),
:(const GL_HALF_FLOAT                                                   = 0x140B),
:(const GL_SOURCE1_RGB_ARB                                              = 0x8581),
:(const GL_MATRIX9_ARB                                                  = 0x88C9),
:(const GL_VIEWPORT_INDEX_PROVOKING_VERTEX                              = 0x825F),
:(const GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB                             = 0x88B4),
:(const GL_INTERNALFORMAT_DEPTH_SIZE                                    = 0x8275),
:(const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS                          = 0x8E7F),
:(const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB                               = 0x84F8),
:(const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB                                 = 0x9143),
:(const GL_SOURCE2_ALPHA_ARB                                            = 0x858A),
:(const GL_INT_IMAGE_1D                                                 = 0x9057),
:(const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS                            = 0x90DB),
:(const GL_MAX_FRAGMENT_UNIFORM_BLOCKS                                  = 0x8A2D),
:(const GL_MIPMAP                                                       = 0x8293),
:(const GL_VERTEX_BINDING_STRIDE                                        = 0x82D8),
:(const GL_TEXTURE_SAMPLES                                              = 0x9106),
:(const GL_DRAW_BUFFER13_ARB                                            = 0x8832),
:(const GL_MAX_VARYING_COMPONENTS                                       = 0x8B4B),
:(const GL_TEXTURE2_ARB                                                 = 0x84C2),
:(const GL_VIEW_COMPATIBILITY_CLASS                                     = 0x82B6),
:(const GL_SAMPLER_2D_MULTISAMPLE_ARRAY                                 = 0x910B),
:(const GL_UNSIGNED_NORMALIZED_ARB                                      = 0x8C17),
:(const GL_RG16                                                         = 0x822C),
:(const GL_RENDERBUFFER_RED_SIZE                                        = 0x8D50),
:(const GL_COORD_REPLACE_ARB                                            = 0x8862),
:(const GL_UNPACK_COMPRESSED_BLOCK_DEPTH                                = 0x9129),
:(const GL_DEPTH_STENCIL_ATTACHMENT                                     = 0x821A),
:(const GL_SAMPLER_CUBE_ARB                                             = 0x8B60),
:(const GL_DEBUG_SOURCE_APPLICATION_ARB                                 = 0x824A),
:(const GL_MAX_VARYING_FLOATS_ARB                                       = 0x8B4B),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER                  = 0x8A45),
:(const GL_TEXTURE_COMPRESSED_ARB                                       = 0x86A1),
:(const GL_PACK_COMPRESSED_BLOCK_WIDTH                                  = 0x912B),
:(const GL_TEXTURE_BINDING_BUFFER_ARB                                   = 0x8C2C),
:(const GL_POST_COLOR_MATRIX_BLUE_SCALE                                 = 0x80B6),
:(const GL_UNSIGNALED                                                   = 0x9118),
:(const GL_UNPACK_COMPRESSED_BLOCK_SIZE                                 = 0x912A),
:(const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE                             = 0x8E24),
:(const GL_BUFFER_BINDING                                               = 0x9302),
:(const GL_MAX_FRAGMENT_UNIFORM_VECTORS                                 = 0x8DFD),
:(const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE                            = 0x8213),
:(const GL_COLOR_ATTACHMENT14                                           = 0x8CEE),
:(const GL_MODELVIEW20_ARB                                              = 0x8734),
:(const GL_FLOAT_VEC4_ARB                                               = 0x8B52),
:(const GL_COMPUTE_SUBROUTINE                                           = 0x92ED),
:(const GL_POST_CONVOLUTION_COLOR_TABLE                                 = 0x80D1),
:(const GL_DRAW_FRAMEBUFFER_BINDING                                     = 0x8CA6),
:(const GL_DRAW_BUFFER9_ARB                                             = 0x882E),
:(const GL_ALL_BARRIER_BITS                                             = 0xFFFFFFFF),
:(const GL_SRGB_WRITE                                                   = 0x8298),
:(const GL_PIXEL_PACK_BUFFER_BINDING_ARB                                = 0x88ED),
:(const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB                             = 0x8895),
:(const GL_MAX_FRAGMENT_IMAGE_UNIFORMS                                  = 0x90CE),
:(const GL_TEXTURE21_ARB                                                = 0x84D5),
:(const GL_VERTEX_PROGRAM_TWO_SIDE_ARB                                  = 0x8643),
:(const GL_SAMPLER_2D_SHADOW_ARB                                        = 0x8B62),
:(const GL_DRAW_BUFFER6_ARB                                             = 0x882B),
:(const GL_COMBINE_RGB_ARB                                              = 0x8571),
:(const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS                       = 0x8E80),
:(const GL_UNIFORM_IS_ROW_MAJOR                                         = 0x8A3E),
:(const GL_REFERENCED_BY_GEOMETRY_SHADER                                = 0x9309),
:(const GL_TEXTURE_STENCIL_SIZE                                         = 0x88F1),
:(const GL_BOOL_VEC3_ARB                                                = 0x8B58),
:(const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE                          = 0x910A),
:(const GL_CONVOLUTION_FORMAT                                           = 0x8017),
:(const GL_TESS_GEN_MODE                                                = 0x8E76),
:(const GL_PROGRAM_ERROR_POSITION_ARB                                   = 0x864B),
:(const GL_MAX_VERTEX_IMAGE_UNIFORMS                                    = 0x90CA),
:(const GL_POST_CONVOLUTION_ALPHA_BIAS                                  = 0x8023),
:(const GL_COMPUTE_SUBROUTINE_UNIFORM                                   = 0x92F3),
:(const GL_LOCATION                                                     = 0x930E),
:(const GL_UNIFORM_TYPE                                                 = 0x8A37),
:(const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET                            = 0x82D9),
:(const GL_LOW_FLOAT                                                    = 0x8DF0),
:(const GL_TESS_CONTROL_OUTPUT_VERTICES                                 = 0x8E75),
:(const GL_COLOR_COMPONENTS                                             = 0x8283),
:(const GL_PATCHES                                                      = 0x000E),
:(const GL_MAX_UNIFORM_BUFFER_BINDINGS                                  = 0x8A2F),
:(const GL_MATRIX25_ARB                                                 = 0x88D9),
:(const GL_IMAGE_2D_MULTISAMPLE                                         = 0x9055),
:(const GL_SYNC_STATUS                                                  = 0x9114),
:(const GL_MAX_FRAGMENT_ATOMIC_COUNTERS                                 = 0x92D6),
:(const GL_VIEW_CLASS_S3TC_DXT1_RGBA                                    = 0x82CD),
:(const GL_COLOR_ATTACHMENT1                                            = 0x8CE1),
:(const GL_TEXTURE14_ARB                                                = 0x84CE),
:(const GL_VIEW_CLASS_128_BITS                                          = 0x82C4),
:(const GL_MATRIX19_ARB                                                 = 0x88D3),
:(const GL_DEPTH32F_STENCIL8                                            = 0x8CAD),
:(const GL_MATRIX21_ARB                                                 = 0x88D5),
:(const GL_MAX_COMPUTE_IMAGE_UNIFORMS                                   = 0x91BD),
:(const GL_TEXTURE_COMPARE_FUNC_ARB                                     = 0x884D),
:(const GL_UNSIGNED_INT_IMAGE_1D_ARRAY                                  = 0x9068),
:(const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT                              = 0x919F),
:(const GL_INTERNALFORMAT_SHARED_SIZE                                   = 0x8277),
:(const GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB                             = 0x880C),
:(const GL_POST_COLOR_MATRIX_BLUE_BIAS                                  = 0x80BA),
:(const GL_POST_CONVOLUTION_BLUE_SCALE                                  = 0x801E),
:(const GL_IMAGE_3D                                                     = 0x904E),
:(const GL_REDUCE                                                       = 0x8016),
:(const GL_RG16UI                                                       = 0x823A),
:(const GL_TESS_EVALUATION_SHADER                                       = 0x8E87),
:(const GL_DEPTH_COMPONENT16_ARB                                        = 0x81A5),
:(const GL_PROGRAM_BINARY_FORMATS                                       = 0x87FF),
:(const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB                               = 0x8247),
:(const GL_R32UI                                                        = 0x8236),
:(const GL_RG16I                                                        = 0x8239),
:(const GL_MIN_SAMPLE_SHADING_VALUE_ARB                                 = 0x8C37),
:(const GL_CONSTANT_COLOR                                               = 0x8001),
:(const GL_TEXTURE22_ARB                                                = 0x84D6),
:(const GL_RGB16F_ARB                                                   = 0x881B),
:(const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB                     = 0x8DE1),
:(const GL_PROGRAM_ATTRIBS_ARB                                          = 0x88AC),
:(const GL_HALF_FLOAT_ARB                                               = 0x140B),
:(const GL_GEOMETRY_INPUT_TYPE_ARB                                      = 0x8DDB),
:(const GL_TEXTURE_COMPRESSED_BLOCK_SIZE                                = 0x82B3),
:(const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX                          = 0x92DA),
:(const GL_MAP_FLUSH_EXPLICIT_BIT                                       = 0x0010),
:(const GL_DEBUG_TYPE_PORTABILITY_ARB                                   = 0x824F),
:(const GL_TEXTURE_VIEW_NUM_LEVELS                                      = 0x82DC),
:(const GL_IMAGE_1D_ARRAY                                               = 0x9052),
:(const GL_FLOAT_VEC3_ARB                                               = 0x8B51),
:(const GL_DEPTH_COMPONENT32F                                           = 0x8CAC),
:(const GL_FLOAT_32_UNSIGNED_INT_24_8_REV                               = 0x8DAD),
:(const GL_FRAMEBUFFER_DEFAULT_SAMPLES                                  = 0x9313),
:(const GL_SAMPLE_COVERAGE_VALUE_ARB                                    = 0x80AA),
:(const GL_PROGRAM_ERROR_STRING_ARB                                     = 0x8874),
:(const GL_MAX_LAYERS                                                   = 0x8281),
:(const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS                           = 0x90DD),
:(const GL_POST_COLOR_MATRIX_COLOR_TABLE                                = 0x80D2),
:(const GL_UNIFORM                                                      = 0x92E1),
:(const GL_COLOR_ATTACHMENT2                                            = 0x8CE2),
:(const GL_NO_RESET_NOTIFICATION_ARB                                    = 0x8261),
:(const GL_PROGRAM_ALU_INSTRUCTIONS_ARB                                 = 0x8805),
:(const GL_CONDITION_SATISFIED                                          = 0x911C),
:(const GL_COPY_WRITE_BUFFER                                            = 0x8F37),
:(const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT                       = 0x90DF),
:(const GL_MAX_GEOMETRY_UNIFORM_BLOCKS                                  = 0x8A2C),
:(const GL_SRGB_READ                                                    = 0x8297),
:(const GL_PROGRAM_NATIVE_PARAMETERS_ARB                                = 0x88AA),
:(const GL_COLOR_ENCODING                                               = 0x8296),
:(const GL_MAX_CONVOLUTION_HEIGHT                                       = 0x801B),
:(const GL_INT_SAMPLER_2D_MULTISAMPLE                                   = 0x9109),
:(const GL_SAMPLE_MASK_VALUE                                            = 0x8E52),
:(const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB                              = 0x88FE),
:(const GL_DEBUG_SEVERITY_HIGH_ARB                                      = 0x9146),
:(const GL_SAMPLER_BINDING                                              = 0x8919),
:(const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS                          = 0x92CF),
:(const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS                          = 0x8E47),
:(const GL_TABLE_TOO_LARGE                                              = 0x8031),
:(const GL_DEBUG_TYPE_OTHER_ARB                                         = 0x8251),
:(const GL_BLEND_EQUATION                                               = 0x8009),
:(const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB                         = 0x8E8D),
:(const GL_SAMPLER_1D_SHADOW_ARB                                        = 0x8B61),
:(const GL_NAMED_STRING_LENGTH_ARB                                      = 0x8DE9),
:(const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER                  = 0x8A46),
:(const GL_HISTOGRAM_GREEN_SIZE                                         = 0x8029),
:(const GL_SAMPLER_2D_ARB                                               = 0x8B5E),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER   = 0x92C9),
:(const GL_UNSIGNED_INT_24_8                                            = 0x84FA),
:(const GL_MAX_COMPUTE_UNIFORM_COMPONENTS                               = 0x8263),
:(const GL_MAX_VERTEX_ATOMIC_COUNTERS                                   = 0x92D2),
:(const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT                              = 0x8A34),
:(const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY                         = 0x9105),
:(const GL_IMAGE_2D                                                     = 0x904D),
:(const GL_DOT3_RGB_ARB                                                 = 0x86AE),
:(const GL_DRAW_BUFFER5_ARB                                             = 0x882A),
:(const GL_CURRENT_MATRIX_ARB                                           = 0x8641),
:(const GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB                          = 0x88A3),
:(const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB                        = 0x8C2D),
:(const GL_VERTEX_BINDING_OFFSET                                        = 0x82D7),
:(const GL_IMAGE_CLASS_2_X_32                                           = 0x82BA),
:(const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY                            = 0x906A),
:(const GL_STREAM_READ_ARB                                              = 0x88E1),
:(const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS              = 0x8E1F),
:(const GL_MAX_IMAGE_UNITS                                              = 0x8F38),
:(const GL_GEOMETRY_VERTICES_OUT_ARB                                    = 0x8DDA),
:(const GL_TEXTURE_INTENSITY_TYPE                                       = 0x8C15),
:(const GL_BUFFER_SIZE_ARB                                              = 0x8764),
:(const GL_MAX_RENDERBUFFER_SIZE                                        = 0x84E8),
:(const GL_TESS_CONTROL_SUBROUTINE_UNIFORM                              = 0x92EF),
:(const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS                                = 0x92D9),
:(const GL_FLOAT_MAT3_ARB                                               = 0x8B5B),
:(const GL_MODELVIEW30_ARB                                              = 0x873E),
:(const GL_VIEW_CLASS_32_BITS                                           = 0x82C8),
:(const GL_FRAMEBUFFER_UNDEFINED                                        = 0x8219),
:(const GL_DRAW_BUFFER15_ARB                                            = 0x8834),
:(const GL_R8UI                                                         = 0x8232),
:(const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE                             = 0x8214),
:(const GL_TEXTURE_CUBE_MAP_SEAMLESS                                    = 0x884F),
:(const GL_BUFFER_UPDATE_BARRIER_BIT                                    = 0x00000200),
:(const GL_ONE_MINUS_CONSTANT_COLOR                                     = 0x8002),
:(const GL_INT_VEC3_ARB                                                 = 0x8B54),
:(const GL_CONSTANT_ARB                                                 = 0x8576),
:(const GL_VERTEX_BLEND_ARB                                             = 0x86A7),
:(const GL_TEXTURE_COMPARE_FAIL_VALUE_ARB                               = 0x80BF),
:(const GL_IMAGE_2D_RECT                                                = 0x904F),
:(const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB                            = 0x86A0),
:(const GL_IMPLEMENTATION_COLOR_READ_FORMAT                             = 0x8B9B),
:(const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS                     = 0x8E85),
:(const GL_DEPTH_COMPONENT24_ARB                                        = 0x81A6),
:(const GL_DRAW_BUFFER3_ARB                                             = 0x8828),
:(const GL_PATCH_DEFAULT_INNER_LEVEL                                    = 0x8E73),
:(const GL_COLOR_TABLE_BLUE_SIZE                                        = 0x80DC),
:(const GL_FILTER                                                       = 0x829A),
:(const GL_R16                                                          = 0x822A),
:(const GL_SAMPLER_1D_ARB                                               = 0x8B5D),
:(const GL_MAX_DEPTH_TEXTURE_SAMPLES                                    = 0x910F),
:(const GL_MAX_VERTEX_UNIFORM_VECTORS                                   = 0x8DFB),
:(const GL_VIEW_CLASS_S3TC_DXT1_RGB                                     = 0x82CC),
:(const GL_TEXTURE15_ARB                                                = 0x84CF),
:(const GL_RENDERBUFFER_STENCIL_SIZE                                    = 0x8D55),
:(const GL_SHADER_IMAGE_ATOMIC                                          = 0x82A6),
:(const GL_MAX_PROGRAM_ENV_PARAMETERS_ARB                               = 0x88B5),
:(const GL_OBJECT_INFO_LOG_LENGTH_ARB                                   = 0x8B84),
:(const GL_VERTEX_SHADER_ARB                                            = 0x8B31),
:(const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB                        = 0x8E5F),
:(const GL_COLOR_ATTACHMENT7                                            = 0x8CE7),
:(const GL_VERTEX_SHADER_BIT                                            = 0x00000001),
:(const GL_RENDERBUFFER_BINDING                                         = 0x8CA7),
:(const GL_TRANSPOSE_CURRENT_MATRIX_ARB                                 = 0x88B7),
:(const GL_STREAM_DRAW_ARB                                              = 0x88E0),
:(const GL_SHADER_STORAGE_BARRIER_BIT                                   = 0x2000),
:(const GL_NAME_LENGTH                                                  = 0x92F9),
:(const GL_COMPRESSED_INTENSITY_ARB                                     = 0x84EC),
:(const GL_ACTIVE_VARIABLES                                             = 0x9305),
:(const GL_COMPRESSED_RG_RGTC2                                          = 0x8DBD),
:(const GL_MATRIX5_ARB                                                  = 0x88C5),
:(const GL_VIEW_CLASS_48_BITS                                           = 0x82C7),
:(const GL_TEXTURE11_ARB                                                = 0x84CB),
:(const GL_MATRIX_INDEX_ARRAY_TYPE_ARB                                  = 0x8847),
:(const GL_COMPARE_R_TO_TEXTURE_ARB                                     = 0x884E),
:(const GL_PROGRAM_BINARY_LENGTH                                        = 0x8741),
:(const GL_TEXTURE_IMMUTABLE_LEVELS                                     = 0x82DF),
:(const GL_INTENSITY32F_ARB                                             = 0x8817),
:(const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY                      = 0x906C),
:(const GL_MATRIX27_ARB                                                 = 0x88DB),
:(const GL_LOW_INT                                                      = 0x8DF3),
:(const GL_TEXTURE24_ARB                                                = 0x84D8),
:(const GL_MATRIX29_ARB                                                 = 0x88DD),
:(const GL_MAX_PALETTE_MATRICES_ARB                                     = 0x8842),
:(const GL_FRAMEBUFFER_DEFAULT                                          = 0x8218),
:(const GL_CLIENT_ACTIVE_TEXTURE_ARB                                    = 0x84E1),
:(const GL_COMPRESSED_SIGNED_RG_RGTC2                                   = 0x8DBE),
:(const GL_INT_IMAGE_CUBE                                               = 0x905B),
:(const GL_FRAGMENT_SHADER_ARB                                          = 0x8B30),
:(const GL_GET_TEXTURE_IMAGE_FORMAT                                     = 0x8291),
:(const GL_RG32UI                                                       = 0x823C),
:(const GL_INTERNALFORMAT_STENCIL_SIZE                                  = 0x8276),
:(const GL_COPY_READ_BUFFER                                             = 0x8F36),
:(const GL_SOURCE2_RGB_ARB                                              = 0x8582),
:(const GL_MINMAX_SINK                                                  = 0x8030),
:(const GL_MATRIX30_ARB                                                 = 0x88DE),
:(const GL_OBJECT_ACTIVE_ATTRIBUTES_ARB                                 = 0x8B89),
:(const GL_COLOR_RENDERABLE                                             = 0x8286),
:(const GL_COLOR_ATTACHMENT0                                            = 0x8CE0),
:(const GL_VIEW_CLASS_8_BITS                                            = 0x82CB),
:(const GL_CONVOLUTION_2D                                               = 0x8011),
:(const GL_SYNC_FLAGS                                                   = 0x9115),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER           = 0x90ED),
:(const GL_TEXTURE28_ARB                                                = 0x84DC),
:(const GL_GEOMETRY_SHADER_ARB                                          = 0x8DD9),
:(const GL_POINT_FADE_THRESHOLD_SIZE_ARB                                = 0x8128),
:(const GL_READ_PIXELS_FORMAT                                           = 0x828D),
:(const GL_PATCH_DEFAULT_OUTER_LEVEL                                    = 0x8E74),
:(const GL_MAX_PROGRAM_PARAMETERS_ARB                                   = 0x88A9),
:(const GL_INTERNALFORMAT_DEPTH_TYPE                                    = 0x827C),
:(const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB                         = 0x8B4D),
:(const GL_DRAW_INDIRECT_BUFFER_BINDING                                 = 0x8F43),
:(const GL_R8I                                                          = 0x8231),
:(const GL_MODELVIEW26_ARB                                              = 0x873A),
:(const GL_ARRAY_STRIDE                                                 = 0x92FE),
:(const GL_IMAGE_CLASS_4_X_16                                           = 0x82BC),
:(const GL_UNIFORM_BUFFER_SIZE                                          = 0x8A2A),
:(const GL_STENCIL_INDEX4                                               = 0x8D47),
:(const GL_MAX_IMAGE_SAMPLES                                            = 0x906D),
:(const GL_PROGRAM_FORMAT_ARB                                           = 0x8876),
:(const GL_ADD_SIGNED_ARB                                               = 0x8574),
:(const GL_TEXTURE25_ARB                                                = 0x84D9),
:(const GL_MAX_ELEMENT_INDEX                                            = 0x8D6B),
:(const GL_IMAGE_CLASS_1_X_16                                           = 0x82BE),
:(const GL_LINES_ADJACENCY_ARB                                          = 0x000A),
:(const GL_TEXTURE_RECTANGLE                                            = 0x84F5),
:(const GL_TEXTURE_BINDING_2D_MULTISAMPLE                               = 0x9104),
:(const GL_DRAW_FRAMEBUFFER                                             = 0x8CA9),
:(const GL_TEXTURE_BLUE_TYPE                                            = 0x8C12),
:(const GL_NUM_ACTIVE_VARIABLES                                         = 0x9304),
:(const GL_DRAW_BUFFER2_ARB                                             = 0x8827),
:(const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE                          = 0x8217),
:(const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER            = 0x92C7),
:(const GL_MODELVIEW3_ARB                                               = 0x8723),
:(const GL_TEXTURE13_ARB                                                = 0x84CD),
:(const GL_TEXTURE_IMAGE_FORMAT                                         = 0x828F),
:(const GL_READ_ONLY_ARB                                                = 0x88B8),
:(const GL_INT_VEC4_ARB                                                 = 0x8B55),
:(const GL_COLOR_TABLE                                                  = 0x80D0),
:(const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                    = 0x910D),
:(const GL_TEXTURE3_ARB                                                 = 0x84C3),
:(const GL_SOURCE0_ALPHA_ARB                                            = 0x8588),
:(const GL_HIGH_INT                                                     = 0x8DF5),
:(const GL_HISTOGRAM_WIDTH                                              = 0x8026),
:(const GL_PACK_COMPRESSED_BLOCK_DEPTH                                  = 0x912D),
:(const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS                             = 0x92D3),
:(const GL_FRAMEBUFFER_RENDERABLE_LAYERED                               = 0x828A),
:(const GL_SAMPLE_SHADING_ARB                                           = 0x8C36),
:(const GL_GEOMETRY_TEXTURE                                             = 0x829E),
:(const GL_TESS_CONTROL_TEXTURE                                         = 0x829C),
:(const GL_DEBUG_CALLBACK_FUNCTION_ARB                                  = 0x8244),
:(const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS                              = 0x8E89),
:(const GL_COMPRESSED_RED_RGTC1                                         = 0x8DBB),
:(const GL_INDEX                                                        = 0x8222),
:(const GL_TRANSPOSE_MODELVIEW_MATRIX_ARB                               = 0x84E3),
:(const GL_MAX_FRAMEBUFFER_HEIGHT                                       = 0x9316),
:(const GL_MATRIX_INDEX_ARRAY_POINTER_ARB                               = 0x8849),
:(const GL_DEPTH_STENCIL                                                = 0x84F9),
:(const GL_TEXTURE_SHADOW                                               = 0x82A1),
:(const GL_MAP_INVALIDATE_RANGE_BIT                                     = 0x0004),
:(const GL_WEIGHT_SUM_UNITY_ARB                                         = 0x86A6),
:(const GL_PROGRAM_NATIVE_TEMPORARIES_ARB                               = 0x88A6),
:(const GL_TEXTURE_IMAGE_TYPE                                           = 0x8290),
:(const GL_STATIC_READ_ARB                                              = 0x88E5),
:(const GL_INT_IMAGE_2D_MULTISAMPLE                                     = 0x9060),
:(const GL_RGBA_FLOAT_MODE_ARB                                          = 0x8820),
:(const GL_POST_COLOR_MATRIX_GREEN_SCALE                                = 0x80B5),
:(const GL_INTERNALFORMAT_ALPHA_SIZE                                    = 0x8274),
:(const GL_RENDERBUFFER_BLUE_SIZE                                       = 0x8D52),
:(const GL_SHADER_OBJECT_ARB                                            = 0x8B48),
:(const GL_SHADER_IMAGE_STORE                                           = 0x82A5),
:(const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT                              = 0x00000020),
:(const GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB                          = 0x8809),
:(const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS                      = 0x92CD),
:(const GL_MODELVIEW31_ARB                                              = 0x873F),
:(const GL_STENCIL_ATTACHMENT                                           = 0x8D20),
:(const GL_MATRIX8_ARB                                                  = 0x88C8),
:(const GL_DEPTH24_STENCIL8                                             = 0x88F0),
:(const GL_RG16F                                                        = 0x822F),
:(const GL_OBJECT_ATTACHED_OBJECTS_ARB                                  = 0x8B85),
:(const GL_DEBUG_TYPE_ERROR_ARB                                         = 0x824C),
:(const GL_ALL_SHADER_BITS                                              = 0xFFFFFFFF),
:(const GL_TEXTURE_DEPTH_TYPE_ARB                                       = 0x8C16),
:(const GL_PACK_COMPRESSED_BLOCK_SIZE                                   = 0x912E),
:(const GL_UNIFORM_ARRAY_STRIDE                                         = 0x8A3C),
:(const GL_COLOR_ATTACHMENT5                                            = 0x8CE5),
:(const GL_IMAGE_CLASS_10_10_10_2                                       = 0x82C3),
:(const GL_TEXTURE_BUFFER_OFFSET                                        = 0x919D),
:(const GL_MAX_COLOR_TEXTURE_SAMPLES                                    = 0x910E),
:(const GL_MATRIX26_ARB                                                 = 0x88DA),
:(const GL_IS_PER_PATCH                                                 = 0x92E7),
:(const GL_INTERNALFORMAT_STENCIL_TYPE                                  = 0x827D),
:(const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB                                 = 0x8625),
:(const GL_TRANSPOSE_PROJECTION_MATRIX_ARB                              = 0x84E4),
:(const GL_MAX_TEXTURE_COORDS_ARB                                       = 0x8871),
:(const GL_TEXTURE4_ARB                                                 = 0x84C4),
:(const GL_NUM_SHADER_BINARY_FORMATS                                    = 0x8DF9),
:(const GL_TESS_CONTROL_SHADER                                          = 0x8E88),
:(const GL_MATRIX0_ARB                                                  = 0x88C0),
:(const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS                          = 0x92D0),
:(const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS                           = 0x8264),
:(const GL_FLOAT_VEC2_ARB                                               = 0x8B50),
:(const GL_REPLICATE_BORDER                                             = 0x8153),
:(const GL_TESS_GEN_SPACING                                             = 0x8E77),
:(const GL_SAMPLE_ALPHA_TO_ONE_ARB                                      = 0x809F),
:(const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET                            = 0x8E5B),
:(const GL_IMAGE_CLASS_2_X_8                                            = 0x82C0),
:(const GL_POST_CONVOLUTION_RED_BIAS                                    = 0x8020),
:(const GL_TRANSFORM_FEEDBACK_PAUSED                                    = 0x8E23),
:(const GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB                          = 0x8808),
:(const GL_ARRAY_BUFFER_BINDING_ARB                                     = 0x8894),
:(const GL_MATRIX10_ARB                                                 = 0x88CA),
:(const GL_TEXTURE_GREEN_TYPE                                           = 0x8C11),
:(const GL_FRAMEBUFFER_DEFAULT_WIDTH                                    = 0x9310),
:(const GL_SAMPLER_2D_RECT_SHADOW_ARB                                   = 0x8B64),
:(const GL_ALREADY_SIGNALED                                             = 0x911A),
:(const GL_MATRIX16_ARB                                                 = 0x88D0),
:(const GL_IMAGE_1D                                                     = 0x904C),
:(const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC                             = 0x9279),
:(const GL_TEXTURE30_ARB                                                = 0x84DE),
:(const GL_TEXTURE_SWIZZLE_R                                            = 0x8E42),
:(const GL_BUFFER_MAPPED_ARB                                            = 0x88BC),
:(const GL_COMPRESSED_LUMINANCE_ALPHA_ARB                               = 0x84EB),
:(const GL_DYNAMIC_COPY_ARB                                             = 0x88EA)]
#function bodies
const GL_ARB_FUNCTIONS = [
:(glGetNamedFramebufferParameterivEXT(framebuffer::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttrib4NbvARB(index::GLuint, v::Ptr{GLbyte})::Void),
:(glEnableVertexAttribArrayARB(index::GLuint)::Void),
:(glDrawElementsInstancedBaseVertexBaseInstance(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, instancecount::GLsizei, basevertex::GLint, baseinstance::GLuint)::Void),
:(glBlendFunciARB(buf::GLuint, src::GLenum, dst::GLenum)::Void),
:(glWeightdvARB(size::GLint, weights::Ptr{GLdouble})::Void),
:(glIsProgramPipeline(pipeline::GLuint)::Bool),
:(glVertexAttribL2dv(index::GLuint, v::Ptr{GLdouble})::Void),
:(glVertexAttrib2dvARB(index::GLuint, v::Ptr{GLdouble})::Void),
:(glFramebufferRenderbuffer(target::GLenum, attachment::GLenum, renderbuffertarget::GLenum, renderbuffer::GLuint)::Void),
:(glGetnMapivARB(target::GLenum, query::GLenum, bufSize::GLsizei, v::Ptr{GLint})::Void),
:(glVertexAttrib4sARB(index::GLuint, x::GLshort, y::GLshort, z::GLshort, w::GLshort)::Void),
:(glGenQueriesARB(n::GLsizei, ids::Ptr{GLuint})::Void),
:(glClientWaitSync(sync::GLsync, flags::GLbitfield, timeout::GLuClonglong)::Cint),
:(glCompressedTexImage1DARB(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glVertexAttrib4ubvARB(index::GLuint, v::Ptr{GLubyte})::Void),
:(glBindProgramPipeline(pipeline::GLuint)::Void),
:(glGetAttribLocationARB(programObj::GLhandleARB, name::Ptr{GLcharARB})::Cint),
:(glVertexAttrib3fARB(index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat)::Void),
:(glProvokingVertex(mode::GLenum)::Void),
:(glGetActiveUniformBlockName(program::GLuint, uniformBlockIndex::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, uniformBlockName::Ptr{GLchar})::Void),
:(glCreateShaderObjectARB(shaderType::GLenum)::Cuint),
:(glTexCoordP2ui(type_::GLenum, coords::GLuint)::Void),
:(glWindowPos3svARB(v::Ptr{GLshort})::Void),
:(glVertexAttribL3d(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble)::Void),
:(glInvalidateBufferData(buffer::GLuint)::Void),
:(glPointParameterfvARB(pname::GLenum, params::Ptr{GLfloat})::Void),
:(glWindowPos3dARB(x::GLdouble, y::GLdouble, z::GLdouble)::Void),
:(glGetnHistogramARB(target::GLenum, reset::GLboolean, format::GLenum, type_::GLenum, bufSize::GLsizei, values::Ptr{Void})::Void),
:(glMultiTexCoord1dvARB(target::GLenum, v::Ptr{GLdouble})::Void),
:(glProgramParameteri(program::GLuint, pname::GLenum, value::GLint)::Void),
:(glProgramEnvParameter4dARB(target::GLenum, index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void),
:(glTexStorage3D(target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei)::Void),
:(glTexCoordP3ui(type_::GLenum, coords::GLuint)::Void),
:(glFramebufferParameteri(target::GLenum, pname::GLenum, param::GLint)::Void),
:(glMultiTexCoord2svARB(target::GLenum, v::Ptr{GLshort})::Void),
:(glDeleteSync(sync::GLsync)::Void),
:(glReadnPixelsARB(x::GLint, y::GLint, width::GLsizei, height::GLsizei, format::GLenum, type_::GLenum, bufSize::GLsizei, data::Ptr{Void})::Void),
:(glGenSamplers(count::GLsizei, samplers::Ptr{GLuint})::Void),
:(glVertexAttrib4svARB(index::GLuint, v::Ptr{GLshort})::Void),
:(glLoadTransposeMatrixfARB(m::Ptr{GLfloat})::Void),
:(glInvalidateTexImage(texture::GLuint, level::GLint)::Void),
:(glGetSubroutineIndex(program::GLuint, shadertype::GLenum, name::Ptr{GLchar})::Cuint),
:(glProgramUniformMatrix4fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glVertexAttribL3dv(index::GLuint, v::Ptr{GLdouble})::Void),
:(glGetShaderPrecisionFormat(shadertype::GLenum, precisiontype::GLenum, range_::Ptr{GLint}, precision::Ptr{GLint})::Void),
:(glProgramUniformMatrix2fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glSamplerParameteri(sampler::GLuint, pname::GLenum, param::GLint)::Void),
:(glProgramUniform4iv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glProgramUniform1fv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glGenTransformFeedbacks(n::GLsizei, ids::Ptr{GLuint})::Void),
:(glMultiDrawElementsIndirect(mode::GLenum, type_::GLenum, indirect::Ptr{Void}, drawcount::GLsizei, stride::GLsizei)::Void),
:(glResumeTransformFeedback()::Void),
:(glProgramUniform3uiv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glDrawElementsInstancedBaseInstance(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, instancecount::GLsizei, baseinstance::GLuint)::Void),
:(glMultiDrawElementsBaseVertex(mode::GLenum, count::Ptr{GLsizei}, type_::GLenum, indices::Ptr{Ptr{Void}}, drawcount::GLsizei, basevertex::Ptr{GLint})::Void),
:(glVertexArrayVertexAttribBindingEXT(vaobj::GLuint, attribindex::GLuint, bindingindex::GLuint)::Void),
:(glGenRenderbuffers(n::GLsizei, renderbuffers::Ptr{GLuint})::Void),
:(glDrawTransformFeedback(mode::GLenum, id::GLuint)::Void),
:(glVertexAttrib1dvARB(index::GLuint, v::Ptr{GLdouble})::Void),
:(glMinSampleShadingARB(value::GLfloat)::Void),
:(glDisableVertexAttribArrayARB(index::GLuint)::Void),
:(glBufferDataARB(target::GLenum, size::GLsizeiptrARB, data::Ptr{Void}, usage::GLenum)::Void),
:(glUniform3fvARB(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glUniform1d(location::GLint, x::GLdouble)::Void),
:(glProgramUniform4dv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glProgramUniformMatrix2x3dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glFlushMappedBufferRange(target::GLenum, offset::GLintptr, length::GLsizeiptr)::Void),
:(glUniformMatrix2x4dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glGetUniformdv(program::GLuint, location::GLint, params::Ptr{GLdouble})::Void),
:(glVertexAttrib1svARB(index::GLuint, v::Ptr{GLshort})::Void),
:(glProgramUniformMatrix2x3fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glUniform4fARB(location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat, v3::GLfloat)::Void),
:(glBindTransformFeedback(target::GLenum, id::GLuint)::Void),
:(glVertexAttrib3sARB(index::GLuint, x::GLshort, y::GLshort, z::GLshort)::Void),
:(glWindowPos2fARB(x::GLfloat, y::GLfloat)::Void),
:(glGetActiveUniformsiv(program::GLuint, uniformCount::GLsizei, uniformIndices::Ptr{GLuint}, pname::GLenum, params::Ptr{GLint})::Void),
:(glEndQueryARB(target::GLenum)::Void),
:(glDrawElementsIndirect(mode::GLenum, type_::GLenum, indirect::Ptr{Void})::Void),
:(glDeleteProgramsARB(n::GLsizei, programs::Ptr{GLuint})::Void),
:(glGetProgramInterfaceiv(program::GLuint, programInterface::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glWeightsvARB(size::GLint, weights::Ptr{GLshort})::Void),
:(glMultiDrawArraysIndirect(mode::GLenum, indirect::Ptr{Void}, drawcount::GLsizei, stride::GLsizei)::Void),
:(glWeightfvARB(size::GLint, weights::Ptr{GLfloat})::Void),
:(glGetHandleARB(pname::GLenum)::Cuint),
:(glUniformMatrix3dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glClientActiveTextureARB(texture::GLenum)::Void),
:(glVertexAttrib1sARB(index::GLuint, x::GLshort)::Void),
:(glGetSamplerParameterIiv(sampler::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glRenderbufferStorageMultisample(target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glVertexAttribL4d(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void),
:(glProgramEnvParameter4fvARB(target::GLenum, index::GLuint, params::Ptr{GLfloat})::Void),
:(glUseProgramStages(pipeline::GLuint, stages::GLbitfield, program::GLuint)::Void),
:(glReleaseShaderCompiler()::Void),
:(glBindFramebuffer(target::GLenum, framebuffer::GLuint)::Void),
:(glGetnUniformivARB(program::GLuint, location::GLint, bufSize::GLsizei, params::Ptr{GLint})::Void),
:(glGetQueryObjectui64v(id::GLuint, pname::GLenum, params::Ptr{GLuint64})::Void),
:(glFramebufferTexture3D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint, zoffset::GLint)::Void),
:(glMatrixIndexuivARB(size::GLint, indices::Ptr{GLuint})::Void),
:(glVertexAttribLFormat(attribindex::GLuint, size::GLint, type_::GLenum, relativeoffset::GLuint)::Void),
:(glVertexArrayVertexAttribFormatEXT(vaobj::GLuint, attribindex::GLuint, size::GLint, type_::GLenum, normalized::GLboolean, relativeoffset::GLuint)::Void),
:(glBindFragDataLocationIndexed(program::GLuint, colorNumber::GLuint, index::GLuint, name::Ptr{GLchar})::Void),
:(glDrawElementsBaseVertex(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, basevertex::GLint)::Void),
:(glMultiTexCoordP4ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glDebugMessageControlARB(source::GLenum, type_::GLenum, severity::GLenum, count::GLsizei, ids::Ptr{GLuint}, enabled::GLboolean)::Void),
:(glProgramUniform1i(program::GLuint, location::GLint, v0::GLint)::Void),
:(glVertexArrayBindVertexBufferEXT(vaobj::GLuint, bindingindex::GLuint, buffer::GLuint, offset::GLintptr, stride::GLsizei)::Void),
:(glVertexAttribP4ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glGetVertexAttribLdv(index::GLuint, pname::GLenum, params::Ptr{GLdouble})::Void),
:(glGetFramebufferParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glUniformMatrix4dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glMultiTexCoord4dvARB(target::GLenum, v::Ptr{GLdouble})::Void),
:(glProgramUniformMatrix4x3dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glProgramUniformMatrix3x4fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glClearDepthf(d::GLfloat)::Void),
:(glSamplerParameterIuiv(sampler::GLuint, pname::GLenum, param::Ptr{GLuint})::Void),
:(glMultiTexCoord4iARB(target::GLenum, s::GLint, t::GLint, r::GLint, q::GLint)::Void),
:(glDeleteProgramPipelines(n::GLsizei, pipelines::Ptr{GLuint})::Void),
:(glProgramUniform2fv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glProgramUniformMatrix4x2dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glGetUniformivARB(programObj::GLhandleARB, location::GLint, params::Ptr{GLint})::Void),
:(glVertexAttribBinding(attribindex::GLuint, bindingindex::GLuint)::Void),
:(glProgramUniform1iv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glBlendEquationiARB(buf::GLuint, mode::GLenum)::Void),
:(glDrawElementsInstancedBaseVertex(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, instancecount::GLsizei, basevertex::GLint)::Void),
:(glClearNamedBufferDataEXT(buffer::GLuint, internalformat::GLenum, format::GLenum, type_::GLenum, data::Ptr{Void})::Void),
:(glGenBuffersARB(n::GLsizei, buffers::Ptr{GLuint})::Void),
:(glWindowPos2sARB(x::GLshort, y::GLshort)::Void),
:(glWindowPos3ivARB(v::Ptr{GLint})::Void),
:(glVertexAttrib4NubvARB(index::GLuint, v::Ptr{GLubyte})::Void),
:(glUniform3dv(location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glProgramUniform2iv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glUniform4iARB(location::GLint, v0::GLint, v1::GLint, v2::GLint, v3::GLint)::Void),
:(glProgramLocalParameter4fARB(target::GLenum, index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void),
:(glProgramUniform4fv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glVertexAttrib2dARB(index::GLuint, x::GLdouble, y::GLdouble)::Void),
:(glDrawTransformFeedbackInstanced(mode::GLenum, id::GLuint, instancecount::GLsizei)::Void),
:(glNormalP3ui(type_::GLenum, coords::GLuint)::Void),
:(glGetnUniformuivARB(program::GLuint, location::GLint, bufSize::GLsizei, params::Ptr{GLuint})::Void),
:(glVertexP3ui(type_::GLenum, value::GLuint)::Void),
:(glGetVertexAttribdvARB(index::GLuint, pname::GLenum, params::Ptr{GLdouble})::Void),
:(glProgramStringARB(target::GLenum, format::GLenum, len::GLsizei, string_::Ptr{Void})::Void),
:(glCompileShaderARB(shaderObj::GLhandleARB)::Void),
:(glUniformMatrix2dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glGenerateMipmap(target::GLenum)::Void),
:(glScissorArrayv(first::GLuint, count::GLsizei, v::Ptr{GLint})::Void),
:(glProgramUniform2dv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glUniform4d(location::GLint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void),
:(glProgramUniform3ui(program::GLuint, location::GLint, v0::GLuint, v1::GLuint, v2::GLuint)::Void),
:(glDeleteRenderbuffers(n::GLsizei, renderbuffers::Ptr{GLuint})::Void),
:(glGetBufferParameterivARB(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glProgramLocalParameter4dvARB(target::GLenum, index::GLuint, params::Ptr{GLdouble})::Void),
:(glMultiTexCoord4fARB(target::GLenum, s::GLfloat, t::GLfloat, r::GLfloat, q::GLfloat)::Void),
:(glGetProgramPipelineInfoLog(pipeline::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, infoLog::Ptr{GLchar})::Void),
:(glVertexAttribP1ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glVertexAttrib2fvARB(index::GLuint, v::Ptr{GLfloat})::Void),
:(glMultiTexCoord2ivARB(target::GLenum, v::Ptr{GLint})::Void),
:(glWeightusvARB(size::GLint, weights::Ptr{GLushort})::Void),
:(glDebugMessageCallbackARB((*[0]byte)(callback), userParam::Ptr{Void})::Void),
:(glVertexAttribDivisorARB(index::GLuint, divisor::GLuint)::Void),
:(glUniform2iARB(location::GLint, v0::GLint, v1::GLint)::Void),
:(glUniformSubroutinesuiv(shadertype::GLenum, count::GLsizei, indices::Ptr{GLuint})::Void),
:(glWaitSync(sync::GLsync, flags::GLbitfield, timeout::GLuint64)::Void),
:(glGetProgramLocalParameterdvARB(target::GLenum, index::GLuint, params::Ptr{GLdouble})::Void),
:(glGetnPixelMapuivARB(map_::GLenum, bufSize::GLsizei, values::Ptr{GLuint})::Void),
:(glGetVertexAttribPointervARB(index::GLuint, pname::GLenum, pointer::Ptr{Ptr{Void}})::Void),
:(glMultiTexCoordP1ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glWindowPos3dvARB(v::Ptr{GLdouble})::Void),
:(glGetUniformBlockIndex(program::GLuint, uniformBlockName::Ptr{GLchar})::Cuint),
:(glTextureView(texture::GLuint, target::GLenum, origtexture::GLuint, internalformat::GLenum, minlevel::GLuint, numlevels::GLuint, minlayer::GLuint, numlayers::GLuint)::Void),
:(glMultiTexCoord2fvARB(target::GLenum, v::Ptr{GLfloat})::Void),
:(glInvalidateFramebuffer(target::GLenum, numAttachments::GLsizei, attachments::Ptr{GLenum})::Void),
:(glGetnUniformdvARB(program::GLuint, location::GLint, bufSize::GLsizei, params::Ptr{GLdouble})::Void),
:(glTextureStorage3DMultisampleEXT(texture::GLuint, target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glGetnConvolutionFilterARB(target::GLenum, format::GLenum, type_::GLenum, bufSize::GLsizei, image::Ptr{Void})::Void),
:(glIsVertexArray(array::GLuint)::Bool),
:(glPatchParameteri(pname::GLenum, value::GLint)::Void),
:(glGetnPixelMapusvARB(map_::GLenum, bufSize::GLsizei, values::Ptr{GLushort})::Void),
:(glVertexAttrib1fARB(index::GLuint, x::GLfloat)::Void),
:(glVertexAttrib4fARB(index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void),
:(glProgramUniform4uiv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glVertexAttrib4usvARB(index::GLuint, v::Ptr{GLushort})::Void),
:(glVertexAttribPointerARB(index::GLuint, size::GLint, type_::GLenum, normalized::GLboolean, stride::GLsizei, pointer::Ptr{Void})::Void),
:(glBeginQueryARB(target::GLenum, id::GLuint)::Void),
:(glGetActiveAttribARB(programObj::GLhandleARB, index::GLuint, maxLength::GLsizei, length::Ptr{GLsizei}, size::Ptr{GLint}, type_::Ptr{GLenum}, name::Ptr{GLcharARB})::Void),
:(glAttachObjectARB(containerObj::GLhandleARB, obj::GLhandleARB)::Void),
:(glVertexAttribP2ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glVertexAttribP2uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glProgramBinary(program::GLuint, binaryFormat::GLenum, binary::Ptr{Void}, length::GLsizei)::Void),
:(glGenVertexArrays(n::GLsizei, arrays::Ptr{GLuint})::Void),
:(glSecondaryColorP3uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glGetInternalformativ(target::GLenum, internalformat::GLenum, pname::GLenum, bufSize::GLsizei, params::Ptr{GLint})::Void),
:(glCopyImageSubData(srcName::GLuint, srcTarget::GLenum, srcLevel::GLint, srcX::GLint, srcY::GLint, srcZ::GLint, dstName::GLuint, dstTarget::GLenum, dstLevel::GLint, dstX::GLint, dstY::GLint, dstZ::GLint, srcWidth::GLsizei, srcHeight::GLsizei, srcDepth::GLsizei)::Void),
:(glMultiTexCoord4fvARB(target::GLenum, v::Ptr{GLfloat})::Void),
:(glProgramUniform2f(program::GLuint, location::GLint, v0::GLfloat, v1::GLfloat)::Void),
:(glProgramUniform2uiv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glQueryCounter(id::GLuint, target::GLenum)::Void),
:(glNormalP3uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glTexStorage3DMultisample(target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glTexStorage2D(target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glDrawArraysIndirect(mode::GLenum, indirect::Ptr{Void})::Void),
:(glUniform1fvARB(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glTexCoordP2uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glDrawElementsInstancedARB(mode::GLenum, count::GLsizei, type_::GLenum, indices::Ptr{Void}, primcount::GLsizei)::Void),
:(glWindowPos3sARB(x::GLshort, y::GLshort, z::GLshort)::Void),
:(glProgramUniformMatrix4x3fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glProgramUniform4f(program::GLuint, location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat, v3::GLfloat)::Void),
:(glVertexAttrib2fARB(index::GLuint, x::GLfloat, y::GLfloat)::Void),
:(glDrawRangeElementsBaseVertex(mode::GLenum, start::GLuint, END::GLuint, count::GLsizei, type_::GLenum, indices::Ptr{Void}, basevertex::GLint)::Void),
:(glGetInfoLogARB(obj::GLhandleARB, maxLength::GLsizei, length::Ptr{GLsizei}, infoLog::Ptr{GLcharARB})::Void),
:(glGetShaderSourceARB(obj::GLhandleARB, maxLength::GLsizei, length::Ptr{GLsizei}, source::Ptr{GLcharARB})::Void),
:(glMultTransposeMatrixfARB(m::Ptr{GLfloat})::Void),
:(glGenProgramPipelines(n::GLsizei, pipelines::Ptr{GLuint})::Void),
:(glClearNamedBufferSubDataEXT(buffer::GLuint, internalformat::GLenum, offset::GLsizeiptr, size::GLsizeiptr, format::GLenum, type_::GLenum, data::Ptr{Void})::Void),
:(glProgramUniform3i(program::GLuint, location::GLint, v0::GLint, v1::GLint, v2::GLint)::Void),
:(glMultiTexCoord3svARB(target::GLenum, v::Ptr{GLshort})::Void),
:(glMultiTexCoord3ivARB(target::GLenum, v::Ptr{GLint})::Void),
:(glWeightPointerARB(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void),
:(glGetUniformfvARB(programObj::GLhandleARB, location::GLint, params::Ptr{GLfloat})::Void),
:(glCompressedTexSubImage3DARB(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, zoffset::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glGetProgramEnvParameterdvARB(target::GLenum, index::GLuint, params::Ptr{GLdouble})::Void),
:(glIsProgramARB(program::GLuint)::Bool),
:(glDrawArraysInstancedARB(mode::GLenum, first::GLint, count::GLsizei, primcount::GLsizei)::Void),
:(glWeightubvARB(size::GLint, weights::Ptr{GLubyte})::Void),
:(glGetnCompressedTexImageARB(target::GLenum, lod::GLint, bufSize::GLsizei, img::Ptr{Void})::Void),
:(glMatrixIndexusvARB(size::GLint, indices::Ptr{GLushort})::Void),
:(glActiveShaderProgram(pipeline::GLuint, program::GLuint)::Void),
:(glProgramUniformMatrix2dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glProgramUniformMatrix4dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glGetInteger64v(pname::GLenum, params::Ptr{GLint64})::Void),
:(glVertexAttrib4fvARB(index::GLuint, v::Ptr{GLfloat})::Void),
:(glMultiTexCoord4svARB(target::GLenum, v::Ptr{GLshort})::Void),
:(glGenProgramsARB(n::GLsizei, programs::Ptr{GLuint})::Void),
:(glGetObjectParameterfvARB(obj::GLhandleARB, pname::GLenum, params::Ptr{GLfloat})::Void),
:(glMultiTexCoord2iARB(target::GLenum, s::GLint, t::GLint)::Void),
:(glShaderBinary(count::GLsizei, shaders::Ptr{GLuint}, binaryformat::GLenum, binary::Ptr{Void}, length::GLsizei)::Void),
:(glMultiTexCoord1sARB(target::GLenum, s::GLshort)::Void),
:(glProgramUniformMatrix3x2dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glMultiTexCoord3fARB(target::GLenum, s::GLfloat, t::GLfloat, r::GLfloat)::Void),
:(glMultiTexCoord1dARB(target::GLenum, s::GLdouble)::Void),
:(glMultiTexCoord1svARB(target::GLenum, v::Ptr{GLshort})::Void),
:(glBlendFuncSeparateiARB(buf::GLuint, srcRGB::GLenum, dstRGB::GLenum, srcAlpha::GLenum, dstAlpha::GLenum)::Void),
:(glActiveTextureARB(texture::GLenum)::Void),
:(glGetProgramLocalParameterfvARB(target::GLenum, index::GLuint, params::Ptr{GLfloat})::Void),
:(glGetActiveSubroutineUniformiv(program::GLuint, shadertype::GLenum, index::GLuint, pname::GLenum, values::Ptr{GLint})::Void),
:(glTexBufferRange(target::GLenum, internalformat::GLenum, buffer::GLuint, offset::GLintptr, size::GLsizeiptr)::Void),
:(glPauseTransformFeedback()::Void),
:(glMultiTexCoord1iARB(target::GLenum, s::GLint)::Void),
:(glClearBufferSubData(target::GLenum, internalformat::GLenum, offset::GLintptr, size::GLsizeiptr, format::GLenum, type_::GLenum, data::Ptr{Void})::Void),
:(glMultiTexCoord3dvARB(target::GLenum, v::Ptr{GLdouble})::Void),
:(glBindAttribLocationARB(programObj::GLhandleARB, index::GLuint, name::Ptr{GLcharARB})::Void),
:(glGetSamplerParameteriv(sampler::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glCompressedTexSubImage1DARB(target::GLenum, level::GLint, xoffset::GLint, width::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glVertexAttrib1dARB(index::GLuint, x::GLdouble)::Void),
:(glProgramUniform3d(program::GLuint, location::GLint, v0::GLdouble, v1::GLdouble, v2::GLdouble)::Void),
:(glVertexAttribP4uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glFramebufferTexture1D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint)::Void),
:(glVertexArrayVertexBindingDivisorEXT(vaobj::GLuint, bindingindex::GLuint, divisor::GLuint)::Void),
:(glVertexArrayVertexAttribIFormatEXT(vaobj::GLuint, attribindex::GLuint, size::GLint, type_::GLenum, relativeoffset::GLuint)::Void),
:(glVertexAttrib4dvARB(index::GLuint, v::Ptr{GLdouble})::Void),
:(glProgramUniform1dv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glProgramUniform1uiv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLuint})::Void),
:(glGetActiveSubroutineUniformName(program::GLuint, shadertype::GLenum, index::GLuint, bufsize::GLsizei, length::Ptr{GLsizei}, name::Ptr{GLchar})::Void),
:(glUniform2ivARB(location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glGetVertexAttribfvARB(index::GLuint, pname::GLenum, params::Ptr{GLfloat})::Void),
:(glProgramUniform2ui(program::GLuint, location::GLint, v0::GLuint, v1::GLuint)::Void),
:(glGenFramebuffers(n::GLsizei, framebuffers::Ptr{GLuint})::Void),
:(glGetnMapdvARB(target::GLenum, query::GLenum, bufSize::GLsizei, v::Ptr{GLdouble})::Void),
:(glWeightivARB(size::GLint, weights::Ptr{GLint})::Void),
:(glFramebufferTextureLayer(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint, layer::GLint)::Void),
:(glScissorIndexedv(index::GLuint, v::Ptr{GLint})::Void),
:(glSecondaryColorP3ui(type_::GLenum, color::GLuint)::Void),
:(glMultiTexCoord2dARB(target::GLenum, s::GLdouble, t::GLdouble)::Void),
:(glProgramUniformMatrix3dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glVertexAttrib3fvARB(index::GLuint, v::Ptr{GLfloat})::Void),
:(glViewportArrayv(first::GLuint, count::GLsizei, v::Ptr{GLfloat})::Void),
:(glDrawArraysInstancedBaseInstance(mode::GLenum, first::GLint, count::GLsizei, instancecount::GLsizei, baseinstance::GLuint)::Void),
:(glShaderSourceARB(shaderObj::GLhandleARB, count::GLsizei, (**C.GLcharARB)(unsafe.Pointer(string_)), length::Ptr{GLint})::Void),
:(glVertexAttrib2svARB(index::GLuint, v::Ptr{GLshort})::Void),
:(glGetActiveAtomicCounterBufferiv(program::GLuint, bufferIndex::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetFramebufferAttachmentParameteriv(target::GLenum, attachment::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttribLPointer(index::GLuint, size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void),
:(glVertexAttrib4NubARB(index::GLuint, x::GLubyte, y::GLubyte, z::GLubyte, w::GLubyte)::Void),
:(glVertexAttrib4NusvARB(index::GLuint, v::Ptr{GLushort})::Void),
:(glProgramUniform3dv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glGetnPixelMapfvARB(map_::GLenum, bufSize::GLsizei, values::Ptr{GLfloat})::Void),
:(glGetActiveUniformBlockiv(program::GLuint, uniformBlockIndex::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetProgramResourceIndex(program::GLuint, programCinterface::GLenum, name::Ptr{GLchar})::Cuint),
:(glGetObjectParameterivARB(obj::GLhandleARB, pname::GLenum, params::Ptr{GLint})::Void),
:(glBlitFramebuffer(srcX0::GLint, srcY0::GLint, srcX1::GLint, srcY1::GLint, dstX0::GLint, dstY0::GLint, dstX1::GLint, dstY1::GLint, mask::GLbitfield, filter::GLenum)::Void),
:(glVertexAttrib4ivARB(index::GLuint, v::Ptr{GLint})::Void),
:(glUniformMatrix4x3dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glVertexAttrib4dARB(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void),
:(glBlendEquationSeparateiARB(buf::GLuint, modeRGB::GLenum, modeAlpha::GLenum)::Void),
:(glIsSampler(sampler::GLuint)::Bool),
:(glProgramUniformMatrix3x4dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glCheckFramebufferStatus(target::GLenum)::Cint),
:(glMultiTexCoord3fvARB(target::GLenum, v::Ptr{GLfloat})::Void),
:(glUniformBlockBinding(program::GLuint, uniformBlockIndex::GLuint, uniformBlockBinding::GLuint)::Void),
:(glGetnTexImageARB(target::GLenum, level::GLint, format::GLenum, type_::GLenum, bufSize::GLsizei, img::Ptr{Void})::Void),
:(glEndQueryIndexed(target::GLenum, index::GLuint)::Void),
:(glCompressedTexSubImage2DARB(target::GLenum, level::GLint, xoffset::GLint, yoffset::GLint, width::GLsizei, height::GLsizei, format::GLenum, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glTexStorage2DMultisample(target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glGetnPolygonStippleARB(bufSize::GLsizei, pattern::Ptr{GLubyte})::Void),
:(glGetSynciv(sync::GLsync, pname::GLenum, bufSize::GLsizei, length::Ptr{GLsizei}, values::Ptr{GLint})::Void),
:(glVertexAttribP3ui(index::GLuint, type_::GLenum, normalized::GLboolean, value::GLuint)::Void),
:(glFenceSync(condition::GLenum, flags::GLbitfield)::Sync),
:(glSamplerParameterfv(sampler::GLuint, pname::GLenum, param::Ptr{GLfloat})::Void),
:(glProgramUniformMatrix3fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glTextureBufferRangeEXT(texture::GLuint, target::GLenum, internalformat::GLenum, buffer::GLuint, offset::GLintptr, size::GLsizeiptr)::Void),
:(glBindVertexBuffer(bindingindex::GLuint, buffer::GLuint, offset::GLintptr, stride::GLsizei)::Void),
:(glInvalidateSubFramebuffer(target::GLenum, numAttachments::GLsizei, attachments::Ptr{GLenum}, x::GLint, y::GLint, width::GLsizei, height::GLsizei)::Void),
:(glProgramUniform3f(program::GLuint, location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat)::Void),
:(glClearBufferData(target::GLenum, internalformat::GLenum, format::GLenum, type_::GLenum, data::Ptr{Void})::Void),
:(glGetActiveUniformARB(programObj::GLhandleARB, index::GLuint, maxLength::GLsizei, length::Ptr{GLsizei}, size::Ptr{GLint}, type_::Ptr{GLenum}, name::Ptr{GLcharARB})::Void),
:(glGetBufferSubDataARB(target::GLenum, offset::GLintptrARB, size::GLsizeiptrARB, data::Ptr{Void})::Void),
:(glMatrixIndexubvARB(size::GLint, indices::Ptr{GLubyte})::Void),
:(glDeleteTransformFeedbacks(n::GLsizei, ids::Ptr{GLuint})::Void),
:(glMapBufferRange(target::GLenum, offset::GLintptr, length::GLsizeiptr, access::GLbitfield)::Ptr{Void}),
:(glUniformMatrix4fvARB(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glPatchParameterfv(pname::GLenum, values::Ptr{GLfloat})::Void),
:(glProgramUniform4d(program::GLuint, location::GLint, v0::GLdouble, v1::GLdouble, v2::GLdouble, v3::GLdouble)::Void),
:(glGetActiveUniformName(program::GLuint, uniformIndex::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, uniformName::Ptr{GLchar})::Void),
:(glTexCoordP4uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glWindowPos2iARB(x::GLint, y::GLint)::Void),
:(glVertexAttrib3dARB(index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble)::Void),
:(glDepthRangeArrayv(first::GLuint, count::GLsizei, v::Ptr{GLdouble})::Void),
:(glNamedStringARB(type_::GLenum, namelen::GLint, name::Ptr{GLchar}, stringlen::GLint, string_::Ptr{GLchar})::Void),
:(glBindVertexArray(array::GLuint)::Void),
:(glSamplerParameteriv(sampler::GLuint, pname::GLenum, param::Ptr{GLint})::Void),
:(glProgramUniformMatrix4x2fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glGetInternalformati64v(target::GLenum, internalformat::GLenum, pname::GLenum, bufSize::GLsizei, params::Ptr{GLint64})::Void),
:(glTextureStorage2DMultisampleEXT(texture::GLuint, target::GLenum, samples::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glGetSamplerParameterfv(sampler::GLuint, pname::GLenum, params::Ptr{GLfloat})::Void),
:(glScissorIndexed(index::GLuint, left::GLint, bottom::GLint, width::GLsizei, height::GLsizei)::Void),
:(glMatrixIndexPointerARB(size::GLint, type_::GLenum, stride::GLsizei, pointer::Ptr{Void})::Void),
:(glMultiTexCoord1fvARB(target::GLenum, v::Ptr{GLfloat})::Void),
:(glVertexP4uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glUniformMatrix3fvARB(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glIsTransformFeedback(id::GLuint)::Bool),
:(glMultiTexCoordP1uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glMultiTexCoord1fARB(target::GLenum, s::GLfloat)::Void),
:(glMultiTexCoord3sARB(target::GLenum, s::GLshort, t::GLshort, r::GLshort)::Void),
:(glBeginQueryIndexed(target::GLenum, index::GLuint, id::GLuint)::Void),
:(glGetnColorTableARB(target::GLenum, format::GLenum, type_::GLenum, bufSize::GLsizei, table::Ptr{Void})::Void),
:(glValidateProgramPipeline(pipeline::GLuint)::Void),
:(glSamplerParameterIiv(sampler::GLuint, pname::GLenum, param::Ptr{GLint})::Void),
:(glProgramEnvParameter4fARB(target::GLenum, index::GLuint, x::GLfloat, y::GLfloat, z::GLfloat, w::GLfloat)::Void),
:(glMultTransposeMatrixdARB(m::Ptr{GLdouble})::Void),
:(glProgramUniform2i(program::GLuint, location::GLint, v0::GLint, v1::GLint)::Void),
:(glUniform4dv(location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glUniform3ivARB(location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glGetProgramResourceiv(program::GLuint, programInterface::GLenum, index::GLuint, propCount::GLsizei, props::Ptr{GLenum}, bufSize::GLsizei, length::Ptr{GLsizei}, params::Ptr{GLint})::Void),
:(glGetQueryivARB(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glProgramParameteriARB(program::GLuint, pname::GLenum, value::GLint)::Void),
:(glMultiTexCoordP2uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glVertexAttrib4uivARB(index::GLuint, v::Ptr{GLuint})::Void),
:(glDrawBuffersARB(n::GLsizei, bufs::Ptr{GLenum})::Void),
:(glTexCoordP1uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glSampleMaski(index::GLuint, mask::GLbitfield)::Void),
:(glFramebufferTexture2D(target::GLenum, attachment::GLenum, textarget::GLenum, texture::GLuint, level::GLint)::Void),
:(glGetSubroutineUniformLocation(program::GLuint, shadertype::GLenum, name::Ptr{GLchar})::Cint),
:(glProgramUniform1f(program::GLuint, location::GLint, v0::GLfloat)::Void),
:(glVertexAttrib3svARB(index::GLuint, v::Ptr{GLshort})::Void),
:(glDeleteObjectARB(obj::GLhandleARB)::Void),
:(glProgramUniform4ui(program::GLuint, location::GLint, v0::GLuint, v1::GLuint, v2::GLuint, v3::GLuint)::Void),
:(glMultiTexCoord3iARB(target::GLenum, s::GLint, t::GLint, r::GLint)::Void),
:(glCompileShaderIncludeARB(shader::GLuint, count::GLsizei, path::Ptr{Uint8}, length::Ptr{GLint})::Void),
:(glMultiTexCoord2dvARB(target::GLenum, v::Ptr{GLdouble})::Void),
:(glProgramUniform2d(program::GLuint, location::GLint, v0::GLdouble, v1::GLdouble)::Void),
:(glVertexAttribP3uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glPointParameterfARB(pname::GLenum, param::GLfloat)::Void),
:(glProgramUniform3iv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glIsSync(sync::GLsync)::Bool),
:(glUniformMatrix2x3dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glBindProgramARB(target::GLenum, program::GLuint)::Void),
:(glWindowPos2dvARB(v::Ptr{GLdouble})::Void),
:(glGetProgramivARB(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glVertexAttrib4bvARB(index::GLuint, v::Ptr{GLbyte})::Void),
:(glWindowPos2fvARB(v::Ptr{GLfloat})::Void),
:(glDeleteFramebuffers(n::GLsizei, framebuffers::Ptr{GLuint})::Void),
:(glUniformMatrix4x2dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glMultiTexCoord2sARB(target::GLenum, s::GLshort, t::GLshort)::Void),
:(glGetGraphicsResetStatusARB()::Cint),
:(glVertexAttrib4NsvARB(index::GLuint, v::Ptr{GLshort})::Void),
:(glInvalidateBufferSubData(buffer::GLuint, offset::GLintptr, length::GLsizeiptr)::Void),
:(glMapBufferARB(target::GLenum, access::GLenum)::Ptr{Void}),
:(glGetVertexAttribivARB(index::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glUniform3iARB(location::GLint, v0::GLint, v1::GLint, v2::GLint)::Void),
:(glTexImage3DMultisample(target::GLenum, samples::GLsizei, internalformat::GLint, width::GLsizei, height::GLsizei, depth::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glUniform1fARB(location::GLint, v0::GLfloat)::Void),
:(glGetUniformSubroutineuiv(shadertype::GLenum, location::GLint, params::Ptr{GLuint})::Void),
:(glVertexAttribL1d(index::GLuint, x::GLdouble)::Void),
:(glGetDebugMessageLogARB(count::GLuint, bufsize::GLsizei, sources::Ptr{GLenum}, types::Ptr{GLenum}, ids::Ptr{GLuint}, severities::Ptr{GLenum}, lengths::Ptr{GLsizei}, messageLog::Ptr{GLchar})::Cuint),
:(glUniform2fARB(location::GLint, v0::GLfloat, v1::GLfloat)::Void),
:(glUniformMatrix2fvARB(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glTextureStorage3DEXT(texture::GLuint, target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei)::Void),
:(glUniformMatrix3x2dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glTexCoordP4ui(type_::GLenum, coords::GLuint)::Void),
:(glUniform3d(location::GLint, x::GLdouble, y::GLdouble, z::GLdouble)::Void),
:(glBindBufferARB(target::GLenum, buffer::GLuint)::Void),
:(glCopyBufferSubData(readTarget::GLenum, writeTarget::GLenum, readOffset::GLintptr, writeOffset::GLintptr, size::GLsizeiptr)::Void),
:(glVertexAttrib3dvARB(index::GLuint, v::Ptr{GLdouble})::Void),
:(glSamplerParameterf(sampler::GLuint, pname::GLenum, param::GLfloat)::Void),
:(glUnmapBufferARB(target::GLenum)::Bool),
:(glDepthRangeIndexed(index::GLuint, n::GLdouble, f::GLdouble)::Void),
:(glTextureStorage1DEXT(texture::GLuint, target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei)::Void),
:(glGetProgramBinary(program::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, binaryFormat::Ptr{GLenum}, binary::Ptr{Void})::Void),
:(glGetNamedStringivARB(namelen::GLint, name::Ptr{GLchar}, pname::GLenum, params::Ptr{GLint})::Void),
:(glWeightbvARB(size::GLint, weights::Ptr{GLbyte})::Void),
:(glTexCoordP3uiv(type_::GLenum, coords::Ptr{GLuint})::Void),
:(glVertexAttribL1dv(index::GLuint, v::Ptr{GLdouble})::Void),
:(glClampColorARB(target::GLenum, clamp::GLenum)::Void),
:(glSampleCoverageARB(value::GLfloat, invert::GLboolean)::Void),
:(glGetnSeparableFilterARB(target::GLenum, format::GLenum, type_::GLenum, rowBufSize::GLsizei, row::Ptr{Void}, columnBufSize::GLsizei, column::Ptr{Void}, span::Ptr{Void})::Void),
:(glUniform1iARB(location::GLint, v0::GLint)::Void),
:(glMultiTexCoordP3ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glLoadTransposeMatrixdARB(m::Ptr{GLdouble})::Void),
:(glWindowPos3iARB(x::GLint, y::GLint, z::GLint)::Void),
:(glGetRenderbufferParameteriv(target::GLenum, pname::GLenum, params::Ptr{GLint})::Void),
:(glWindowPos3fARB(x::GLfloat, y::GLfloat, z::GLfloat)::Void),
:(glGetActiveSubroutineName(program::GLuint, shadertype::GLenum, index::GLuint, bufsize::GLsizei, length::Ptr{GLsizei}, name::Ptr{GLchar})::Void),
:(glProgramLocalParameter4fvARB(target::GLenum, index::GLuint, params::Ptr{GLfloat})::Void),
:(glColorP3ui(type_::GLenum, color::GLuint)::Void),
:(glCreateShaderProgramv(type_::GLenum, count::GLsizei, strings::Ptr{Cuint8})::Uint),
:(glWindowPos2svARB(v::Ptr{GLshort})::Void),
:(glProgramUniformMatrix2x4dv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glUniform4fvARB(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glNamedFramebufferParameteriEXT(framebuffer::GLuint, pname::GLenum, param::GLint)::Void),
:(glVertexP2ui(type_::GLenum, value::GLuint)::Void),
:(glGetnUniformfvARB(program::GLuint, location::GLint, bufSize::GLsizei, params::Ptr{GLfloat})::Void),
:(glUniform4ivARB(location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glCreateSyncFromCLeventARB((*[0]byte)(context), (*[0]byte)(event), flags::GLbitfield)::Sync),
:(glVertexBlendARB(count::GLint)::Void),
:(glGetCompressedTexImageARB(target::GLenum, level::GLint, img::Ptr{Void})::Void),
:(glGetProgramStringARB(target::GLenum, pname::GLenum, string_::Ptr{Void})::Void),
:(glUniform1ivARB(location::GLint, count::GLsizei, value::Ptr{GLint})::Void),
:(glTextureStorage2DEXT(texture::GLuint, target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glGetQueryObjecti64v(id::GLuint, pname::GLenum, params::Ptr{GLint64})::Void),
:(glGetnMapfvARB(target::GLenum, query::GLenum, bufSize::GLsizei, v::Ptr{GLfloat})::Void),
:(glMemoryBarrier(barriers::GLbitfield)::Void),
:(glCreateProgramObjectARB()::Cuint),
:(glDrawTransformFeedbackStream(mode::GLenum, id::GLuint, stream::GLuint)::Void),
:(glIsNamedStringARB(namelen::GLint, name::Ptr{GLchar})::Bool),
:(glProgramEnvParameter4dvARB(target::GLenum, index::GLuint, params::Ptr{GLdouble})::Void),
:(glGetDoublei_v(target::GLenum, index::GLuint, data::Ptr{GLdouble})::Void),
:(glGetQueryObjectivARB(id::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glGetMultisamplefv(pname::GLenum, index::GLuint, val::Ptr{GLfloat})::Void),
:(glValidateProgramARB(programObj::GLhandleARB)::Void),
:(glVertexAttrib4NuivARB(index::GLuint, v::Ptr{GLuint})::Void),
:(glDebugMessageInsertARB(source::GLenum, type_::GLenum, id::GLuint, severity::GLenum, length::GLsizei, buf::Ptr{GLchar})::Void),
:(glUniform2dv(location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glDeleteVertexArrays(n::GLsizei, arrays::Ptr{GLuint})::Void),
:(glIsRenderbuffer(renderbuffer::GLuint)::Bool),
:(glRenderbufferStorage(target::GLenum, internalformat::GLenum, width::GLsizei, height::GLsizei)::Void),
:(glViewportIndexedf(index::GLuint, x::GLfloat, y::GLfloat, w::GLfloat, h::GLfloat)::Void),
:(glGetProgramResourceLocationIndex(program::GLuint, programCinterface::GLenum, name::Ptr{GLchar})::Int),
:(glDispatchCompute(num_groups_x::GLuint, num_groups_y::GLuint, num_groups_z::GLuint)::Void),
:(glCurrentPaletteMatrixARB(index::GLint)::Void),
:(glGetQueryObjectuivARB(id::GLuint, pname::GLenum, params::Ptr{GLuint})::Void),
:(glGetFragDataIndex(program::GLuint, name::Ptr{GLchar})::Cint),
:(glVertexAttrib1fvARB(index::GLuint, v::Ptr{GLfloat})::Void),
:(glVertexP2uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glGetProgramResourceLocation(program::GLuint, programCinterface::GLenum, name::Ptr{GLchar})::Int),
:(glUniform3fARB(location::GLint, v0::GLfloat, v1::GLfloat, v2::GLfloat)::Void),
:(glGetUniformIndices(program::GLuint, uniformCount::GLsizei, uniformNames::Ptr{Uint8}, uniformIndices::Ptr{GLuint})::Void),
:(glDeleteQueriesARB(n::GLsizei, ids::Ptr{GLuint})::Void),
:(glUniform1dv(location::GLint, count::GLsizei, value::Ptr{GLdouble})::Void),
:(glVertexArrayVertexAttribLFormatEXT(vaobj::GLuint, attribindex::GLuint, size::GLint, type_::GLenum, relativeoffset::GLuint)::Void),
:(glMultiTexCoord2fARB(target::GLenum, s::GLfloat, t::GLfloat)::Void),
:(glFramebufferTextureARB(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint)::Void),
:(glGetQueryIndexediv(target::GLenum, index::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glMultiTexCoordP2ui(texture::GLenum, type_::GLenum, coords::GLuint)::Void),
:(glMultiTexCoord4sARB(target::GLenum, s::GLshort, t::GLshort, r::GLshort, q::GLshort)::Void),
:(glProgramUniform1ui(program::GLuint, location::GLint, v0::GLuint)::Void),
:(glBindImageTexture(unit::GLuint, texture::GLuint, level::GLint, layered::GLboolean, layer::GLint, access::GLenum, format::GLenum)::Void),
:(glWeightuivARB(size::GLint, weights::Ptr{GLuint})::Void),
:(glIsBufferARB(buffer::GLuint)::Bool),
:(glVertexAttribL4dv(index::GLuint, v::Ptr{GLdouble})::Void),
:(glDrawTransformFeedbackStreamInstanced(mode::GLenum, id::GLuint, stream::GLuint, instancecount::GLsizei)::Void),
:(glColorP4ui(type_::GLenum, color::GLuint)::Void),
:(glFramebufferTextureLayerARB(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint, layer::GLint)::Void),
:(glCompressedTexImage2DARB(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, height::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glVertexBindingDivisor(bindingindex::GLuint, divisor::GLuint)::Void),
:(glViewportIndexedfv(index::GLuint, v::Ptr{GLfloat})::Void),
:(glVertexAttrib2sARB(index::GLuint, x::GLshort, y::GLshort)::Void),
:(glProgramUniform3fv(program::GLuint, location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glInvalidateTexSubImage(texture::GLuint, level::GLint, xoffset::GLint, yoffset::GLint, zoffset::GLint, width::GLsizei, height::GLsizei, depth::GLsizei)::Void),
:(glDeleteSamplers(count::GLsizei, samplers::Ptr{GLuint})::Void),
:(glVertexAttribL2d(index::GLuint, x::GLdouble, y::GLdouble)::Void),
:(glUniform2fvARB(location::GLint, count::GLsizei, value::Ptr{GLfloat})::Void),
:(glTexBufferARB(target::GLenum, internalformat::GLenum, buffer::GLuint)::Void),
:(glCompressedTexImage3DARB(target::GLenum, level::GLint, internalformat::GLenum, width::GLsizei, height::GLsizei, depth::GLsizei, border::GLint, imageSize::GLsizei, data::Ptr{Void})::Void),
:(glUniform2d(location::GLint, x::GLdouble, y::GLdouble)::Void),
:(glGetProgramStageiv(program::GLuint, shadertype::GLenum, pname::GLenum, values::Ptr{GLint})::Void),
:(glBufferSubDataARB(target::GLenum, offset::GLintptrARB, size::GLsizeiptrARB, data::Ptr{Void})::Void),
:(glProgramLocalParameter4dARB(target::GLenum, index::GLuint, x::GLdouble, y::GLdouble, z::GLdouble, w::GLdouble)::Void),
:(glGetnMinmaxARB(target::GLenum, reset::GLboolean, format::GLenum, type_::GLenum, bufSize::GLsizei, values::Ptr{Void})::Void),
:(glBindSampler(unit::GLuint, sampler::GLuint)::Void),
:(glUseProgramObjectARB(programObj::GLhandleARB)::Void),
:(glColorP4uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glGetProgramEnvParameterfvARB(target::GLenum, index::GLuint, params::Ptr{GLfloat})::Void),
:(glTexCoordP1ui(type_::GLenum, coords::GLuint)::Void),
:(glBindRenderbuffer(target::GLenum, renderbuffer::GLuint)::Void),
:(glMultiTexCoord1ivARB(target::GLenum, v::Ptr{GLint})::Void),
:(glColorP3uiv(type_::GLenum, color::Ptr{GLuint})::Void),
:(glProgramUniformMatrix2x4fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glMultiTexCoord3dARB(target::GLenum, s::GLdouble, t::GLdouble, r::GLdouble)::Void),
:(glGetProgramPipelineiv(pipeline::GLuint, pname::GLenum, params::Ptr{GLint})::Void),
:(glTexStorage1D(target::GLenum, levels::GLsizei, internalformat::GLenum, width::GLsizei)::Void),
:(glMultiTexCoordP4uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glDeleteBuffersARB(n::GLsizei, buffers::Ptr{GLuint})::Void),
:(glGetSamplerParameterIuiv(sampler::GLuint, pname::GLenum, params::Ptr{GLuint})::Void),
:(glGetUniformLocationARB(programObj::GLhandleARB, name::Ptr{GLcharARB})::Cint),
:(glMultiTexCoordP3uiv(texture::GLenum, type_::GLenum, coords::Ptr{GLuint})::Void),
:(glMultiTexCoord4ivARB(target::GLenum, v::Ptr{GLint})::Void),
:(glGetProgramResourceName(program::GLuint, programInterface::GLenum, index::GLuint, bufSize::GLsizei, length::Ptr{GLsizei}, name::Ptr{GLchar})::Void),
:(glVertexP3uiv(type_::GLenum, value::Ptr{GLuint})::Void),
:(glVertexAttrib4NivARB(index::GLuint, v::Ptr{GLint})::Void),
:(glVertexAttribIFormat(attribindex::GLuint, size::GLint, type_::GLenum, relativeoffset::GLuint)::Void),
:(glDispatchComputeIndirect(indirect::GLintptr)::Void),
:(glProgramUniform4i(program::GLuint, location::GLint, v0::GLint, v1::GLint, v2::GLint, v3::GLint)::Void),
:(glVertexP4ui(type_::GLenum, value::GLuint)::Void),
:(glUniformMatrix3x4dv(location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLdouble})::Void),
:(glMultiTexCoord4dARB(target::GLenum, s::GLdouble, t::GLdouble, r::GLdouble, q::GLdouble)::Void),
:(glProgramUniform1d(program::GLuint, location::GLint, v0::GLdouble)::Void),
:(glGetFloati_v(target::GLenum, index::GLuint, data::Ptr{GLfloat})::Void),
:(glDeleteNamedStringARB(namelen::GLint, name::Ptr{GLchar})::Void),
:(glFramebufferTextureFaceARB(target::GLenum, attachment::GLenum, texture::GLuint, level::GLint, face::GLenum)::Void),
:(glDetachObjectARB(containerObj::GLhandleARB, attachedObj::GLhandleARB)::Void),
:(glVertexAttribFormat(attribindex::GLuint, size::GLint, type_::GLenum, normalized::GLboolean, relativeoffset::GLuint)::Void),
:(glWindowPos2dARB(x::GLdouble, y::GLdouble)::Void),
:(glShaderStorageBlockBinding(program::GLuint, storageBlockIndex::GLuint, storageBlockBinding::GLuint)::Void),
:(glIsFramebuffer(framebuffer::GLuint)::Bool),
:(glVertexAttribP1uiv(index::GLuint, type_::GLenum, normalized::GLboolean, value::Ptr{GLuint})::Void),
:(glWindowPos2ivARB(v::Ptr{GLint})::Void),
:(glWindowPos3fvARB(v::Ptr{GLfloat})::Void),
:(glTexImage2DMultisample(target::GLenum, samples::GLsizei, internalformat::GLint, width::GLsizei, height::GLsizei, fixedsamplelocations::GLboolean)::Void),
:(glDepthRangef(n::GLfloat, f::GLfloat)::Void),
:(glLinkProgramARB(programObj::GLhandleARB)::Void),
:(glProgramUniformMatrix3x2fv(program::GLuint, location::GLint, count::GLsizei, transpose::GLboolean, value::Ptr{GLfloat})::Void),
:(glGetAttachedObjectsARB(containerObj::GLhandleARB, maxCount::GLsizei, count::Ptr{GLsizei}, obj::Ptr{GLhandleARB})::Void),
:(glGetNamedStringARB(namelen::GLint, name::Ptr{GLchar}, bufSize::GLsizei, stringlen::Ptr{GLint}, string_::Ptr{GLchar})::Void),
:(glGetBufferPointervARB(target::GLenum, pname::GLenum, params::Ptr{Ptr{Void}})::Void),
:(glIsQueryARB(id::GLuint)::Bool)]
